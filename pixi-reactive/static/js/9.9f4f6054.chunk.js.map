{"version":3,"sources":["views/pages/ColorMatrixFilter.tsx","views/PropsTable.tsx","views/CodeViewer.tsx","views/ComponentLink.tsx","views/PageIndex.tsx","views/pages/Filters.tsx"],"names":["alphaProps","filterProps","textures","galaxy","ship","ColorMatrixFilterExample","enabled","useState","trackSize","setTrackSize","resize","useCallback","size","width","reducer","position","useReducer","update","onUpdate","onResize","texture","x","alignY","rotation","ColorMatrixFilterDoc","setEnabled","toggle","page","Pages","Effects","style","textAlign","marginRight","defaultChecked","onChange","height","src","props","pageUrlMap","StyledCode","styled","code","getTypeLinks","a","getPageChildren","Types","pages","map","Map","i","length","getComponentUrl","path","set","PropsTable","types","setTypes","useEffect","then","prop","index","f7","has","text","href","get","external","split","content","SyntaxHighlighter","registerLanguage","tsx","CodeViewer","children","setCode","fetch","response","darcula","language","showLineNumbers","ComponentLink","className","url","setUrl","buildIndex","items","push","PageIndex","showTitle","links","setLinks","Filters"],"mappings":"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","file":"static/js/9.9f4f6054.chunk.js","sourcesContent":["import { Block, Toggle } from 'framework7-react';\nimport { PixiCanvas, PixiSprite, PixiTilingSprite, ColorMatrixFilter, NegativeEffect, HueEffect } from 'pixi-reactive';\nimport React, { useCallback, useReducer, useState } from 'react';\nimport { Pages } from '../../pages';\nimport ComponentLink from '../ComponentLink';\nimport { filterProps } from './Filters';\nimport CodeViewer from '../CodeViewer';\nimport PropsTable, { PropsDefinition } from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst alphaProps: PropsDefinition = [\n  ['alpha', false, 'number', '1', 'The opacity value to use when mixing the original and resultant colors'],\n  ...filterProps\n];\n\nconst textures = {\n  galaxy: './static/assets/galaxy.png',\n  ship: './static/assets/spaceship.png'\n};\n\nconst ColorMatrixFilterExample: React.FC<{ enabled: boolean }> = ({ enabled }) => {\n  const [trackSize, setTrackSize] = useState(0);\n  const resize = useCallback((size) => setTrackSize(size.width + 300), []);\n  const reducer = useCallback((position) => (position + 1) % trackSize, [trackSize]);\n  const [position, update] = useReducer(reducer, 0);\n\n  return (\n    <PixiCanvas textures={textures} onUpdate={update} onResize={resize}>\n      <PixiTilingSprite texture={'galaxy'} />\n      <PixiSprite texture={'ship'} x={position - 150} alignY={0.5}>\n        <ColorMatrixFilter enabled={enabled}>\n          <NegativeEffect />\n          <HueEffect rotation={45} />\n        </ColorMatrixFilter>\n      </PixiSprite>\n    </PixiCanvas>\n  );\n};\n\nconst ColorMatrixFilterDoc: React.FC = () => {\n  const [enabled, setEnabled] = useState(true);\n  const toggle = useCallback(() => setEnabled(!enabled), [enabled]);\n\n  return (\n    <>\n      <StyledTitle>ColorMatrixFilter</StyledTitle>\n      <StyledIntroduction>\n        This filter lets you apply a 5x4 matrix transformation on the RGBA color and alpha values of every pixel on your element. The filter\n        will accept one or more effect children that will build up the final color matrix. For more details about all the effects available,\n        please refer to the <ComponentLink page={Pages.Effects} /> section.\n      </StyledIntroduction>\n      <Block style={{ textAlign: 'right' }}>\n        <span style={{ marginRight: 10 }}>{'Toggle Filter'}</span>\n        <Toggle defaultChecked onChange={toggle} />\n      </Block>\n      <Block style={{ height: 300 }}>\n        <ColorMatrixFilterExample enabled={enabled} />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/ColorMatrixFilterExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={alphaProps} />\n    </>\n  );\n};\n\nexport default ColorMatrixFilterDoc;\n","import { Block, Icon } from 'framework7-react';\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { getComponentUrl, getPageChildren, Pages } from '../pages';\nimport { StyledTable, StyledLink, StyledTableContainer } from './StyledComponents';\n\ntype PropDefinition = [string, boolean, string, string, string];\nexport type PropsDefinition = PropDefinition[];\n\nexport const StyledCode = styled.code`\n  background: rgba(100, 100, 100, 0.5);\n  padding: 0 5px;\n  border-radius: 2px;\n`;\n\nexport const parseCode = (text: string) => {\n  const parts = text.split(/`/);\n\n  return parts.map((content, index) => {\n    if (index % 2 === 0) {\n      return <span key={index}>{content}</span>;\n    } else {\n      return <StyledCode key={index}>{content}</StyledCode>;\n    }\n  });\n};\n\nlet pageUrlMap: Map<Pages, string>;\n\nconst getTypeLinks = async () => {\n  if (!pageUrlMap) {\n    const pages = await getPageChildren(Pages.Types);\n    const map = new Map<Pages, string>();\n\n    for (let i = 0; i < pages.length; i++) {\n      const path = await getComponentUrl(pages[i]);\n\n      map.set(pages[i], `#${path}`);\n    }\n\n    pageUrlMap = map;\n  }\n\n  return pageUrlMap;\n};\n\nconst PropsTable: React.FC<{ props: PropsDefinition }> = ({ props = [] }) => {\n  const [types, setTypes] = useState<Map<Pages, string>>();\n\n  useEffect(() => {\n    getTypeLinks().then(setTypes);\n  }, []);\n\n  return (\n    <Block>\n      <StyledTableContainer>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Required</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.map((prop, index) => {\n              return (\n                <tr key={index}>\n                  <td>{prop[0]}</td>\n                  <td>{prop[1] ? <Icon f7={'checkmark_alt'} size={14} /> : null}</td>\n                  <td>\n                    <code>\n                      {types && types.has(prop[2] as Pages) ? (\n                        <StyledLink text={prop[2]} href={types.get(prop[2] as Pages)} external />\n                      ) : (\n                        prop[2]\n                      )}\n                    </code>\n                  </td>\n                  <td>\n                    <code>{prop[3]}</code>\n                  </td>\n                  <td>{parseCode(prop[4])}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </StyledTable>\n      </StyledTableContainer>\n    </Block>\n  );\n};\n\nexport default PropsTable;\n","import React, { ReactText, useEffect, useState } from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nconst CodeViewer: React.FC<{src?: string, children?: ReactText}> = ({ src, children = '' }) => {\n  const [code, setCode] = useState(children);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src).then(response => response.text()).then(text => setCode(text));\n    }\n  }, [src]);\n\n  useEffect(() => {\n    if (children) {\n      setCode(children);\n    }\n  }, [children]);\n\n  return (\n    <SyntaxHighlighter style={darcula} language={'tsx'} showLineNumbers>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeViewer;\n","import React, { useEffect, useState } from 'react';\nimport { getComponentUrl, Pages } from '../pages';\nimport { StyledComponentLink } from './StyledComponents';\n\nconst ComponentLink: React.FC<{ page: Pages; className?: string }> = ({ page, className }) => {\n  const [url, setUrl] = useState<string | undefined>();\n\n  useEffect(() => {\n    getComponentUrl(page).then((url) => setUrl(`#${url}`));\n  }, [page]);\n\n  return <StyledComponentLink className={className} href={url} key={page} text={page} external />;\n};\n\nexport default ComponentLink;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { getComponentUrl, getPageChildren, PageIndexProps, Pages } from '../pages';\nimport { StyledTitle, IndexComponentLink } from './StyledComponents';\n\nconst buildIndex = async (page: Pages) => {\n  const items: ReactElement[] = [];\n  const pages = await getPageChildren(page);\n\n  for (let i = 0; i < pages.length; i++) {\n    const url = await getComponentUrl(pages[i]);\n\n    items.push(<IndexComponentLink href={`#${url}`} key={pages[i]} text={pages[i]} external />);\n  }\n\n  return items;\n};\n\nconst PageIndex: React.FC<PageIndexProps> = ({ page, showTitle = true }) => {\n  const [links, setLinks] = useState<ReactElement[]>([]);\n\n  useEffect(() => {\n    buildIndex(page).then(setLinks);\n  }, [page]);\n\n  return (\n    <>\n      {showTitle && <StyledTitle>{`All ${page}`}</StyledTitle>}\n      {links}\n    </>\n  );\n};\n\nexport default PageIndex;\n","import React from 'react';\nimport { Pages } from '../../pages';\nimport PageIndex from '../PageIndex';\nimport { PropsDefinition } from '../PropsTable';\n\nexport const filterProps: PropsDefinition = [\n  ['blendMode', false, 'BlendMode', 'BlendModes.Normal', 'Mode used to blend the filter with the element'],\n  ['autoFit', false, 'boolean', 'true', 'If enabled, it will fit the filter area into boundaries for better performance'],\n  ['enabled', false, 'boolean', 'true', 'Whether the filter is applied to the element or not'],\n  [\n    'padding',\n    false,\n    'number',\n    '0',\n    'Some filters require extra space to breath such as a blur. Increasing this will add extra width and height to the ' +\n    'bounds of the object that the filter is applied to'\n  ],\n  ['resolution', false, 'number', '1', 'The resolution of the filter']\n];\n\nconst Filters: React.FC = () => {\n  return <PageIndex page={Pages.Filters} />;\n};\n\nexport default Filters;\n"],"sourceRoot":""}