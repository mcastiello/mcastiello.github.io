{"version":3,"sources":["views/pages/Types.tsx","views/PageIndex.tsx"],"names":["Types","page","Pages","buildIndex","dispatch","a","items","getPageChildren","pages","i","getComponentUrl","url","push","href","key","text","onClick","length","PageIndex","showTitle","useState","links","setLinks","useContext","DispatchContext","useEffect","then"],"mappings":"iIAAA,4CAQeA,UAJS,WACtB,OAAO,kBAAC,IAAD,CAAWC,KAAMC,IAAMF,U,sGCD1BG,EAAU,uCAAG,WAAOF,EAAaG,GAApB,qBAAAC,EAAA,6DACXC,EAAwB,GADb,SAEGC,YAAgBN,GAFnB,OAEXO,EAFW,WAAAH,EAAA,iBAIRI,GAJQ,eAAAJ,EAAA,sEAKGK,YAAgBF,EAAMC,IALzB,OAKTE,EALS,OAOfL,EAAMM,KAAK,kBAAC,IAAD,CAAoBC,KAAI,WAAMF,GAAOG,IAAKN,EAAMC,GAAIM,KAAMP,EAAMC,GAAIO,QAAS,kBAAMZ,EAASI,EAAMC,QAP9F,0CAIRA,EAAI,EAJI,YAIDA,EAAID,EAAMS,QAJT,0CAIRR,GAJQ,eAIiBA,IAJjB,gDAUVH,GAVU,4CAAH,wDA6BDY,IAhB6B,SAAC,GAAgC,IAA9BjB,EAA6B,EAA7BA,KAA6B,IAAvBkB,iBAAuB,WAChDC,mBAAyB,IADuB,mBACnEC,EADmE,KAC5DC,EAD4D,KAElElB,EAAamB,qBAAWC,KAAxBpB,SAMR,OAJAqB,qBAAU,WACRtB,EAAWF,EAAMG,GAAUsB,KAAKJ,KAC/B,CAACrB,EAAMG,IAGR,oCACGe,GAAa,kBAAC,IAAD,mBAAqBlB,IAClCoB","file":"static/js/58.31cc8af5.chunk.js","sourcesContent":["import React from 'react';\nimport { Pages } from '../../pages';\nimport PageIndex from '../PageIndex';\n\nconst Types: React.FC = () => {\n  return <PageIndex page={Pages.Types} />;\n};\n\nexport default Types;\n","import React, { ReactElement, useContext, useEffect, useState } from 'react';\nimport { DispatchContext, getComponentUrl, getPageChildren, PageIndexProps, Pages } from '../pages';\nimport { StyledTitle, IndexComponentLink } from './StyledComponents';\n\nconst buildIndex = async (page: Pages, dispatch: (page: Pages) => void) => {\n  const items: ReactElement[] = [];\n  const pages = await getPageChildren(page);\n\n  for (let i = 0; i < pages.length; i++) {\n    const url = await getComponentUrl(pages[i]);\n\n    items.push(<IndexComponentLink href={`#${url}`} key={pages[i]} text={pages[i]} onClick={() => dispatch(pages[i])} />);\n  }\n\n  return items;\n};\n\nconst PageIndex: React.FC<PageIndexProps> = ({ page, showTitle = true }) => {\n  const [links, setLinks] = useState<ReactElement[]>([]);\n  const { dispatch } = useContext(DispatchContext);\n\n  useEffect(() => {\n    buildIndex(page, dispatch).then(setLinks);\n  }, [page, dispatch]);\n\n  return (\n    <>\n      {showTitle && <StyledTitle>{`All ${page}`}</StyledTitle>}\n      {links}\n    </>\n  );\n};\n\nexport default PageIndex;\n"],"sourceRoot":""}