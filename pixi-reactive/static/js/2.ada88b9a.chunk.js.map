{"version":3,"sources":["views/CodeViewer.tsx","views/PropsTable.tsx","../../src/types/AnimationContextTypes.ts","../../src/types/RenderingContextTypes.ts","../../src/types/SpeedContextTypes.ts","../../src/types/GenericTypes.ts","../../src/types/EventTypes.ts","../../src/types/BlendModesTypes.ts","../../src/types/TextStyleTypes.ts","../../src/types/EffectTypes.ts","../../src/contexts/AnimationContext.ts","../../src/types/PointerContextType.ts","../../src/contexts/ParentContext.ts","../../src/contexts/RenderingContext.ts","../../src/contexts/SpeedContext.ts","../../src/contexts/TextureContext.ts","../../src/contexts/PointerContext.ts","../../src/contexts/EffectContext.ts","../../src/props/PixiSpriteProps.ts","../../src/props/PixiTilingSpriteProps.ts","../../src/props/PixiAnimatedSpriteProps.ts","../../src/props/PixiFilterProps.ts","../../src/hooks/genericHooks.ts","../../src/hooks/contextHooks.ts","../../src/hooks/propHooks.ts","../../src/components/PixiCanvas.tsx","../../src/components/PixiDisplayObject.tsx","../../src/components/PixiHtmlContainer.tsx","../../src/components/PixiContainer.tsx","../../src/components/PixiTexture.tsx","../../src/components/PixiRenderTexture.tsx","../../src/components/PixiSprite.tsx","../../src/components/PixiTilingSprite.tsx","../../src/components/PixiAnimatedSprite.tsx","../../src/components/PixiText.tsx","../../src/components/PixiMask.tsx","../../src/filters/PixiFilter.tsx","../../src/filters/AlphaFilter.tsx","../../src/filters/BlurFilter.tsx","../../src/filters/FXAAFilter.tsx","../../src/filters/NoiseFilter.tsx","../../src/filters/ColorMatrixFilter.tsx","../../src/filters/effects/BlackAndWhiteEffect.tsx","../../src/filters/effects/BrightnessEffect.tsx","../../src/filters/effects/BrowniEffect.tsx","../../src/filters/effects/ColorToneEffect.tsx","../../src/filters/effects/ContrastEffect.tsx","../../src/filters/effects/DesaturateEffect.tsx","../../src/filters/effects/GreyScaleEffect.tsx","../../src/filters/effects/HueEffect.tsx","../../src/filters/effects/KodachromeEffect.tsx","../../src/filters/effects/LsdEffect.tsx","../../src/filters/effects/NegativeEffect.tsx","../../src/filters/effects/NightEffect.tsx","../../src/filters/effects/PolaroidEffect.tsx","../../src/filters/effects/PredatorEffect.tsx","../../src/filters/effects/SaturateEffect.tsx","../../src/filters/effects/SepiaEffect.tsx","../../src/filters/effects/TechnicolorEffect.tsx","../../src/filters/effects/ToBGREffect.tsx","../../src/filters/effects/VintageEffect.tsx"],"names":["SyntaxHighlighter","registerLanguage","tsx","CodeViewer","src","children","useState","code","setCode","useEffect","fetch","then","response","text","style","darcula","language","showLineNumbers","StyledCode","styled","PropsTable","props","types","setTypes","getPageChildren","Pages","Types","map","prop","index","key","f7","size","includes","external","split","content","AnimationActionType","RenderingContextAction","SpeedContextAction","CursorType","Overflow","GenericProps","Events","BlendModes","BlendModesMap","Map","PIXI","TextAlign","TextGradient","TextLineJoin","TextBaseline","TextWhiteLine","FontStyle","FontVariant","FontWeight","defaultTextStyle","align","breakWords","dropShadow","dropShadowAlpha","dropShadowAngle","Math","dropShadowBlur","dropShadowColor","dropShadowDistance","fill","fillGradientType","fillGradientStops","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","letterSpacing","lineHeight","lineJoin","miterLimit","padding","stroke","strokeThickness","textBaseline","trim","whiteSpace","wordWrap","wordWrapWidth","leading","EffectType","EffectActionType","AnimationContext","React","frameId","elapsed","fps","averageFps","minFps","maxFps","history","defaultParentContext","parent","x","y","width","height","top","left","ParentContext","defaultRenderingContext","update","getTexture","renderId","stage","RenderingContext","initialSpeedState","speed","SpeedContext","play","pause","increase","decrease","setSpeed","TextureContext","PointerContext","over","EffectContext","updateEffect","removeEffect","PointerContextActionType","isSprite","element","SpriteProps","TilingSpriteProps","isAnimatedSprite","item","FilterProps","useId","id","v4","state","setState","useRelativePosition","setLeft","setTop","anchor","setAnchor","useFilter","useContext","useTexture","context","textureName","texture","setTexture","loadedTexture","currentScale","sprite","useTextureUpdate","emptyIndex","cleanName","name","textureLoaded","loadedResources","isTouchEvent","event","usePointerContext","retina","offset","setOffset","reducer","useCallback","action","useReducer","pointerContext","triggerUpdatePosition","multiplier","type","updateMousePosition","offsetX","offsetY","updateTouchPosition","clientX","clientY","StartOver","EndOver","updatePosition","isMouseEvent","pointerStart","pointerEnd","propsToMap","Object","getMapUpdate","propMap","updatedMap","newValue","value","useGenericProps","updatedProperties","setUpdatedProperties","rectangle","updateGenericProps","useSpriteProps","propsMap","updateSpriteProps","useAlignedPosition","parentWidth","parentHeight","alignX","alignY","useTilingSpriteProps","tileProps","updateTilingSpriteProps","useFilterProps","filterProps","updateFilterProps","filter","useEvent","callback","defaultStyle","position","right","margin","PixiCanvas","className","textures","overflow","All","filterArea","onUpdate","onAfterRender","onResize","canvasId","speedContext","dispatch","Increase","Decrease","Play","Pause","useSpeedContext","textureContext","resources","loader","cleanedName","resource","frames","resourceName","count","existingResource","console","useTextureContext","animationContext","initialState","latestFps","fpsHistory","MAX_HISTORY_SIZE","a","useAnimationContext","renderingContext","canvasReference","canvas","setCanvas","renderer","setRenderer","Update","render","Render","reference","document","view","transparent","useRenderingContext","genericParentContext","containerStyle","setContainerStyle","parentContext","setParentContext","newStyle","containerWidth","containerHeight","canvasWidth","canvasHeight","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","onPointerEnter","onPointerOver","onPointerOut","onPointerCancel","onPointerLeave","onPointerMove","PixiDisplayObject","useElement","setX","setY","setWidth","setHeight","transform","setTransform","useParentContext","alpha","angle","buttonMode","cursor","None","interactive","rotation","visible","zIndex","pivotX","pivotY","scaleX","scaleY","skewX","skewY","sortableChildren","SORTABLE_CHILDREN","hitArea","onClick","onMouseDown","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onMouseUpOutside","onPointerDown","onPointerTap","onPointerUp","onPointerUpOutside","onRemovedFrom","onRightClick","onRightDown","onRightUp","onRightUpOutside","onTap","onTouchEndOutside","onAdded","onRemoved","onChildAdded","callbacks","useDisplayObjectEvents","PixiHtmlContainer","setStyle","active","setActive","display","PixiContainer","container","PixiTexture","onLoad","textureId","loadCallback","PixiRenderTexture","parentRenderContext","parentUpdate","newTexture","PixiSprite","anchorX","anchorY","blendMode","Normal","roundPixels","tint","undefined","PixiTilingSprite","tileWidth","setTileWidth","tileHeight","setTileHeight","clampMargin","tileX","tileY","tileScaleX","tileScaleY","uvRespectAnchor","PixiAnimatedSprite","playing","resetOnStop","currentFrame","onAnimationComplete","setFrameId","initialFrame","setInitialFrame","frameCount","setTextures","setCount","textureList","frameList","Array","useFrames","frame","initialTime","duration","isNaN","time","Reset","useFrameAnimation","PixiText","String","isTextureMode","PixiMask","enabled","PixiFilter","autoFit","resolution","FILTER_RESOLUTION","effects","setEffects","AlphaFilter","BlurFilter","blur","blurX","blurY","quality","repeatEdgePixels","FXAAFilter","FXAA_SEED","noise","seed","ColorMatrixFilter","effectMap","effectData","params","multiply","updateColorMatrix","BlackAndWhiteEffect","effect","BlackAndWhite","BrightnessEffect","amount","BrowniEffect","Browni","ColorToneEffect","desaturation","toned","lightColor","darkColor","ContrastEffect","DesaturateEffect","Desaturate","GreyScaleEffect","HueEffect","KodachromeEffect","Kodachrome","LsdEffect","Lsd","NegativeEffect","Negative","NightEffect","PolaroidEffect","Polaroid","PredatorEffect","SaturateEffect","SepiaEffect","Sepia","TechnicolorEffect","Technicolor","ToBGREffect","ToBGR","VintageEffect","Vintage"],"mappings":"uLAKAA,IAAkBC,iBAAiB,MAAOC,KAyB3BC,IAvBoD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAyB,IAApBC,gBAAoB,MAAT,GAAS,IACrEC,mBAASD,GAD4D,mBACtFE,EADsF,KAChFC,EADgF,KAe7F,OAZAC,qBAAU,WACJL,GACFM,MAAMN,GAAKO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAE,GAAI,OAAIL,EAAQK,QAEnE,CAACT,IAEJK,qBAAU,WACJJ,GACFG,EAAQH,KAET,CAACA,IAIF,kBAAC,IAAD,CAAmBS,MAAOC,IAASC,SAAU,MAAOC,iBAAe,GAChEV,K,iSChBA,IAAMW,EAAaC,IAAOZ,KAAV,KA6DRa,IA3C0C,SAAC,GAAoB,IAAD,IAAjBC,aAAiB,MAAT,GAAS,IACjDf,mBAAkB,IAD+B,mBACpEgB,EADoE,KAC7DC,EAD6D,KAO3E,OAJAd,qBAAU,WACRe,YAAgBC,IAAMC,OAAOf,KAAKY,KACjC,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BACE,4BACE,oCACA,wCACA,oCACA,uCACA,6CAGJ,+BACGF,EAAMM,KAAI,SAACC,EAAMC,GAChB,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAK,IACV,4BAAKA,EAAK,GAAK,kBAAC,IAAD,CAAMG,GAAI,gBAAiBC,KAAM,KAAS,MACzD,4BACE,8BAAOV,EAAMW,SAASL,EAAK,IAAe,kBAAC,IAAD,CAAYf,KAAMe,EAAK,GAAIM,UAAQ,IAAMN,EAAK,KAE1F,4BACE,8BAAOA,EAAK,KAEd,4BAAeA,EAAK,GA3CjBO,MAAM,KAEZR,KAAI,SAACS,EAASP,GACzB,OAAIA,EAAQ,IAAM,EACT,0BAAMC,IAAKD,GAAQO,GAEnB,kBAAClB,EAAD,CAAYY,IAAKD,GAAQO,iB,2uDCPtC,ECJA,ECFA,ECPA,EAuCA,EAOA,EC1CA,ECJA,E,2PLaA,SAAYC,GACVA,2BACAA,qBAFF,CAAYA,MAAZ,KCJA,SAAYC,GACVA,uBACAA,uBAFF,CAAYA,MAAZ,KCFA,SAAYC,GACVA,2BACAA,2BACAA,qBACAA,mBACAA,iBALF,CAAYA,MAAZ,KCPA,SAAYC,GACVA,cACAA,oBACAA,cACAA,6BACAA,cACAA,oBACAA,sBACAA,cACAA,cACAA,wBACAA,cACAA,+BACAA,gBACAA,cACAA,cACAA,mBACAA,2BACAA,cACAA,sBACAA,yBACAA,yBACAA,yBACAA,yBACAA,wBACAA,yBACAA,wBACAA,8BACAA,8BACAA,8BACAA,8BACAA,6BACAA,+BACAA,yCACAA,yCACAA,mBACAA,qBApCF,CAAYA,MAAZ,KAuCA,SAAYC,GACVA,mBACAA,+BACAA,2BACAA,iBAJF,CAAYA,MAAZ,KAOA,SAAYC,GACVA,gBACAA,gBACAA,0BACAA,kBACAA,4BACAA,cACAA,kBACAA,kBACAA,sBACAA,kBACAA,kBACAA,gBACAA,gBACAA,oBACAA,QACAA,QACAA,kBACAA,gBACAA,kBACAA,sCACAA,0BACAA,oBAtBF,CAAYA,MAAZ,KC1CA,SAAYC,GACVA,gBACAA,wBACAA,wBACAA,sBACAA,wBACAA,oBACAA,kCACAA,gCACAA,4BACAA,4BACAA,0BACAA,4BACAA,0BACAA,wBACAA,sCACAA,4BACAA,0BACAA,wBACAA,oBACAA,kCACAA,YACAA,4BACAA,sBACAA,oCACAA,wBACAA,0BACAA,gBACAA,oBACAA,0BA7BF,CAAYA,MAAZ,KCJA,SAAYC,GACVA,iBACAA,uBACAA,qBACAA,6BACAA,+BACAA,uBACAA,+BACAA,yBACAA,qBACAA,uBACAA,0BACAA,sBACAA,8BACAA,8BACAA,kBACAA,0BACAA,gCACAA,4BACAA,oBACAA,wBACAA,8BACAA,0BACAA,gCACAA,wBACAA,8BACAA,8BACAA,0BACAA,sBACAA,wBACAA,0BACAA,4BACAA,kBAhCF,CAAYA,MAAZ,KAmCO,ICrCP,EAMA,EAKA,EAMA,EASA,EAMA,EAMA,EAKA,EDNaC,EAAgB,IAAIC,IAAwB,CACvD,CAACF,EAAD,IAAiBG,IADsC,KAEvD,CAACH,EAAD,OAAoBG,IAFmC,SAGvD,CAACH,EAAD,MAAmBG,IAHoC,OAIvD,CAACH,EAAD,UAAuB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","file":"static/js/2.ada88b9a.chunk.js","sourcesContent":["import React, { ReactText, useEffect, useState } from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nconst CodeViewer: React.FC<{src?: string, children?: ReactText}> = ({ src, children = '' }) => {\n  const [code, setCode] = useState(children);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src).then(response => response.text()).then(text => setCode(text));\n    }\n  }, [src]);\n\n  useEffect(() => {\n    if (children) {\n      setCode(children);\n    }\n  }, [children]);\n\n  return (\n    // @ts-ignore\n    <SyntaxHighlighter style={darcula} language={'tsx'} showLineNumbers>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeViewer;\n","import { Block, Icon } from 'framework7-react';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getPageChildren, Pages } from '../pages';\nimport { StyledTable, StyledLink, StyledTableContainer } from './StyledComponents';\n\ntype PropDefinition = [string, boolean, string, string, string];\nexport type PropsDefinition = PropDefinition[];\n\nexport const StyledCode = styled.code`\n  background: rgba(100, 100, 100, 0.5);\n  padding: 0 5px;\n  border-radius: 2px;\n`;\n\nexport const parseCode = (text: string) => {\n  const parts = text.split(/`/);\n\n  return parts.map((content, index) => {\n    if (index % 2 === 0) {\n      return <span key={index}>{content}</span>;\n    } else {\n      return <StyledCode key={index}>{content}</StyledCode>;\n    }\n  });\n};\n\nconst PropsTable: React.FC<{ props: PropsDefinition }> = ({ props = [] }) => {\n  const [types, setTypes] = useState<Pages[]>([]);\n\n  useEffect(() => {\n    getPageChildren(Pages.Types).then(setTypes);\n  }, []);\n\n  return (\n    <Block>\n      <StyledTableContainer>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Required</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.map((prop, index) => {\n              return (\n                <tr key={index}>\n                  <td>{prop[0]}</td>\n                  <td>{prop[1] ? <Icon f7={'checkmark_alt'} size={14} /> : null}</td>\n                  <td>\n                    <code>{types.includes(prop[2] as Pages) ? <StyledLink text={prop[2]} external /> : prop[2]}</code>\n                  </td>\n                  <td>\n                    <code>{prop[3]}</code>\n                  </td>\n                  <td>{parseCode(prop[4])}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </StyledTable>\n      </StyledTableContainer>\n    </Block>\n  );\n};\n\nexport default PropsTable;\n","export type AnimationContextType = {\n  fps: number;\n  averageFps: number;\n  maxFps: number;\n  minFps: number;\n  frameId: number;\n  elapsed: number;\n  history: number[];\n};\n\nexport type AnimationState = {\n  time: number;\n  frame: number;\n};\n\nexport enum AnimationActionType {\n  Progress,\n  Reset\n}\n\nexport type AnimationAction = {\n  type: AnimationActionType;\n  value?: number;\n};\n","import * as PIXI from 'pixi.js';\n\nexport type RenderingContextType = {\n  update: () => void;\n  width: number;\n  height: number;\n  stage: PIXI.Container;\n  renderId: number;\n  getTexture: <T extends PIXI.DisplayObject>(container: T, width: number, height: number) => PIXI.RenderTexture | undefined;\n};\n\nexport enum RenderingContextAction {\n  Update,\n  Render\n}\n\nexport type RenderingContextState = {\n  width: number;\n  height: number;\n  renderId: number;\n  update: boolean;\n};\n\nexport type RenderAction = {\n  type: RenderingContextAction;\n};\n","export type SpeedContextType = {\n  speed: number;\n  increase: () => void;\n  decrease: () => void;\n  setSpeed: (value: number) => void;\n  pause: () => void;\n  play: () => void;\n};\n\nexport enum SpeedContextAction {\n  Increase,\n  Decrease,\n  Pause,\n  Play,\n  Set\n}\n\nexport type SpeedAction = {\n  type: SpeedContextAction;\n  value?: number;\n};\n\nexport type SpeedState = {\n  speed: number;\n};\n","import { Rectangle } from './GraphicTypes';\n\nexport enum CursorType {\n  Auto = 'auto',\n  Default = 'default',\n  None = 'none',\n  ContextMenu = 'context-menu',\n  Help = 'help',\n  Pointer = 'pointer',\n  Progress = 'progress',\n  Wait = 'wait',\n  Cell = 'cell',\n  CrossHair = 'crosshair',\n  Text = 'text',\n  VerticalText = 'vertical-text',\n  Alias = 'alias',\n  Copy = 'copy',\n  Move = 'move',\n  NoDrop = 'no-drop',\n  NotAllowed = 'not-allowed',\n  Grab = 'grab',\n  Grabbing = 'grabbing',\n  AllScroll = 'all-scroll',\n  ColResize = 'col-resize',\n  RowResize = 'row-resize',\n  NorthResize = 'n-resize',\n  EastResize = 'e-resize',\n  SouthResize = 's-resize',\n  WestResize = 'w-resize',\n  NorthEastResize = 'ne-resize',\n  NorthWestResize = 'nw-resize',\n  SouthEastResize = 'se-resize',\n  SouthWestResize = 'sw-resize',\n  EastWestResize = 'ew-resize',\n  NorthSouthResize = 'ns-resize',\n  NorthEastSouthWestResize = 'nesw-resize',\n  NorthWestSouthEastResize = 'nwse-resize',\n  ZoomIn = 'zoom-in',\n  ZoomOut = 'zoom-out'\n}\n\nexport enum Overflow {\n  None,\n  Horizontal,\n  Vertical,\n  All\n}\n\nexport enum GenericProps {\n  Alpha = 'alpha',\n  Angle = 'angle', // Rotation in degrees\n  ButtonMode = 'buttonMode',\n  Cursor = 'cursor',\n  Interactive = 'interactive',\n  Name = 'name',\n  PivotX = 'pivotX',\n  PivotY = 'pivotY',\n  Rotation = 'rotation', // Rotation in radians\n  ScaleX = 'scaleX',\n  ScaleY = 'scaleY',\n  SkewX = 'skewX',\n  SkewY = 'skewY',\n  Visible = 'visible',\n  X = 'x',\n  Y = 'y',\n  ZIndex = 'zIndex',\n  Width = 'width',\n  Height = 'height',\n  SortableChildren = 'sortableChildren',\n  FilterArea = 'filterArea',\n  HitArea = 'hitArea'\n}\n\nexport type PropValue = boolean | string | number | Rectangle | undefined;\nexport type GenericPropsMap = Map<GenericProps, PropValue>;\n\nexport type GenericType = {\n  alpha?: number;\n  angle?: number; // Rotation in degrees\n  buttonMode?: boolean;\n  cursor?: CursorType;\n  interactive?: boolean;\n  name?: string;\n  pivotX?: number;\n  pivotY?: number;\n  rotation?: number; // Rotation in radians\n  scaleX?: number;\n  scaleY?: number;\n  skewX?: number;\n  skewY?: number;\n  visible?: boolean;\n  x?: number;\n  y?: number;\n  zIndex?: number;\n  width?: number;\n  height?: number;\n  sortableChildren?: boolean;\n  filterArea?: Rectangle;\n  hitArea?: Rectangle;\n};\n","import { GenericEventType } from './GenericEventTypes';\n\nexport type EventListener = (...args: any[]) => void;\n\nexport type EventsType = GenericEventType;\n\nexport enum Events {\n  Click = 'click',\n  MouseDown = 'mousedown',\n  MouseMove = 'mousemove',\n  MouseOut = 'mouseout',\n  MouseOver = 'mouseover',\n  MouseUp = 'mouseup',\n  MouseUpOutside = 'mouseupoutside',\n  PointerCancel = 'pointercancel',\n  PointerDown = 'pointerdown',\n  PointerMove = 'pointermove',\n  PointerOut = 'pointerout',\n  PointerOver = 'pointerover',\n  PointerTap = 'pointertap',\n  PointerUp = 'pointerup',\n  PointerUpOutside = 'pointerupoutside',\n  RemovedFrom = 'removedfrom',\n  RightClick = 'rightclick',\n  RightDown = 'rightdown',\n  RightUp = 'rightup',\n  RightUpOutside = 'rightupoutside',\n  Tap = 'tap',\n  TouchCancel = 'touchcancel',\n  TouchEnd = 'touchend',\n  TouchEndOutside = 'touchendoutside',\n  TouchMove = 'touchmove',\n  TouchStart = 'touchstart',\n  Added = 'added',\n  Removed = 'removed',\n  ChildAdded = 'childAdded'\n}\n","import * as PIXI from 'pixi.js';\n\nexport enum BlendModes {\n  Add,\n  AddNpm,\n  Color,\n  ColorBurn,\n  ColorDodge,\n  Darken,\n  Difference,\n  DstAtop,\n  DstIn,\n  DstOut,\n  DstOver,\n  Erase,\n  Exclusion,\n  HardLight,\n  Hue,\n  Lighten,\n  Luminosity,\n  Multiply,\n  None,\n  Normal,\n  NormalNpm,\n  Overlay,\n  Saturation,\n  Screen,\n  ScreenNpm,\n  SoftLight,\n  SrcAtop,\n  SrcIn,\n  SrcOut,\n  SrcOver,\n  Subtract,\n  Xor\n}\n\nexport const BlendModesMap = new Map<BlendModes, number>([\n  [BlendModes.Add, PIXI.BLEND_MODES.ADD],\n  [BlendModes.AddNpm, PIXI.BLEND_MODES.ADD_NPM],\n  [BlendModes.Color, PIXI.BLEND_MODES.COLOR],\n  [BlendModes.ColorBurn, PIXI.BLEND_MODES.COLOR_BURN],\n  [BlendModes.ColorDodge, PIXI.BLEND_MODES.COLOR_DODGE],\n  [BlendModes.Darken, PIXI.BLEND_MODES.DARKEN],\n  [BlendModes.Difference, PIXI.BLEND_MODES.DIFFERENCE],\n  [BlendModes.DstAtop, PIXI.BLEND_MODES.DST_ATOP],\n  [BlendModes.DstIn, PIXI.BLEND_MODES.DST_IN],\n  [BlendModes.DstOut, PIXI.BLEND_MODES.DST_OUT],\n  [BlendModes.DstOver, PIXI.BLEND_MODES.DST_OVER],\n  [BlendModes.Erase, PIXI.BLEND_MODES.ERASE],\n  [BlendModes.Exclusion, PIXI.BLEND_MODES.EXCLUSION],\n  [BlendModes.HardLight, PIXI.BLEND_MODES.HARD_LIGHT],\n  [BlendModes.Hue, PIXI.BLEND_MODES.HUE],\n  [BlendModes.Lighten, PIXI.BLEND_MODES.LIGHTEN],\n  [BlendModes.Luminosity, PIXI.BLEND_MODES.LUMINOSITY],\n  [BlendModes.Multiply, PIXI.BLEND_MODES.MULTIPLY],\n  [BlendModes.None, PIXI.BLEND_MODES.NONE],\n  [BlendModes.Normal, PIXI.BLEND_MODES.NORMAL],\n  [BlendModes.NormalNpm, PIXI.BLEND_MODES.NORMAL_NPM],\n  [BlendModes.Overlay, PIXI.BLEND_MODES.OVERLAY],\n  [BlendModes.Saturation, PIXI.BLEND_MODES.SATURATION],\n  [BlendModes.Screen, PIXI.BLEND_MODES.SCREEN],\n  [BlendModes.ScreenNpm, PIXI.BLEND_MODES.SCREEN_NPM],\n  [BlendModes.SoftLight, PIXI.BLEND_MODES.SOFT_LIGHT],\n  [BlendModes.SrcAtop, PIXI.BLEND_MODES.SRC_ATOP],\n  [BlendModes.SrcIn, PIXI.BLEND_MODES.SRC_IN],\n  [BlendModes.SrcOut, PIXI.BLEND_MODES.SRC_OUT],\n  [BlendModes.SrcOver, PIXI.BLEND_MODES.SRC_OVER],\n  [BlendModes.Subtract, PIXI.BLEND_MODES.SUBTRACT],\n  [BlendModes.Xor, PIXI.BLEND_MODES.XOR]\n]);\n","export enum TextAlign {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right'\n}\n\nexport enum TextGradient {\n  LinearVertical,\n  LinearHorizontal\n}\n\nexport enum TextLineJoin {\n  Miter = 'miter',\n  Round = 'round',\n  Bevel = 'bevel'\n}\n\nexport enum TextBaseline {\n  Alphabetic = 'alphabetic',\n  Top = 'top',\n  Hanging = 'hanging',\n  Middle = 'middle',\n  Ideographic = 'ideographic',\n  Bottom = 'bottom'\n}\n\nexport enum TextWhiteLine {\n  Normal = 'normal',\n  Pre = 'pre',\n  PreLine = 'pre-line'\n}\n\nexport enum FontStyle {\n  Normal = 'normal',\n  Italic = 'italic',\n  Oblique = 'oblique'\n}\n\nexport enum FontVariant {\n  Normal = 'normal',\n  SmallCaps = 'small-caps'\n}\n\nexport enum FontWeight {\n  Normal = 'Normal',\n  Bold = 'Bold',\n  Bolder = 'Bolder',\n  Lighter = 'Lighter',\n  W100 = '100',\n  W200 = '200',\n  W300 = '300',\n  W400 = '400',\n  W500 = '500',\n  W600 = '600',\n  W700 = '700',\n  W800 = '800',\n  W900 = '900'\n}\n\nexport type TextStyle = {\n  align?: TextAlign;\n  breakWords?: boolean;\n  dropShadow?: boolean;\n  dropShadowAlpha?: number;\n  dropShadowAngle?: number;\n  dropShadowBlur?: number;\n  dropShadowColor?: string;\n  dropShadowDistance?: number;\n  fill?: string;\n  fillGradientType?: TextGradient;\n  fillGradientStops?: string[];\n  fontFamily?: string;\n  fontSize?: number;\n  fontStyle?: FontStyle;\n  fontVariant?: FontVariant;\n  fontWeight?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  lineJoin?: TextLineJoin;\n  miterLimit?: number;\n  padding?: number;\n  stroke?: string;\n  strokeThickness?: number;\n  textBaseline?: TextBaseline;\n  trim?: boolean;\n  whiteSpace?: TextWhiteLine;\n  wordWrap?: boolean;\n  wordWrapWidth?: number;\n  leading?: number;\n};\n\nexport const defaultTextStyle: TextStyle = {\n  align: TextAlign.Left,\n  breakWords: false,\n  dropShadow: false,\n  dropShadowAlpha: 1,\n  dropShadowAngle: Math.PI / 6,\n  dropShadowBlur: 0,\n  dropShadowColor: 'black',\n  dropShadowDistance: 5,\n  fill: 'black',\n  fillGradientType: TextGradient.LinearHorizontal,\n  fillGradientStops: [],\n  fontFamily: 'Arial',\n  fontSize: 26,\n  fontStyle: FontStyle.Normal,\n  fontVariant: FontVariant.Normal,\n  fontWeight: FontWeight.Normal,\n  letterSpacing: 0,\n  lineHeight: 0,\n  lineJoin: TextLineJoin.Miter,\n  miterLimit: 10,\n  padding: 0,\n  stroke: 'black',\n  strokeThickness: 0,\n  textBaseline: TextBaseline.Alphabetic,\n  trim: false,\n  whiteSpace: TextWhiteLine.Pre,\n  wordWrap: false,\n  wordWrapWidth: 100,\n  leading: 0\n};\n","export enum EffectType {\n  BlackAndWhite,\n  Brightness,\n  Browni,\n  ColorTone,\n  Contrast,\n  Desaturate,\n  GreyScale,\n  Hue,\n  Kodachrome,\n  Lsd,\n  Negative,\n  Night,\n  Polaroid,\n  Predator,\n  Saturate,\n  Sepia,\n  Technicolor,\n  ToBGR,\n  Vintage\n}\n\nexport enum EffectActionType {\n  UpdateEffect,\n  RemoveEffect\n}\n\nexport type EffectValue = {\n  id: string;\n  multiply?: boolean;\n  effect?: EffectType;\n  params?: number[];\n  enabled?: boolean;\n};\n\nexport type EffectAction = {\n  type: EffectActionType;\n  value: EffectValue;\n};\n\nexport type EffectState = {\n  effects: string[];\n  effectMap: Map<string, EffectValue>;\n};\n\nexport type EffectContextType = {\n  updateEffect: (value: EffectValue) => void;\n  removeEffect: (id: string) => void;\n};\n","import { AnimationContextType } from '../types';\nimport React from 'react';\n\nconst defaultAnimationContext: AnimationContextType = {\n  frameId: 0,\n  elapsed: 0,\n  fps: 0,\n  averageFps: 0,\n  minFps: 0,\n  maxFps: 0,\n  history: []\n};\n\nexport const AnimationContext = React.createContext(defaultAnimationContext);\n","export type PointerContextType = {\n  x: number;\n  y: number;\n  over: boolean;\n};\n\nexport enum PointerContextActionType {\n  UpdatePosition,\n  StartOver,\n  EndOver\n}\nexport type PointerContextAction = {\n  type: PointerContextActionType;\n  x?: number;\n  y?: number;\n};\n","import React from 'react';\nimport { ParentContextType } from '../types';\nimport * as PIXI from 'pixi.js';\n\nexport const defaultParentContext: ParentContextType<PIXI.Container> = {\n  parent: new PIXI.Container(),\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0\n};\n\nexport const ParentContext = React.createContext(defaultParentContext);\n","import * as PIXI from 'pixi.js';\nimport { RenderingContextType } from '../types';\nimport React from 'react';\n\nconst defaultRenderingContext: RenderingContextType = {\n  update: () => null,\n  getTexture: () => undefined,\n  width: 0,\n  height: 0,\n  renderId: 0,\n  stage: new PIXI.Container()\n};\n\nexport const RenderingContext = React.createContext(defaultRenderingContext);\n","import { SpeedContextType, SpeedState } from '../types';\nimport React from 'react';\n\nconst defaultSpeedContext: SpeedContextType = {\n  speed: 1,\n  play: () => null,\n  pause: () => null,\n  increase: () => null,\n  decrease: () => null,\n  setSpeed: () => null\n};\n\nexport const initialSpeedState: SpeedState = {\n  speed: 1\n};\n\nexport const SpeedContext = React.createContext(defaultSpeedContext);\n","import React from 'react';\nimport { TextureContextType } from '../types';\n\nexport const TextureContext = React.createContext<TextureContextType>({});\n","import React from 'react';\nimport { PointerContextType } from '../types/PointerContextType';\n\nexport const PointerContext = React.createContext<PointerContextType>({ x: 0, y: 0, over: false });\n","import React from 'react';\nimport { EffectContextType } from '../types';\n\nexport const EffectContext = React.createContext<EffectContextType>({\n  updateEffect: () => null,\n  removeEffect: () => null\n});\n","import { BlendModes, GenericEventType, GenericType, PropValue } from '../types';\n\nexport const isSprite = (element: PIXI.DisplayObject): element is PIXI.Sprite => {\n  return element.isSprite;\n};\n\nexport type UpdatableTextureType = {\n  texture?: string;\n};\n\nexport type SpritePropsType = {\n  alignX?: number;\n  alignY?: number;\n  anchorX?: number;\n  anchorY?: number;\n  blendMode?: BlendModes;\n  roundPixels?: boolean;\n  tint?: number;\n};\n\nexport enum SpriteProps {\n  AnchorX = 'anchorX',\n  AnchorY = 'anchorY',\n  BlendMode = 'blendMode',\n  RoundPixels = 'roundPixels',\n  Tint = 'tint'\n}\n\nexport type SpritePropsMap = Map<SpriteProps, PropValue>;\n\nexport type PixiSpriteProps = GenericType & GenericEventType & SpritePropsType & UpdatableTextureType;\n","import { PropValue } from '../types';\nimport { PixiSpriteProps } from './PixiSpriteProps';\n\nexport type TilingSpritePropsType = {\n  clampMargin?: number;\n  tileX?: number;\n  tileY?: number;\n  tileScaleX?: number;\n  tileScaleY?: number;\n  uvRespectAnchor?: boolean;\n};\n\nexport enum TilingSpriteProps {\n  ClampMargin = 'clampMargin',\n  TileX = 'tileX',\n  TileY = 'tileY',\n  TileScaleX = 'tileScaleX',\n  TileScaleY = 'tileScaleY',\n  UvRespectAnchor = 'uvRespectAnchor'\n}\n\nexport type TilingSpritePropsMap = Map<TilingSpriteProps, PropValue>;\n\nexport type PixiTilingSpriteProps = PixiSpriteProps & TilingSpritePropsType;\n","import * as PIXI from 'pixi.js';\nimport { EventListener } from '../types';\nimport { PixiSpriteProps } from './PixiSpriteProps';\n\nexport const isAnimatedSprite = (item: PIXI.Container): item is PIXI.AnimatedSprite => {\n  return !!((item as unknown) as PIXI.AnimatedSprite).textures;\n};\n\nexport type AnimatedSpriteProps = {\n  frames?: string[] | string;\n  playing?: boolean;\n  resetOnStop?: boolean;\n  currentFrame?: number;\n  fps?: number;\n  onAnimationComplete?: EventListener;\n};\n\nexport type PixiAnimatedSpriteProps = PixiSpriteProps & AnimatedSpriteProps;\n","import * as PIXI from 'pixi.js';\nimport { BlendModes, PropValue } from '../types';\n\nexport type AbstractFilterProps = {\n  autoFit?: boolean;\n  blendMode?: BlendModes;\n  enabled?: boolean;\n  padding?: number;\n  resolution?: number;\n};\n\nexport enum FilterProps {\n  AutoFit = 'autoFit',\n  BlendMode = 'blendMode',\n  Enabled = 'enabled',\n  Padding = 'padding',\n  Resolution = 'resolution',\n  Alpha = 'alpha',\n  Blur = 'blur',\n  BlurX = 'blurX',\n  BlurY = 'blurY',\n  Quality = 'quality',\n  RepeatEdgePixels = 'repeatEdgePixels',\n  Noise = 'noise',\n  Seed = 'seed'\n}\n\nexport type FilterPropsMap = Map<FilterProps, PropValue>;\n\nexport type PixiFilterProps<T extends PIXI.Filter> = AbstractFilterProps & {\n  item: T;\n};\n\nexport type BlurFilterProps = AbstractFilterProps & {\n  blur?: number;\n  blurX?: number;\n  blurY?: number;\n  quality?: number;\n  repeatEdgePixels?: boolean;\n};\n\nexport type AlphaFilterProps = AbstractFilterProps & {\n  alpha?: number;\n};\n\nexport type NoiseFilterProps = AbstractFilterProps & {\n  noise?: number;\n  seed?: number;\n};\n\nexport type AllFilterProps = AbstractFilterProps | BlurFilterProps | AlphaFilterProps | NoiseFilterProps;\n","import * as PIXI from 'pixi.js';\nimport { useCallback, useContext, useEffect, useReducer, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { AnimationContext, ParentContext, RenderingContext, TextureContext } from '../contexts';\nimport { isAnimatedSprite, isSprite } from '../props';\nimport { AnimationAction, AnimationActionType, AnimationState } from '../types';\n\nexport const useId = (id?: string) => {\n  const [state, setState] = useState(v4());\n\n  useEffect(() => {\n    setState(id ? id : v4());\n  }, [id]);\n\n  return state;\n};\n\nexport const useElement = <T extends PIXI.Container>(item: T) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const [element] = useState(item);\n\n  useEffect(() => {\n    return () => {\n      element.destroy();\n    };\n  }, [element]);\n\n  useEffect(() => {\n    element.setParent(parent);\n    update();\n  }, [element, parent, update]);\n\n  return element;\n};\n\nexport const useRelativePosition = <T extends PIXI.Sprite>(item?: T) => {\n  const [left, setLeft] = useState(0);\n  const [top, setTop] = useState(0);\n  const [anchor, setAnchor] = useState(new PIXI.Point(0, 0));\n\n  useEffect(() => {\n    if (item && item.anchor) {\n      setAnchor(item.anchor);\n    } else {\n      setAnchor(new PIXI.Point(0, 0));\n    }\n  }, [item]);\n\n  useEffect(() => {\n    setLeft(-anchor.x);\n    setTop(-anchor.y);\n  }, [anchor.x, anchor.y]);\n\n  return [left, top];\n};\n\nexport const useFilter = <T extends PIXI.Filter>(item: T) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const [element] = useState(item);\n\n  useEffect(() => {\n    if (parent && !parent.filters) {\n      parent.filters = [];\n    }\n    if (parent && parent.filters.indexOf(element) < 0) {\n      parent.filters.push(element);\n      update();\n    }\n    return () => {\n      const index = parent.filters.indexOf(element);\n      if (index >= 0) {\n        parent.filters.splice(index, 1);\n        update();\n      }\n    };\n  }, [element, parent, update]);\n\n  return element;\n};\n\nexport const useTexture = <T extends PIXI.Sprite>(sprite: T, textureName?: string) => {\n  const context = useContext(TextureContext);\n  const { update } = useContext(RenderingContext);\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>(\n    typeof textureName === 'string' && context[textureName] instanceof PIXI.Texture ? (context[textureName] as PIXI.Texture) : undefined\n  );\n\n  useEffect(() => {\n    if (typeof textureName === 'string' && context[textureName] instanceof PIXI.Texture) {\n      const loadedTexture = context[textureName] as PIXI.Texture;\n\n      if (loadedTexture && loadedTexture !== texture) {\n        setTexture(loadedTexture);\n      }\n    }\n  }, [texture, context, textureName]);\n\n  useEffect(() => {\n    if (texture) {\n      const currentScale = sprite.scale.clone();\n      sprite.texture = texture;\n      sprite.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [texture, sprite, update]);\n};\n\nexport const useFrames = <T extends PIXI.AnimatedSprite>(sprite: T, frames?: string[] | string): number => {\n  const context = useContext(TextureContext);\n  const { update } = useContext(RenderingContext);\n  const [textures, setTextures] = useState<PIXI.Texture[]>([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    if (frames) {\n      const textureList: PIXI.Texture[] = [];\n      let frameList: string[] = [];\n\n      if (Array.isArray(frames)) {\n        frameList = frames;\n      } else if (Array.isArray(context[frames])) {\n        frameList = context[frames] as string[];\n      }\n      frameList.forEach((frameName) => {\n        const loadedTexture = context[frameName];\n\n        if (loadedTexture instanceof PIXI.Texture) {\n          textureList.push(loadedTexture);\n        }\n      });\n\n      setTextures(textureList);\n    }\n  }, [context, frames]);\n\n  useEffect(() => {\n    if (textures && textures.length > 0) {\n      const currentScale = sprite.scale.clone();\n      sprite.textures = textures;\n      sprite.texture = textures[0];\n      sprite.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [textures, sprite, update]);\n\n  useEffect(() => {\n    setCount(sprite.textures.length);\n  }, [sprite.textures]);\n\n  return count;\n};\n\nexport const useTextureUpdate = (texture?: PIXI.Texture) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n\n  useEffect(() => {\n    if (texture && isSprite(parent)) {\n      const currentScale = parent.scale.clone();\n      if (isAnimatedSprite(parent)) {\n        const emptyIndex = parent.textures.indexOf(PIXI.Texture.EMPTY);\n        if (emptyIndex >= 0) {\n          parent.textures = [texture];\n        } else {\n          parent.textures = [...parent.textures, texture];\n        }\n      }\n      parent.texture = texture;\n      parent.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [parent, texture, update]);\n};\n\nexport const useFrameAnimation = (initialFrame: number, frameCount: number, fps: number, playing: boolean): number => {\n  const { frameId, elapsed } = useContext(AnimationContext);\n\n  const reducer = useCallback(\n    (state: AnimationState, action: AnimationAction): AnimationState => {\n      let time, frame;\n      const initialTime = initialFrame * (1000 / fps);\n      const duration = (1000 / fps) * frameCount;\n      if (isNaN(state.time) || isNaN(state.frame)) {\n        action.type = AnimationActionType.Reset;\n      }\n      switch (action.type) {\n        case AnimationActionType.Progress:\n          time = (state.time + (action.value || 0)) % duration;\n          frame = Math.floor((time / 1000) * fps) % frameCount;\n          return { time, frame };\n        case AnimationActionType.Reset:\n          if (state.time !== initialTime) {\n            return {\n              frame: initialFrame,\n              time: initialTime\n            };\n          } else {\n            return state;\n          }\n        default:\n          return state;\n      }\n    },\n    [initialFrame, fps, frameCount]\n  );\n\n  const [{ frame }, dispatch] = useReducer(reducer, { time: initialFrame * (1000 / fps), frame: initialFrame });\n\n  useEffect(() => {\n    if (playing) {\n      dispatch({ type: AnimationActionType.Progress, value: elapsed });\n    } else {\n      dispatch({ type: AnimationActionType.Reset });\n    }\n  }, [frameId, elapsed, playing, dispatch]);\n\n  return frame;\n};\n","import { SyntheticEvent, useCallback, useContext, useEffect, useReducer, useState } from 'react';\nimport {\n  SpeedAction,\n  SpeedContextType,\n  SpeedState,\n  SpeedContextAction,\n  RenderingContextType,\n  AnimationContextType,\n  ParentContextType,\n  RenderingContextAction,\n  RenderingContextState,\n  RenderAction,\n  LoadResourceType,\n  TextureContextType\n} from '../types';\nimport { initialSpeedState, ParentContext, AnimationContext, RenderingContext } from '../contexts';\nimport * as PIXI from 'pixi.js';\nimport { PointerContextAction, PointerContextActionType, PointerContextType } from '../types/PointerContextType';\nimport { useRelativePosition } from './genericHooks';\n\nconst MAX_HISTORY_SIZE = 120;\n\nexport const useSpeedContext = (): SpeedContextType => {\n  const reducer = useCallback((state: SpeedState, action: SpeedAction): SpeedState => {\n    switch (action.type) {\n      case SpeedContextAction.Increase:\n        return { speed: state.speed > 0 ? state.speed * 2 : 1 };\n      case SpeedContextAction.Decrease:\n        return { speed: state.speed / 2 };\n      case SpeedContextAction.Pause:\n        return { speed: 0 };\n      case SpeedContextAction.Play:\n        return { speed: 1 };\n      case SpeedContextAction.Set:\n        return { speed: action.value && action.value > 0 ? action.value : state.speed };\n      default:\n        return state;\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, initialSpeedState);\n\n  const increase = useCallback(() => dispatch({ type: SpeedContextAction.Increase }), [dispatch]);\n  const decrease = useCallback(() => dispatch({ type: SpeedContextAction.Decrease }), [dispatch]);\n  const play = useCallback(() => dispatch({ type: SpeedContextAction.Play }), [dispatch]);\n  const pause = useCallback(() => dispatch({ type: SpeedContextAction.Pause }), [dispatch]);\n  const setSpeed = useCallback((value: number) => dispatch({ type: SpeedContextAction.Set, value }), [dispatch]);\n\n  return { ...state, increase, decrease, play, pause, setSpeed };\n};\n\nexport const useAnimationContext = (speed: number): AnimationContextType => {\n  const initialState = useContext(AnimationContext);\n  const reducer = useCallback(\n    (state: AnimationContextType) => {\n      const { frameId, history } = state;\n\n      if (speed > 0) {\n        const latestFps = Math.round(PIXI.Ticker.shared.FPS);\n        const fpsHistory = [latestFps, ...history.slice(0, MAX_HISTORY_SIZE - 1)];\n\n        return {\n          frameId: frameId + 1,\n          elapsed: PIXI.Ticker.shared.deltaMS * speed,\n          fps: latestFps,\n          history: fpsHistory,\n          averageFps: Math.round(fpsHistory.reduce((a, b) => a + b, 0) / fpsHistory.length),\n          minFps: Math.min(...fpsHistory),\n          maxFps: Math.max(...fpsHistory)\n        };\n      } else {\n        return state;\n      }\n    },\n    [speed]\n  );\n  const [context, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    PIXI.Ticker.shared.add(dispatch);\n\n    return () => {\n      PIXI.Ticker.shared.remove(dispatch);\n    };\n  }, [dispatch]);\n\n  return context;\n};\n\nexport const useRenderingContext = (canvasReference: string, retina = false, frameId: number): RenderingContextType => {\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | undefined>(undefined);\n  const [stage] = useState<PIXI.Container>(new PIXI.Container());\n  const [renderer, setRenderer] = useState<PIXI.Renderer | undefined>();\n\n  const reducer = useCallback(\n    (state: RenderingContextState, action: RenderAction): RenderingContextState => {\n      let renderId, width, height, update;\n      switch (action.type) {\n        case RenderingContextAction.Update:\n          return { ...state, update: true };\n        case RenderingContextAction.Render:\n        default:\n          if (canvas && renderer) {\n            update = state.update;\n            width = state.width;\n            height = state.height;\n            renderId = state.renderId;\n            if (width !== canvas.width || height !== canvas.height) {\n              width = canvas.width;\n              height = canvas.height;\n\n              renderer.resize(width, height);\n              renderer.resolution = retina ? 2 : 1;\n\n              update = true;\n            }\n\n            if (stage && update) {\n              renderer.render(stage);\n\n              update = false;\n              renderId++;\n            }\n            return { update, width, height, renderId };\n          }\n          return state;\n      }\n    },\n    [renderer, canvas, stage, retina]\n  );\n\n  const [state, dispatch] = useReducer(reducer, { height: 0, width: 0, renderId: 0, update: true });\n\n  const update = useCallback(() => dispatch({ type: RenderingContextAction.Update }), []);\n\n  const render = useCallback(() => dispatch({ type: RenderingContextAction.Render }), []);\n\n  const getTexture = useCallback(\n    <T extends PIXI.DisplayObject>(container: T, width: number, height: number): PIXI.RenderTexture | undefined => {\n      if (renderer) {\n        return renderer.generateTexture(container, PIXI.SCALE_MODES.LINEAR, 1, new PIXI.Rectangle(0, 0, width, height));\n      }\n      return undefined;\n    },\n    [renderer]\n  );\n\n  useEffect(() => {\n    const reference = document.getElementById(canvasReference) as HTMLCanvasElement;\n\n    if (reference) {\n      setCanvas(reference);\n    } else {\n      setCanvas(undefined);\n    }\n  }, [canvasReference]);\n\n  useEffect(() => {\n    if (canvas) {\n      setRenderer(new PIXI.Renderer({ view: canvas, transparent: true, width: canvas.width, height: canvas.height }));\n    }\n  }, [canvas]);\n\n  useEffect(() => {\n    const reference = document.getElementById(canvasReference);\n\n    if (!reference && renderer) {\n      // Force release of WebGL context\n      renderer.gl.getExtension('WEBGL_lose_context')?.loseContext();\n      renderer.destroy();\n      setRenderer(undefined);\n    }\n  }, [canvasReference, renderer, frameId]);\n\n  useEffect(() => {\n    render();\n  }, [frameId, render]);\n\n  return {\n    update,\n    stage,\n    width: state.width,\n    height: state.height,\n    renderId: state.renderId,\n    getTexture\n  };\n};\n\nexport const useParentContext = <T extends PIXI.Container>(parent: T): ParentContextType<T> => {\n  const parentContext = useContext(ParentContext);\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [width, setWidth] = useState(parentContext.width);\n  const [height, setHeight] = useState(parentContext.height);\n  const [left, top] = useRelativePosition((parent as unknown) as PIXI.Sprite | undefined);\n  const [transform, setTransform] = useState<number[] | undefined>();\n\n  useEffect(() => {\n    if (parent) {\n      if (parent.width) {\n        setWidth(parent.width);\n      } else {\n        setWidth(parentContext.width);\n      }\n      if (parent.height) {\n        setHeight(parent.height);\n      } else {\n        setHeight(parentContext.height);\n      }\n    }\n  }, [parent, parent.width, parent.height, parentContext.width, parentContext.height]);\n\n  useEffect(() => {\n    setX(parent.worldTransform.tx);\n    setY(parent.worldTransform.ty);\n    setTransform([\n      parent.worldTransform.a,\n      parent.worldTransform.b,\n      parent.worldTransform.c,\n      parent.worldTransform.d,\n      parent.worldTransform.tx,\n      parent.worldTransform.ty\n    ]);\n  }, [\n    parent.worldTransform.a,\n    parent.worldTransform.b,\n    parent.worldTransform.c,\n    parent.worldTransform.d,\n    parent.worldTransform.tx,\n    parent.worldTransform.ty\n  ]);\n\n  return {\n    parent,\n    x,\n    y,\n    width,\n    height,\n    transform,\n    left: left * width,\n    top: top * height\n  };\n};\n\nconst cleanName = (name: string) => name.replace(/(?:(\\.\\w+?$)|(_image$))/, '');\n\nconst textureLoaded = new Map<string, string>();\n\nlet loadedResources: TextureContextType = {};\n\nexport const useTextureContext = (resources: LoadResourceType) => {\n  const [loader] = useState(new PIXI.Loader());\n  const reducer = useCallback((state: TextureContextType, action: TextureContextType): TextureContextType => {\n    loadedResources = { ...loadedResources, ...state, ...action };\n    return loadedResources;\n  }, []);\n  const [context, dispatch] = useReducer(reducer, loadedResources);\n\n  const callback = useCallback(\n    (loader: PIXI.Loader, resource: PIXI.LoaderResource) => {\n      const resources: TextureContextType = {};\n      const cleanedName = cleanName(resource.name);\n\n      if (resource.texture && !loadedResources[cleanedName]) {\n        resources[cleanedName] = resource.texture;\n      } else if (resource.textures) {\n        const frames: string[] = [];\n        Object.keys(resource.textures).forEach((name) => {\n          const texture = resource.textures ? resource.textures[name] : undefined;\n          if (texture) {\n            const resourceName = cleanName(name);\n            resources[resourceName] = texture;\n            frames.push(resourceName);\n          }\n        });\n        resources[cleanedName] = frames;\n      }\n\n      dispatch(resources);\n\n      return loader;\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    loader.onLoad.add(callback);\n    return () => {\n      loader.onLoad.detach(callback);\n    };\n  }, [loader, callback]);\n\n  useEffect(() => {\n    let count = 0;\n    Object.keys(resources).forEach((key) => {\n      const existingResource = textureLoaded.get(key);\n      if (!existingResource) {\n        loader.add(key, resources[key]);\n        textureLoaded.set(key, resources[key]);\n        count++;\n      } else if (existingResource !== resources[key]) {\n        console.warn(\n          `Attempt of overriding existing resource ${key} from ${existingResource}\n          to ${resources[key]}. Please use a unique name for your resource.`\n        );\n      }\n    });\n    if (count) {\n      loader.load();\n    }\n  }, [resources, loader]);\n\n  return context;\n};\n\nconst isTouchEvent = (event: Event): event is TouchEvent => {\n  return !!(event as TouchEvent)?.touches;\n};\nconst isMouseEvent = (event: Event): event is MouseEvent => {\n  return !isTouchEvent(event);\n};\n\nexport const usePointerContext = (retina: boolean) => {\n  const { width, height } = useContext(RenderingContext);\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n  const reducer = useCallback((state: PointerContextType, action: PointerContextAction): PointerContextType => {\n    switch (action.type) {\n      case PointerContextActionType.StartOver:\n        if (!state.over) {\n          return { ...state, over: true };\n        } else {\n          return state;\n        }\n      case PointerContextActionType.EndOver:\n        if (state.over) {\n          return { ...state, over: false };\n        } else {\n          return state;\n        }\n      case PointerContextActionType.UpdatePosition:\n        if (state.over && action.x && action.y && (action.x !== state.x || action.y !== state.y)) {\n          return { x: action.x, y: action.y, over: true };\n        } else {\n          return state;\n        }\n    }\n  }, []);\n  const [pointerContext, update] = useReducer(reducer, { x: 0, y: 0, over: false });\n  const triggerUpdatePosition = useCallback(\n    (x: number, y: number) => {\n      const multiplier = retina ? 2 : 1;\n      update({ type: PointerContextActionType.UpdatePosition, x: x * multiplier, y: y * multiplier });\n    },\n    [retina]\n  );\n  const updateMousePosition = useCallback(\n    (event: MouseEvent) => {\n      const { offsetX: x, offsetY: y } = event;\n\n      triggerUpdatePosition(x, y);\n    },\n    [triggerUpdatePosition]\n  );\n  const updateTouchPosition = useCallback(\n    (event: TouchEvent) => {\n      const { clientX, clientY } = event.touches[0];\n      const x = clientX - offset.x;\n      const y = clientY - offset.y;\n\n      if (x >= 0 && x < width && y >= 0 && y < height) {\n        update({ type: PointerContextActionType.StartOver });\n        triggerUpdatePosition(x, y);\n      } else {\n        update({ type: PointerContextActionType.EndOver });\n      }\n    },\n    [offset, width, height, triggerUpdatePosition]\n  );\n  const updatePosition = useCallback(\n    (event: SyntheticEvent) => {\n      if (isTouchEvent(event.nativeEvent)) {\n        updateTouchPosition(event.nativeEvent);\n      } else if (isMouseEvent(event.nativeEvent)) {\n        updateMousePosition(event.nativeEvent);\n      }\n    },\n    [updateMousePosition, updateTouchPosition]\n  );\n  const pointerStart = useCallback(\n    (event: SyntheticEvent) => {\n      const { x, y } = (event.nativeEvent.target as HTMLCanvasElement).getBoundingClientRect();\n      setOffset({ x, y });\n      update({ type: PointerContextActionType.StartOver });\n      updatePosition(event);\n    },\n    [updatePosition]\n  );\n  const pointerEnd = useCallback(() => update({ type: PointerContextActionType.EndOver }), []);\n\n  return { pointerContext, updatePosition, pointerStart, pointerEnd };\n};\n","import { useContext, useEffect, useState } from 'react';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport {\n  AllFilterProps,\n  FilterProps,\n  FilterPropsMap,\n  SpriteProps,\n  SpritePropsMap,\n  SpritePropsType,\n  TilingSpriteProps,\n  TilingSpritePropsMap,\n  TilingSpritePropsType\n} from '../props';\nimport {\n  BlendModes,\n  BlendModesMap,\n  Events,\n  GenericEventType,\n  GenericProps,\n  GenericPropsMap,\n  GenericType,\n  PropValue,\n  Rectangle\n} from '../types';\n\nconst propsToMap = <S extends { [K in T]?: PropValue }, T extends keyof S>(props: S) => {\n  const map = new Map<T, PropValue>();\n\n  Object.keys(props).forEach((key: string) => {\n    const prop = key as T;\n    map.set(prop, props[prop] as PropValue);\n  });\n\n  return map;\n};\n\nconst getMapUpdate = <S extends { [K in T]?: PropValue }, T extends keyof S>(state: Map<T, PropValue>, props: S) => {\n  const propMap = propsToMap(props);\n  const updatedMap = new Map<T, PropValue>();\n\n  state.forEach((value, key) => {\n    const newValue = propMap.get(key) as PropValue;\n    if (value !== newValue) {\n      state.set(key, newValue);\n      updatedMap.set(key as T, newValue);\n    }\n  });\n\n  return updatedMap;\n};\n\nconst updateGenericProps = <T extends PIXI.Container>(item: T, updatedProperties?: GenericPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    let rectangle;\n    switch (key) {\n      case GenericProps.Alpha:\n        item.alpha = value as number;\n        break;\n      case GenericProps.Angle:\n        item.angle = value as number;\n        break;\n      case GenericProps.ButtonMode:\n        item.buttonMode = value as boolean;\n        break;\n      case GenericProps.Cursor:\n        item.cursor = value as string;\n        break;\n      case GenericProps.Height:\n        item.height = (value as number) || item.height;\n        break;\n      case GenericProps.Interactive:\n        item.interactive = value as boolean;\n        break;\n      case GenericProps.Name:\n        item.name = value as string;\n        break;\n      case GenericProps.PivotX:\n        item.pivot.x = value as number;\n        break;\n      case GenericProps.PivotY:\n        item.pivot.y = value as number;\n        break;\n      case GenericProps.Rotation:\n        item.rotation = value as number;\n        break;\n      case GenericProps.ScaleX:\n        item.scale.x = value as number;\n        break;\n      case GenericProps.ScaleY:\n        item.scale.y = value as number;\n        break;\n      case GenericProps.SkewX:\n        item.skew.x = value as number;\n        break;\n      case GenericProps.SkewY:\n        item.skew.y = value as number;\n        break;\n      case GenericProps.SortableChildren:\n        item.sortableChildren = value as boolean;\n        break;\n      case GenericProps.Visible:\n        item.visible = value as boolean;\n        break;\n      case GenericProps.Width:\n        item.width = (value as number) || item.width;\n        break;\n      case GenericProps.X:\n        item.x = value as number;\n        break;\n      case GenericProps.Y:\n        item.y = value as number;\n        break;\n      case GenericProps.ZIndex:\n        item.zIndex = value as number;\n        break;\n      case GenericProps.FilterArea:\n        if (value) {\n          rectangle = value as Rectangle;\n          item.filterArea = new PIXI.Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          item.filterArea = null;\n        }\n        break;\n      case GenericProps.HitArea:\n        if (value) {\n          rectangle = value as Rectangle;\n          item.hitArea = new PIXI.Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          item.hitArea = null;\n        }\n        break;\n    }\n  });\n};\n\nconst updateSpriteProps = <T extends PIXI.Sprite>(item: T, updatedProperties?: SpritePropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case SpriteProps.AnchorX:\n        if (value) {\n          item.anchor.x = value as number;\n        }\n        break;\n      case SpriteProps.AnchorY:\n        if (value) {\n          item.anchor.y = value as number;\n        }\n        break;\n      case SpriteProps.BlendMode:\n        item.blendMode = BlendModesMap.get(value as BlendModes) || 0;\n        break;\n      case SpriteProps.RoundPixels:\n        item.roundPixels = value as boolean;\n        break;\n      case SpriteProps.Tint:\n        item.tint = value as number;\n        break;\n    }\n  });\n};\n\nconst updateTilingSpriteProps = <T extends PIXI.TilingSprite>(item: T, updatedProperties?: TilingSpritePropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case TilingSpriteProps.ClampMargin:\n        item.clampMargin = value as number;\n        break;\n      case TilingSpriteProps.TileScaleX:\n        item.tileScale.x = value as number;\n        break;\n      case TilingSpriteProps.TileScaleY:\n        item.tileScale.y = value as number;\n        break;\n      case TilingSpriteProps.TileX:\n        item.tilePosition.x = value as number;\n        break;\n      case TilingSpriteProps.TileY:\n        item.tilePosition.y = value as number;\n        break;\n      case TilingSpriteProps.UvRespectAnchor:\n        item.uvRespectAnchor = value as boolean;\n        break;\n    }\n  });\n};\n\nconst updateFilterProps = <T extends PIXI.Filter>(item: T, updatedProperties?: FilterPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case FilterProps.AutoFit:\n        item.autoFit = value as boolean;\n        break;\n      case FilterProps.BlendMode:\n        item.blendMode = BlendModesMap.get(value as BlendModes) || 0;\n        break;\n      case FilterProps.Enabled:\n        item.enabled = value as boolean;\n        break;\n      case FilterProps.Padding:\n        item.padding = value as number;\n        break;\n      case FilterProps.Resolution:\n        item.resolution = value as number;\n        break;\n      case FilterProps.Alpha:\n        ((item as unknown) as PIXI.filters.AlphaFilter).alpha = value as number;\n        break;\n      case FilterProps.Blur:\n        ((item as unknown) as PIXI.filters.BlurFilter).blur = value as number;\n        break;\n      case FilterProps.BlurX:\n        ((item as unknown) as PIXI.filters.BlurFilter).blurX = value as number;\n        break;\n      case FilterProps.BlurY:\n        ((item as unknown) as PIXI.filters.BlurFilter).blurY = value as number;\n        break;\n      case FilterProps.Quality:\n        ((item as unknown) as PIXI.filters.BlurFilter).quality = value as number;\n        break;\n      case FilterProps.RepeatEdgePixels:\n        ((item as unknown) as PIXI.filters.BlurFilter).repeatEdgePixels = value as boolean;\n        break;\n      case FilterProps.Noise:\n        ((item as unknown) as PIXI.filters.NoiseFilter).noise = value as number;\n        break;\n      case FilterProps.Seed:\n        ((item as unknown) as PIXI.filters.NoiseFilter).seed = value as number;\n        break;\n    }\n  });\n};\n\nexport const useGenericProps = <T extends PIXI.Container>(item: T, props: GenericType) => {\n  const { update } = useContext(RenderingContext);\n  const [state] = useState(propsToMap(props));\n  const [updatedProperties, setUpdatedProperties] = useState(state);\n\n  useEffect(() => {\n    const updatedMap = getMapUpdate(state, props);\n\n    if (updatedMap.size > 0) {\n      setUpdatedProperties(updatedMap);\n    }\n  }, [props, state]);\n\n  useEffect(() => {\n    updateGenericProps(item, updatedProperties as GenericPropsMap);\n    update();\n  }, [updatedProperties, update, item]);\n};\n\nexport const useSpriteProps = <T extends PIXI.Sprite>(sprite: T, props: SpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const [state] = useState(propsToMap(props));\n  const [updatedProperties, setUpdatedProperties] = useState(state);\n\n  useEffect(() => {\n    const propsMap = getMapUpdate(state, props);\n\n    if (propsMap.size > 0) {\n      setUpdatedProperties(propsMap);\n    }\n  }, [props, state]);\n\n  useEffect(() => {\n    updateSpriteProps(sprite, updatedProperties as SpritePropsMap);\n    update();\n  }, [updatedProperties, update, sprite]);\n};\n\nexport const useAlignedPosition = <T extends PIXI.Sprite>(sprite: T, props: GenericType & SpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const { width: parentWidth, height: parentHeight } = useContext(ParentContext);\n  const { x = 0, y = 0, alignX, alignY } = props;\n\n  useEffect(() => {\n    if (alignX) {\n      sprite.x = parentWidth * alignX + x;\n      sprite.anchor.x = alignX;\n    } else {\n      sprite.x = x;\n    }\n    update();\n  }, [update, sprite, parentWidth, x, alignX]);\n\n  useEffect(() => {\n    if (alignY) {\n      sprite.y = parentHeight * alignY + y;\n      sprite.anchor.y = alignY;\n    } else {\n      sprite.y = y;\n    }\n    update();\n  }, [update, sprite, parentHeight, y, alignY]);\n};\n\nexport const useTilingSpriteProps = <T extends PIXI.TilingSprite>(sprite: T, props: TilingSpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const [state] = useState(propsToMap(props));\n  const [updatedProperties, setUpdatedProperties] = useState(state);\n\n  useEffect(() => {\n    const tileProps = getMapUpdate(state, props);\n\n    if (tileProps.size > 0) {\n      setUpdatedProperties(tileProps);\n    }\n  }, [props, state]);\n\n  useEffect(() => {\n    updateTilingSpriteProps(sprite, updatedProperties as TilingSpritePropsMap);\n    update();\n  }, [updatedProperties, update, sprite]);\n};\n\nexport const useFilterProps = <T extends PIXI.Filter>(filter: T, props: AllFilterProps) => {\n  const { update } = useContext(RenderingContext);\n  const [state] = useState(propsToMap(props));\n  const [updatedProperties, setUpdatedProperties] = useState(state);\n\n  useEffect(() => {\n    const filterProps = getMapUpdate(state, props);\n\n    if (filterProps.size > 0) {\n      setUpdatedProperties(filterProps);\n    }\n  }, [props, state]);\n\n  useEffect(() => {\n    updateFilterProps(filter, updatedProperties as FilterPropsMap);\n    update();\n  }, [updatedProperties, update, filter]);\n};\n\nexport const useEvent = <T extends PIXI.Container>(item: T, event: Events, callback?: EventListener) => {\n  useEffect(() => {\n    if (callback) {\n      item?.addListener(event, callback);\n    } else {\n      item?.removeListener(event);\n    }\n    return () => {\n      item?.removeListener(event);\n    };\n  }, [callback, item, event]);\n};\n\nexport const useDisplayObjectEvents = <T extends PIXI.Container>(item: T, callbacks: GenericEventType) => {\n  const {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  } = callbacks;\n\n  useEffect(() => {\n    return () => {\n      item.removeAllListeners();\n    };\n  }, [item]);\n\n  useEvent(item, Events.Click, onClick);\n  useEvent(item, Events.MouseDown, onMouseDown);\n  useEvent(item, Events.MouseMove, onMouseMove);\n  useEvent(item, Events.MouseOut, onMouseOut);\n  useEvent(item, Events.MouseOver, onMouseOver);\n  useEvent(item, Events.MouseUp, onMouseUp);\n  useEvent(item, Events.MouseUpOutside, onMouseUpOutside);\n  useEvent(item, Events.PointerCancel, onPointerCancel);\n  useEvent(item, Events.PointerDown, onPointerDown);\n  useEvent(item, Events.PointerMove, onPointerMove);\n  useEvent(item, Events.PointerOut, onPointerOut);\n  useEvent(item, Events.PointerOver, onPointerOver);\n  useEvent(item, Events.PointerTap, onPointerTap);\n  useEvent(item, Events.PointerUp, onPointerUp);\n  useEvent(item, Events.PointerUpOutside, onPointerUpOutside);\n  useEvent(item, Events.RemovedFrom, onRemovedFrom);\n  useEvent(item, Events.RightClick, onRightClick);\n  useEvent(item, Events.RightDown, onRightDown);\n  useEvent(item, Events.RightUp, onRightUp);\n  useEvent(item, Events.RightUpOutside, onRightUpOutside);\n  useEvent(item, Events.Tap, onTap);\n  useEvent(item, Events.TouchCancel, onTouchCancel);\n  useEvent(item, Events.TouchEnd, onTouchEnd);\n  useEvent(item, Events.TouchEndOutside, onTouchEndOutside);\n  useEvent(item, Events.TouchMove, onTouchMove);\n  useEvent(item, Events.TouchStart, onTouchStart);\n  useEvent(item, Events.Added, onAdded);\n  useEvent(item, Events.Removed, onRemoved);\n  useEvent(item, Events.ChildAdded, onChildAdded);\n};\n","import * as PIXI from 'pixi.js';\nimport React, { CSSProperties, useContext, useEffect, useState } from 'react';\nimport { usePointerContext } from '../hooks/contextHooks';\nimport { PixiCanvasProps } from '../props';\nimport AutoSizer, { Size } from 'react-virtualized-auto-sizer';\nimport { useId, useAnimationContext, useRenderingContext, useSpeedContext, useTextureContext } from '../hooks';\nimport { SpeedContext, AnimationContext, RenderingContext, ParentContext, TextureContext, PointerContext } from '../contexts';\nimport { Overflow, ParentContextType } from '../types';\n\nconst defaultStyle: CSSProperties = {\n  position: 'relative',\n  left: 0,\n  right: 0,\n  margin: 0,\n  padding: 0\n};\n\nconst PixiCanvas: React.FC<PixiCanvasProps> = ({\n  id,\n  className,\n  width,\n  height,\n  retina = false,\n  textures = {},\n  speed = 1,\n  overflow = Overflow.All,\n  filterArea,\n  onUpdate,\n  onAfterRender,\n  onResize,\n  children\n}) => {\n  const canvasId = useId(id);\n\n  const speedContext = useSpeedContext();\n  const textureContext = useTextureContext(textures);\n  const animationContext = useAnimationContext(speedContext.speed);\n  const renderingContext = useRenderingContext(canvasId, retina, animationContext.frameId);\n  const genericParentContext = useContext(ParentContext);\n  const [containerStyle, setContainerStyle] = useState<CSSProperties>(defaultStyle);\n\n  const { pointerContext, pointerStart, pointerEnd, updatePosition } = usePointerContext(retina);\n\n  const { setSpeed } = speedContext;\n\n  const [parentContext, setParentContext] = useState<ParentContextType<PIXI.Container>>({\n    ...genericParentContext,\n    parent: renderingContext.stage,\n    width: renderingContext.width,\n    height: renderingContext.height\n  });\n\n  useEffect(() => {\n    setParentContext({\n      ...genericParentContext,\n      parent: renderingContext.stage,\n      width: renderingContext.width,\n      height: renderingContext.height\n    });\n  }, [renderingContext.stage, renderingContext.width, renderingContext.height, genericParentContext]);\n\n  useEffect(() => {\n    const newStyle = { ...defaultStyle };\n\n    switch (overflow) {\n      case Overflow.Horizontal:\n        newStyle.overflowY = 'hidden';\n        break;\n      case Overflow.Vertical:\n        newStyle.overflowX = 'hidden';\n        break;\n      case Overflow.None:\n        newStyle.overflow = 'hidden';\n    }\n\n    setContainerStyle(newStyle);\n  }, [width, height, overflow]);\n\n  useEffect(() => {\n    if (filterArea) {\n      renderingContext.stage.filterArea = new PIXI.Rectangle(filterArea.x, filterArea.y, filterArea.width, filterArea.height);\n    } else {\n      renderingContext.stage.filterArea = (null as unknown) as PIXI.Rectangle;\n    }\n  }, [renderingContext.stage, filterArea]);\n\n  useEffect(() => {\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  }, [animationContext.frameId, onUpdate]);\n\n  useEffect(() => {\n    if (typeof onAfterRender === 'function') {\n      onAfterRender();\n    }\n  }, [renderingContext.renderId, onAfterRender]);\n\n  useEffect(() => {\n    if (typeof onResize === 'function') {\n      onResize({\n        width: renderingContext.width,\n        height: renderingContext.height\n      });\n    }\n  }, [renderingContext.width, renderingContext.height, onResize]);\n\n  useEffect(() => {\n    setSpeed(speed);\n  }, [speed, setSpeed]);\n\n  return (\n    <TextureContext.Provider value={textureContext}>\n      <SpeedContext.Provider value={speedContext}>\n        <RenderingContext.Provider value={renderingContext}>\n          <AnimationContext.Provider value={animationContext}>\n            <PointerContext.Provider value={pointerContext}>\n              {renderingContext.stage && (\n                <ParentContext.Provider value={parentContext}>\n                  <AutoSizer>\n                    {(size: Size) => {\n                      const multiplier = retina ? 2 : 1;\n                      const parentWidth = size.width;\n                      const parentHeight = size.height;\n                      const containerWidth = width || parentWidth;\n                      const containerHeight = height || parentHeight;\n                      const canvasWidth = containerWidth * multiplier;\n                      const canvasHeight = containerHeight * multiplier;\n\n                      return (\n                        <div className={'pixi-root'} style={{ ...containerStyle, width: containerWidth, height: containerHeight }}>\n                          <canvas\n                            id={canvasId}\n                            className={className}\n                            width={canvasWidth}\n                            height={canvasHeight}\n                            style={{ ...defaultStyle, width: containerWidth, height: containerHeight }}\n                            onTouchMove={updatePosition}\n                            onTouchStart={pointerStart}\n                            onTouchEnd={pointerEnd}\n                            onTouchCancel={pointerEnd}\n                            onPointerEnter={pointerStart}\n                            onPointerOver={pointerStart}\n                            onPointerOut={pointerEnd}\n                            onPointerCancel={pointerEnd}\n                            onPointerLeave={pointerEnd}\n                            onPointerMove={updatePosition}\n                          />\n                          {children}\n                        </div>\n                      );\n                    }}\n                  </AutoSizer>\n                </ParentContext.Provider>\n              )}\n            </PointerContext.Provider>\n          </AnimationContext.Provider>\n        </RenderingContext.Provider>\n      </SpeedContext.Provider>\n    </TextureContext.Provider>\n  );\n};\n\nexport default PixiCanvas;\n","import * as PIXI from 'pixi.js';\nimport React, { PropsWithChildren, useContext, useEffect } from 'react';\nimport { AnimationContext, ParentContext, RenderingContext } from '../contexts';\nimport { useDisplayObjectEvents, useId, useParentContext, useGenericProps, useElement } from '../hooks';\nimport { PixiDisplayObjectProps } from '../props';\nimport { CursorType } from '../types';\n\nconst PixiDisplayObject: React.FC<PixiDisplayObjectProps<PIXI.Container>> = <T extends PIXI.Container>(\n  props: PropsWithChildren<PixiDisplayObjectProps<T>>\n) => {\n  const { item, children, onUpdate, onAfterRender } = props;\n  const { frameId } = useContext(AnimationContext);\n  const { renderId } = useContext(RenderingContext);\n  const element = useElement(item);\n  const parentContext = useParentContext(element);\n  const {\n    alpha = 1,\n    angle = 0,\n    buttonMode = false,\n    cursor = CursorType.None,\n    interactive = false,\n    name,\n    rotation = 0,\n    visible = true,\n    x = 0,\n    y = 0,\n    zIndex = element.parent?.children.length || 0,\n    pivotX = 0,\n    pivotY = 0,\n    scaleX = 1,\n    scaleY = 1,\n    skewX = 0,\n    skewY = 0,\n    width,\n    height,\n    sortableChildren = PIXI.settings.SORTABLE_CHILDREN,\n    hitArea,\n    filterArea\n  } = props;\n  const {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  } = props;\n\n  const id = useId(name);\n\n  useDisplayObjectEvents(element, {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  });\n\n  useGenericProps(element, {\n    alpha,\n    angle,\n    buttonMode,\n    cursor,\n    height,\n    interactive,\n    name: id,\n    pivotX,\n    pivotY,\n    rotation,\n    scaleX,\n    scaleY,\n    skewX,\n    skewY,\n    sortableChildren,\n    visible,\n    width,\n    x,\n    y,\n    zIndex,\n    hitArea,\n    filterArea\n  });\n\n  useEffect(() => {\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  }, [frameId, onUpdate]);\n\n  useEffect(() => {\n    if (typeof onAfterRender === 'function') {\n      onAfterRender();\n    }\n  }, [renderId, onAfterRender]);\n\n  return <ParentContext.Provider value={parentContext}>{children}</ParentContext.Provider>;\n};\n\nexport default PixiDisplayObject;\n","import React, { CSSProperties, useContext, useEffect, useState } from 'react';\nimport { ParentContext } from '../contexts';\nimport { PixiHtmlContainerProps } from '../props/PixiHtmlContainerProps';\nimport { Overflow } from '../types';\n\nconst PixiHtmlContainer: React.FC<PixiHtmlContainerProps> = ({ id, overflow = Overflow.All, children }) => {\n  const { left, top, transform, width, height, parent } = useContext(ParentContext);\n  const [style, setStyle] = useState<CSSProperties>({});\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (transform) {\n      const newStyle: CSSProperties = {\n        display: 'inline-block',\n        position: 'absolute',\n        transform: `matrix(${transform.join(',')})`,\n        width,\n        height,\n        top,\n        left\n      };\n\n      switch (overflow) {\n        case Overflow.Horizontal:\n          newStyle.overflowY = 'hidden';\n          break;\n        case Overflow.Vertical:\n          newStyle.overflowX = 'hidden';\n          break;\n        case Overflow.None:\n          newStyle.overflow = 'hidden';\n      }\n\n      setStyle(newStyle);\n    }\n  }, [transform, width, height, left, top, overflow]);\n\n  useEffect(() => {\n    setActive(!!transform && !!parent.parent && width > 1 && height > 1);\n  }, [transform, width, height, parent.parent]);\n\n  return (\n    active ? (\n      <div id={id} className={parent.name} style={style}>\n        {children}\n      </div>\n    ) : null\n  );\n};\n\nexport default PixiHtmlContainer;\n","import React, { useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { PixiContainerProps } from '../props';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiContainer: React.FC<PixiContainerProps> = (props) => {\n  const [container] = useState(new PIXI.Container());\n\n  return <PixiDisplayObject item={container} {...props} />;\n};\n\nexport default PixiContainer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useId, useTextureUpdate } from '../hooks';\nimport { PixiTextureProps } from '../props';\n\nconst PixiTexture: React.FC<PixiTextureProps> = ({ name, src, onLoad }) => {\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>();\n  const textureId = useId(name);\n\n  const loadCallback = useCallback((loadedTexture: PIXI.Texture) => {\n    setTexture(loadedTexture);\n    if (onLoad) {\n      onLoad();\n    }\n  }, [onLoad])\n\n  useEffect(() => {\n    PIXI.Texture.fromURL(src).then(loadCallback);\n  }, [src, loadCallback]);\n\n  useEffect(() => {\n    texture?.textureCacheIds.splice(0);\n    texture?.textureCacheIds.push(textureId);\n  }, [texture, textureId]);\n\n  useTextureUpdate(texture);\n\n  return null;\n};\n\nexport default PixiTexture;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { defaultParentContext, ParentContext, RenderingContext } from '../contexts';\nimport { useId, useTextureUpdate } from '../hooks';\nimport { PixiRenderTextureProps } from '../props';\nimport { Overflow } from '../types';\nimport PixiHtmlContainer from './PixiHtmlContainer';\n\nconst PixiRenderTexture: React.FC<PixiRenderTextureProps> = ({ name, width, height, children }) => {\n  const parentRenderContext = useContext(RenderingContext);\n  const textureId = useId(name);\n  const [stage] = useState(new PIXI.Container());\n  const [parentContext, setParentContext] = useState(defaultParentContext);\n  const [texture, setTexture] = useState<PIXI.RenderTexture | undefined>();\n  const [state, setState] = useState(true);\n  const { getTexture, update: parentUpdate, renderId } = parentRenderContext;\n\n  const update = useCallback(() => setState(true), []);\n\n  useEffect(() => {\n    setParentContext({\n      ...defaultParentContext,\n      parent: stage,\n      width,\n      height\n    });\n    setState(true);\n  }, [width, height, stage, textureId]);\n\n  useEffect(() => {\n    if (state) {\n      const newTexture = getTexture(stage, width, height);\n      newTexture?.textureCacheIds.push(textureId);\n      setTexture(newTexture);\n      setState(false);\n      parentUpdate();\n    }\n  }, [state, stage, parentUpdate, getTexture, width, height, textureId]);\n\n  useTextureUpdate(texture);\n\n  return (\n    <PixiHtmlContainer overflow={Overflow.None}>\n      <RenderingContext.Provider\n        value={{\n          stage,\n          width,\n          height,\n          renderId,\n          update,\n          getTexture\n        }}\n      >\n        <ParentContext.Provider value={parentContext}>{children}</ParentContext.Provider>\n      </RenderingContext.Provider>\n    </PixiHtmlContainer>\n  );\n};\n\nexport default PixiRenderTexture;\n","import React, { useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useSpriteProps, useTexture } from '../hooks';\nimport { useAlignedPosition } from '../hooks/propHooks';\nimport { PixiSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiSprite: React.FC<PixiSpriteProps> = (props) => {\n  const [sprite] = useState(new PIXI.Sprite());\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n\n  useTexture(sprite, props.texture);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    blendMode,\n    roundPixels,\n    tint\n  });\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined} />;\n};\n\nexport default PixiSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext } from '../contexts';\nimport { useSpriteProps, useTexture, useTilingSpriteProps } from '../hooks';\nimport { useAlignedPosition } from '../hooks/propHooks';\nimport { PixiTilingSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiTilingSprite: React.FC<PixiTilingSpriteProps> = (props) => {\n  const { width, height } = useContext(ParentContext);\n  const [tileWidth, setTileWidth] = useState(props.width || width);\n  const [tileHeight, setTileHeight] = useState(props.height || height);\n  const [sprite] = useState(new PIXI.TilingSprite(PIXI.Texture.EMPTY, tileWidth, tileHeight));\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { clampMargin = 0.5, tileX = 0, tileY = 0, tileScaleX = 1, tileScaleY = 1, uvRespectAnchor = false } = props;\n\n  useTexture(sprite, props.texture);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    blendMode,\n    roundPixels,\n    tint\n  });\n\n  useEffect(() => {\n    setTileWidth(props.width || width);\n  }, [width, props.width]);\n\n  useEffect(() => {\n    setTileHeight(props.height || height);\n  }, [height, props.height]);\n\n  useTilingSpriteProps(sprite, {\n    clampMargin,\n    tileScaleX,\n    tileScaleY,\n    tileX,\n    tileY,\n    uvRespectAnchor\n  });\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} width={tileWidth} height={tileHeight} x={undefined} y={undefined} />;\n};\n\nexport default PixiTilingSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { RenderingContext } from '../contexts';\nimport { useFrames, useSpriteProps, useTexture, useFrameAnimation } from '../hooks';\nimport { useAlignedPosition } from '../hooks/propHooks';\nimport { PixiAnimatedSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiAnimatedSprite: React.FC<PixiAnimatedSpriteProps> = (props) => {\n  const [sprite] = useState(new PIXI.AnimatedSprite([PIXI.Texture.EMPTY], false));\n  const { update } = useContext(RenderingContext);\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { playing = false, resetOnStop = true, currentFrame = 0, fps = 60, onAnimationComplete } = props;\n  const [frameId, setFrameId] = useState(currentFrame);\n  const [initialFrame, setInitialFrame] = useState(0);\n\n  useTexture(sprite, props.texture);\n\n  const frameCount = useFrames(sprite, props.frames);\n  const frame = useFrameAnimation(initialFrame, frameCount, fps, playing);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    blendMode,\n    roundPixels,\n    tint\n  });\n\n  useEffect(() => {\n    if (currentFrame < frameCount) {\n      setInitialFrame(currentFrame);\n    } else if (currentFrame > 0) {\n      setInitialFrame(currentFrame - 1);\n    }\n  }, [currentFrame, frameCount]);\n\n  useEffect(() => {\n    if (!playing && resetOnStop) {\n      setFrameId(initialFrame);\n    }\n  }, [playing, resetOnStop, initialFrame]);\n\n  useEffect(() => {\n    if (!isNaN(frameId)) {\n      sprite.gotoAndStop(frameId);\n      update();\n    }\n  }, [frameId, sprite, update]);\n\n  useEffect(() => {\n    if (playing && !isNaN(frame)) {\n      if (frame === frameCount - 1 && onAnimationComplete && frameCount > 0) {\n        onAnimationComplete();\n      }\n      setFrameId(frame);\n    }\n  }, [frame, frameCount, playing, onAnimationComplete]);\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined} />;\n};\n\nexport default PixiAnimatedSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport { useId, useSpriteProps, useTextureUpdate } from '../hooks';\nimport { useAlignedPosition } from '../hooks/propHooks';\nimport { isAnimatedSprite, isSprite, PixiTextProps } from '../props';\nimport { BlendModes, defaultTextStyle } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiText: React.FC<PixiTextProps> = (props) => {\n  const { name, anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { style = defaultTextStyle, children = '' } = props;\n  const { update } = useContext(RenderingContext);\n  const { parent } = useContext(ParentContext);\n  const [sprite] = useState(new PIXI.Text(String(children), style));\n  const [state, setState] = useState(false);\n  const [texture, setTexture] = useState(sprite.texture);\n  const [isTextureMode] = useState(isSprite(parent) || isAnimatedSprite(parent));\n  const textureId = useId(name);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    blendMode,\n    roundPixels,\n    tint\n  });\n\n  useEffect(() => {\n    sprite.text = children ? String(children) : '';\n    sprite.updateText(true);\n    update();\n    setState(true);\n  }, [children, sprite, update]);\n\n  useEffect(() => {\n    sprite.style = style;\n    sprite.updateText(true);\n    update();\n    setState(true);\n  }, [style, sprite, update]);\n\n  useEffect(() => {\n    if (state) {\n      setTexture(sprite.texture.clone());\n    }\n  }, [state, sprite]);\n\n  useEffect(() => {\n    texture?.textureCacheIds.splice(0);\n    texture?.textureCacheIds.push(textureId);\n  }, [texture, textureId]);\n\n  useTextureUpdate(texture);\n\n  useAlignedPosition(sprite, props);\n\n  return isTextureMode ? null : (\n    <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined}>\n      {null /* Avoiding passing down the tree the child text */}\n    </PixiDisplayObject>\n  );\n};\n\nexport default PixiText;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport { useTexture } from '../hooks';\nimport { useRelativePosition } from '../hooks/genericHooks';\nimport { PixiMaskProps } from '../props';\n\nconst PixiMask: React.FC<PixiMaskProps> = ({ texture, enabled = true, children }) => {\n  const [sprite] = useState(new PIXI.Sprite());\n  const parentContext = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const { parent } = parentContext;\n  const [left, top] = useRelativePosition((parent as unknown) as PIXI.Sprite | undefined);\n\n  useTexture(sprite, texture);\n\n  useEffect(() => {\n    if (enabled) {\n      parent.mask = sprite;\n      parent.addChild(sprite);\n      update();\n    }\n\n    return () => {\n      parent.removeChild(sprite);\n      parent.mask = null;\n      update();\n    };\n  }, [sprite, parent, enabled, update]);\n\n  useEffect(() => {\n    sprite.anchor.set(-left, -top);\n  }, [sprite, left, top]);\n\n  return <ParentContext.Provider value={{ ...parentContext, parent: sprite }}>{children}</ParentContext.Provider>;\n};\n\nexport default PixiMask;\n","import React, { PropsWithChildren, ReactNode, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useFilterProps } from '../hooks';\nimport { PixiFilterProps } from '../props';\nimport { BlendModes } from '../types';\n\nconst PixiFilter: React.FC<PixiFilterProps<PIXI.Filter>> = <T extends PIXI.Filter>(props: PropsWithChildren<PixiFilterProps<T>>) => {\n  const {\n    item,\n    blendMode = BlendModes.Normal,\n    autoFit = true,\n    enabled = true,\n    padding = 0,\n    resolution = PIXI.settings.FILTER_RESOLUTION,\n    children\n  } = props;\n\n  const [effects, setEffects] = useState<ReactNode[]>([]);\n\n  useFilterProps(item, {\n    autoFit,\n    blendMode,\n    enabled,\n    padding,\n    resolution\n  });\n\n  useEffect(() => {\n    if (children) {\n      if (Array.isArray(children)) {\n        setEffects(children);\n      } else {\n        setEffects([children]);\n      }\n    } else {\n      setEffects([]);\n    }\n  }, [children]);\n\n  return React.createElement(React.Fragment, null, ...effects);\n};\n\nexport default PixiFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { AlphaFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst AlphaFilter: React.FC<AlphaFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.AlphaFilter());\n  const { alpha = 1 } = props;\n\n  useFilterProps(filter, {\n    alpha\n  });\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default AlphaFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { BlurFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst BlurFilter: React.FC<BlurFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.BlurFilter());\n  const { blur = 2, blurX = 2, blurY = 2, quality = 1, repeatEdgePixels = false } = props;\n\n  useFilterProps(filter, {\n    blur,\n    blurX,\n    blurY,\n    quality,\n    repeatEdgePixels\n  });\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default BlurFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter } from '../hooks';\nimport { AbstractFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst FXAAFilter: React.FC<AbstractFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.FXAAFilter());\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default FXAAFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport PixiFilter from './PixiFilter';\nimport { NoiseFilterProps } from '../props';\n\nconst FXAA_SEED = Math.random();\n\nconst FXAAFilter: React.FC<NoiseFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.NoiseFilter());\n  const { noise = 0.5, seed = FXAA_SEED } = props;\n\n  useFilterProps(filter, {\n    noise,\n    seed\n  });\n\n  return <PixiFilter item={filter} {...props} enabled={undefined} />;\n};\n\nexport default FXAAFilter;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useReducer } from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { AlphaFilterProps } from '../props';\nimport { EffectContext, RenderingContext } from '../contexts';\nimport PixiFilter from './PixiFilter';\nimport { EffectAction, EffectActionType, EffectState, EffectType, EffectValue } from '../types';\n\nconst updateColorMatrix = (filter: PIXI.filters.ColorMatrixFilter, state: EffectState) => {\n  filter.reset();\n  state.effects.forEach((id) => {\n    const effectData = state.effectMap.get(id);\n\n    if (effectData) {\n      const { params = [], multiply = true, enabled = true } = effectData;\n\n      if (!enabled) return;\n\n      switch (effectData.effect) {\n        case EffectType.BlackAndWhite:\n          filter.blackAndWhite(multiply);\n          break;\n        case EffectType.Brightness:\n          filter.brightness(params[0], multiply);\n          break;\n        case EffectType.Browni:\n          filter.browni(multiply);\n          break;\n        case EffectType.ColorTone:\n          filter.colorTone(params[0], params[1], params[2], params[3], multiply);\n          break;\n        case EffectType.Contrast:\n          filter.contrast(params[0], multiply);\n          break;\n        case EffectType.Desaturate:\n          filter.desaturate();\n          break;\n        case EffectType.GreyScale:\n          filter.greyscale(params[0], multiply);\n          break;\n        case EffectType.Hue:\n          filter.hue(params[0], multiply);\n          break;\n        case EffectType.Kodachrome:\n          filter.kodachrome(multiply);\n          break;\n        case EffectType.Lsd:\n          filter.lsd(multiply);\n          break;\n        case EffectType.Negative:\n          filter.negative(multiply);\n          break;\n        case EffectType.Night:\n          filter.night(params[0], multiply);\n          break;\n        case EffectType.Polaroid:\n          filter.polaroid(multiply);\n          break;\n        case EffectType.Predator:\n          filter.predator(params[0], multiply);\n          break;\n        case EffectType.Saturate:\n          filter.saturate(params[0], multiply);\n          break;\n        case EffectType.Sepia:\n          filter.sepia(multiply);\n          break;\n        case EffectType.Technicolor:\n          filter.technicolor(multiply);\n          break;\n        case EffectType.ToBGR:\n          filter.toBGR(multiply);\n          break;\n        case EffectType.Vintage:\n          filter.vintage(multiply);\n          break;\n      }\n    }\n  });\n};\n\nconst ColorMatrixFilter: React.FC<AlphaFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.ColorMatrixFilter());\n  const { update } = useContext(RenderingContext);\n  const { alpha = 1, children } = props;\n\n  const reducer = useCallback((state: EffectState, action: EffectAction): EffectState => {\n    const { id } = action.value;\n    let index, effects;\n\n    switch (action.type) {\n      case EffectActionType.UpdateEffect:\n        effects = [...state.effects];\n        if (action.value.effect !== undefined) {\n          index = state.effects.indexOf(id);\n          state.effectMap.set(id, action.value);\n\n          if (index < 0) {\n            effects.push(id);\n          }\n          return {\n            ...state,\n            effects\n          };\n        } else {\n          return state;\n        }\n      case EffectActionType.RemoveEffect:\n        index = state.effects.indexOf(id);\n        if (index >= 0) {\n          effects = [...state.effects];\n          effects.splice(index, 1);\n          state.effectMap.delete(id);\n          return {\n            ...state,\n            effects\n          };\n        } else {\n          return state;\n        }\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, {\n    effects: [],\n    effectMap: new Map()\n  });\n\n  const updateEffect = useCallback((value: EffectValue) => {\n    dispatch({ type: EffectActionType.UpdateEffect, value });\n  }, []);\n  const removeEffect = useCallback((id: string) => {\n    dispatch({\n      type: EffectActionType.RemoveEffect,\n      value: {\n        id\n      }\n    });\n  }, []);\n\n  useFilterProps(filter, {\n    alpha\n  });\n\n  useEffect(() => {\n    updateColorMatrix(filter, state);\n    update();\n  }, [filter, state, update]);\n\n  return (\n    <PixiFilter item={filter} {...props}>\n      <EffectContext.Provider value={{ updateEffect, removeEffect }}>{children}</EffectContext.Provider>\n    </PixiFilter>\n  );\n};\n\nexport default ColorMatrixFilter;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BlackAndWhiteEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.BlackAndWhite\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default BlackAndWhiteEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { BrightnessEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BrightnessEffect: React.FC<BrightnessEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Brightness,\n      params: [amount]\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect, amount]);\n\n  return null;\n};\n\nexport default BrightnessEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BrowniEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Browni\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default BrowniEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { ColorToneProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ColorToneEffect: React.FC<ColorToneProps> = ({ multiply = true, enabled = true, desaturation, toned, lightColor, darkColor }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.ColorTone,\n      params: [desaturation, toned, lightColor, darkColor]\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect, desaturation, toned, lightColor, darkColor]);\n\n  return null;\n};\n\nexport default ColorToneEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { ContrastEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ContrastEffect: React.FC<ContrastEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Contrast,\n      params: [amount]\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect, amount]);\n\n  return null;\n};\n\nexport default ContrastEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst DesaturateEffect: React.FC<EffectProps> = ({ enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply: false,\n      enabled,\n      effect: EffectType.Desaturate\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default DesaturateEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { GreyScaleEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst GreyScaleEffect: React.FC<GreyScaleEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.GreyScale,\n      params: [amount]\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect, amount]);\n\n  return null;\n};\n\nexport default GreyScaleEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { HueEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst HueEffect: React.FC<HueEffectProps> = ({ multiply = true, enabled = true, rotation = 0 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Hue,\n      params: [rotation]\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect, rotation]);\n\n  return null;\n};\n\nexport default HueEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst KodachromeEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Kodachrome\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default KodachromeEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst LsdEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Lsd\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default LsdEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst NegativeEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Negative\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default NegativeEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { NightEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst NightEffect: React.FC<NightEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Night,\n      params: [amount]\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect, amount]);\n\n  return null;\n};\n\nexport default NightEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst PolaroidEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Polaroid\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default PolaroidEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { PredatorEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst PredatorEffect: React.FC<PredatorEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Predator,\n      params: [amount]\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect, amount]);\n\n  return null;\n};\n\nexport default PredatorEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { SaturateEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst SaturateEffect: React.FC<SaturateEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Saturate,\n      params: [amount]\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect, amount]);\n\n  return null;\n};\n\nexport default SaturateEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst SepiaEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Sepia\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default SepiaEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst TechnicolorEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Technicolor\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default TechnicolorEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ToBGREffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.ToBGR\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default ToBGREffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst VintageEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Vintage\n    });\n\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, multiply, enabled, updateEffect, removeEffect]);\n\n  return null;\n};\n\nexport default VintageEffect;\n"],"sourceRoot":""}