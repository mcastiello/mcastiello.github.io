{"version":3,"sources":["views/pages/Holes.tsx","views/CodeViewer.tsx"],"names":["HolesExample","x","y","width","height","color","radius","HolesDoc","style","src","SyntaxHighlighter","registerLanguage","tsx","CodeViewer","children","useState","code","setCode","useEffect","fetch","then","response","text","darcula","language","showLineNumbers"],"mappings":"0OAMaA,EAAyB,WACpC,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,KAAD,CAAWC,EAAG,GAAIC,EAAG,GAAIC,MAAO,IAAKC,OAAQ,IAA7C,UACE,cAAC,IAAD,CAAWC,MAAO,QAClB,eAAC,IAAD,WACE,cAAC,IAAD,CAAQJ,EAAG,GAAIC,EAAG,GAAII,OAAQ,KAC9B,cAAC,IAAD,CAAQL,EAAG,GAAIC,EAAG,GAAII,OAAQ,KAC9B,cAAC,IAAD,CAAQL,EAAG,IAAKC,EAAG,IAAKI,OAAQ,gBA0B7BC,UAlBY,WACzB,OACE,qCACE,cAAC,IAAD,oBACA,cAAC,IAAD,wJAIA,cAAC,IAAD,CAAOC,MAAO,CAAEJ,OAAQ,KAAxB,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYS,IAAK,8C,uFC9BzBC,IAAkBC,iBAAiB,MAAOC,KAwB3BC,IAtBoD,SAAC,GAA4B,IAA1BJ,EAAyB,EAAzBA,IAAyB,IAApBK,gBAAoB,MAAT,GAAS,IACrEC,mBAASD,GAD4D,mBACtFE,EADsF,KAChFC,EADgF,KAe7F,OAZAC,qBAAU,WACJT,GACFU,MAAMV,GAAKW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAE,GAAI,OAAIL,EAAQK,QAEnE,CAACb,IAEJS,qBAAU,WACJJ,GACFG,EAAQH,KAET,CAACA,IAGF,cAAC,IAAD,CAAmBN,MAAOe,IAASC,SAAU,MAAOC,iBAAe,EAAnE,SACGT","file":"static/js/87.8d3c3d66.chunk.js","sourcesContent":["import { Block } from 'framework7-react';\nimport { FillStyle, PixiCanvas, PixiGraphics, Holes, Rectangle, Circle } from 'pixi-reactive';\nimport React from 'react';\nimport CodeViewer from '../CodeViewer';\nimport { StyledIntroduction, StyledTitle } from '../StyledComponents';\n\nexport const HolesExample: React.FC = () => {\n  return (\n    <PixiCanvas>\n      <PixiGraphics>\n        <Rectangle x={20} y={20} width={150} height={150}>\n          <FillStyle color={0x00ff00} />\n          <Holes>\n            <Circle x={50} y={50} radius={25} />\n            <Circle x={95} y={95} radius={25} />\n            <Circle x={140} y={140} radius={25} />\n          </Holes>\n        </Rectangle>\n      </PixiGraphics>\n    </PixiCanvas>\n  );\n};\n\nconst HolesDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>Holes</StyledTitle>\n      <StyledIntroduction>\n        It draws a series of holes inside a shape. IMPORTANT: holes must be fully inside a shape to work! Also weirdness ensues if holes\n        overlap!\n      </StyledIntroduction>\n      <Block style={{ height: 200 }}>\n        <HolesExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/HolesExample.tsx'} />\n      </Block>\n    </>\n  );\n};\n\nexport default HolesDoc;\n","import React, { ReactText, useEffect, useState } from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nconst CodeViewer: React.FC<{src?: string, children?: ReactText}> = ({ src, children = '' }) => {\n  const [code, setCode] = useState(children);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src).then(response => response.text()).then(text => setCode(text));\n    }\n  }, [src]);\n\n  useEffect(() => {\n    if (children) {\n      setCode(children);\n    }\n  }, [children]);\n\n  return (\n    <SyntaxHighlighter style={darcula} language={'tsx'} showLineNumbers>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeViewer;\n"],"sourceRoot":""}