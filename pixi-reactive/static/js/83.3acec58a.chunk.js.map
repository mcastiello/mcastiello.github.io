{"version":3,"sources":["views/pages/PixiTween.tsx","views/PropsTable.tsx","views/CodeViewer.tsx"],"names":["props","events","PixiTweenExample","useState","width","height","size","setSize","onResize","x","y","rotation","state","TweenState","Loop","duration","ease","Easing","BounceOut","Math","PI","Linear","borderRadius","color","Alternate","PixiTweenDoc","href","text","external","target","style","src","pageUrlMap","StyledCode","styled","code","getTypeLinks","a","getPageChildren","Pages","Types","pages","map","Map","i","length","getComponentUrl","path","set","PropsTable","types","setTypes","useEffect","then","prop","index","f7","has","get","split","content","SyntaxHighlighter","registerLanguage","tsx","CodeViewer","children","setCode","fetch","response","darcula","language","showLineNumbers"],"mappings":"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","file":"static/js/83.3acec58a.chunk.js","sourcesContent":["import { Block } from 'framework7-react';\nimport { Rectangle, FillStyle, PixiCanvas, PixiGraphics, PixiRenderTexture, PixiSprite, ColorMatrixFilter, HueEffect } from 'pixi-reactive';\nimport { Easing, PixiTween, TweenState } from 'pixi-reactive-tween';\nimport React, { useState } from 'react';\nimport CodeViewer from '../CodeViewer';\nimport PropsTable, { PropsDefinition, StyledCode } from '../PropsTable';\nimport { StyledIntroduction, StyledLink, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst props: PropsDefinition = [\n  ['duration', false, 'number', '1000', 'Duration of the tween animation'],\n  ['state', false, 'TweenState', 'TweenState.Stop', 'State of the animation'],\n  ['direction', false, 'TweenDirection', 'TweenDirection.Forward', 'Direction used to play the animation'],\n  ['time', false, 'number', 'null', 'Set the position in the timeline of a stopped animation'],\n  ['ease', false, 'Easing', 'Easing.Linear', 'Easing effect applied to the animation'],\n  [\n    'easeParams',\n    false,\n    'string',\n    'null',\n    'Some easing effects require a few parameters ' +\n    '(please, refer to the GreenSock website for details). ' +\n    'Parameters can be added to the string and separated by a comma'\n  ]\n];\nconst events: PropsDefinition = [\n  ['onAnimationStart', false, 'function', 'null', 'Callback executed when an animation starts'],\n  ['onAnimationComplete', false, 'function', 'null', 'Callback executed when an animation reaches the end'],\n  ['onAnimationInvert', false, 'function', 'null', 'Callback executed when an animation changes direction'],\n  ['onAnimationIterate', false, 'function', 'null', 'Callback executed when an animation loops'],\n];\n\nconst PixiTweenExample: React.FC = () => {\n  const [size, setSize] = useState({ width: 0, height: 0 });\n\n  return (\n    <PixiCanvas onResize={setSize}>\n      <PixiSprite x={-50} y={-50} rotation={0}>\n        <PixiTween state={TweenState.Loop} duration={2000} y={220} ease={Easing.BounceOut} />\n        <PixiTween state={TweenState.Loop} duration={2000} x={size.width + 100} rotation={Math.PI * 2} ease={Easing.Linear} />\n        <PixiRenderTexture width={80} height={80}>\n          <PixiGraphics>\n            <Rectangle x={0} y={0} width={80} height={80} borderRadius={25}>\n              <FillStyle color={0xff0000} />\n            </Rectangle>\n          </PixiGraphics>\n        </PixiRenderTexture>\n        <ColorMatrixFilter>\n          <HueEffect rotation={0}>\n            <PixiTween state={TweenState.Alternate} duration={5000} rotation={360} />\n          </HueEffect>\n        </ColorMatrixFilter>\n      </PixiSprite>\n    </PixiCanvas>\n  );\n};\n\nconst PixiTweenDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>PixiTween</StyledTitle>\n      <StyledIntroduction>\n        The <StyledCode>PixiTween</StyledCode> is based on the\n        <StyledLink href={'https://greensock.com/'} text={'GreenSock'} external target={'_blank'} /> tween engine.\n        <br />\n        This component comes as an external plugin, so, in order to use it, you first need to install it as a dependency:\n        <Block>\n          <StyledCode>npm install pixi-reactive-tween</StyledCode>\n          <br />\n          or\n          <br />\n          <StyledCode>yarn add pixi-reactive-tween</StyledCode>\n        </Block>\n        You can add as many tween components as you want to each Pixi component. Each of them will define a tween animation, they can have\n        different durations, effects and directions; they can also animate different numeric properties of the parent component. Be sure\n        that the property you want to tween has an initial value set in the parent component, otherwise the tween will not work.\n      </StyledIntroduction>\n      <Block style={{ height: 300 }}>\n        <PixiTweenExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/PixiTweenExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={props} />\n      <StyledSectionTitle>Event Callbacks</StyledSectionTitle>\n      <PropsTable props={events} />\n    </>\n  );\n};\n\nexport default PixiTweenDoc;\n","import { Block, Icon } from 'framework7-react';\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { getComponentUrl, getPageChildren, Pages } from '../pages';\nimport { StyledTable, StyledLink, StyledTableContainer } from './StyledComponents';\n\ntype PropDefinition = [string, boolean, string, string, string];\nexport type PropsDefinition = PropDefinition[];\n\nexport const StyledCode = styled.code`\n  background: rgba(100, 100, 100, 0.5);\n  padding: 0 5px;\n  border-radius: 2px;\n`;\n\nexport const parseCode = (text: string) => {\n  const parts = text.split(/`/);\n\n  return parts.map((content, index) => {\n    if (index % 2 === 0) {\n      return <span key={index}>{content}</span>;\n    } else {\n      return <StyledCode key={index}>{content}</StyledCode>;\n    }\n  });\n};\n\nlet pageUrlMap: Map<Pages, string>;\n\nconst getTypeLinks = async () => {\n  if (!pageUrlMap) {\n    const pages = await getPageChildren(Pages.Types);\n    const map = new Map<Pages, string>();\n\n    for (let i = 0; i < pages.length; i++) {\n      const path = await getComponentUrl(pages[i]);\n\n      map.set(pages[i], `#${path}`);\n    }\n\n    pageUrlMap = map;\n  }\n\n  return pageUrlMap;\n};\n\nconst PropsTable: React.FC<{ props: PropsDefinition }> = ({ props = [] }) => {\n  const [types, setTypes] = useState<Map<Pages, string>>();\n\n  useEffect(() => {\n    getTypeLinks().then(setTypes);\n  }, []);\n\n  return (\n    <Block>\n      <StyledTableContainer>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Required</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.map((prop, index) => {\n              return (\n                <tr key={index}>\n                  <td>{prop[0]}</td>\n                  <td>{prop[1] ? <Icon f7={'checkmark_alt'} size={14} /> : null}</td>\n                  <td>\n                    <code>\n                      {types && types.has(prop[2] as Pages) ? (\n                        <StyledLink text={prop[2]} href={types.get(prop[2] as Pages)} external />\n                      ) : (\n                        prop[2]\n                      )}\n                    </code>\n                  </td>\n                  <td>\n                    <code>{prop[3]}</code>\n                  </td>\n                  <td>{parseCode(prop[4])}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </StyledTable>\n      </StyledTableContainer>\n    </Block>\n  );\n};\n\nexport default PropsTable;\n","import React, { ReactText, useEffect, useState } from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nconst CodeViewer: React.FC<{src?: string, children?: ReactText}> = ({ src, children = '' }) => {\n  const [code, setCode] = useState(children);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src).then(response => response.text()).then(text => setCode(text));\n    }\n  }, [src]);\n\n  useEffect(() => {\n    if (children) {\n      setCode(children);\n    }\n  }, [children]);\n\n  return (\n    <SyntaxHighlighter style={darcula} language={'tsx'} showLineNumbers>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeViewer;\n"],"sourceRoot":""}