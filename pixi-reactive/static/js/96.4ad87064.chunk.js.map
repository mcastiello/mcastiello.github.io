{"version":3,"sources":["views/pages/TweenContext.tsx","views/PropsTable.tsx"],"names":["props","TweenContextDoc","pageUrlMap","StyledCode","styled","code","getTypeLinks","a","getPageChildren","Pages","Types","pages","map","Map","i","length","getComponentUrl","path","set","PropsTable","useState","types","setTypes","useEffect","then","prop","index","f7","size","has","text","href","get","external","split","content"],"mappings":"oLAKMA,EAAyB,CAC7B,CAAC,QAAQ,EAAO,WAAY,uCAAwC,sDACpE,CAAC,QAAQ,EAAO,WAAY,uCAAwC,gCACpE,CACE,aACA,EACA,WACA,uCACA,iFAEF,CACE,QACA,EACA,WACA,4BACA,oIAEF,CAAC,WAAW,EAAO,WAAY,aAAc,yCAC7C,CAAC,WAAW,EAAO,WAAY,yBAA0B,oDA6B5CC,UA1BmB,WAChC,OACE,qCACE,cAAC,IAAD,2BACA,eAAC,IAAD,0CAC8B,cAAC,IAAD,kCAD9B,yIAGE,eAAC,IAAD,WACE,cAAC,IAAD,8CACA,uBAFF,KAIE,uBACA,cAAC,IAAD,8CARJ,kDAUiD,cAAC,IAAD,oBAVjD,qHAYE,uBAZF,0BAayB,cAAC,IAAD,uBAbzB,8HAgBA,cAAC,IAAD,6BACA,cAAC,IAAD,CAAYD,MAAOA,S,yTCtClB,IAkBHE,EAlBSC,EAAaC,IAAOC,KAAV,KAoBjBC,EAAY,uCAAG,kCAAAC,EAAA,yDACdL,EADc,iCAEGM,YAAgBC,IAAMC,OAFzB,OAEXC,EAFW,OAGXC,EAAM,IAAIC,IAEPC,EAAI,EALI,YAKDA,EAAIH,EAAMI,QALT,iCAMIC,YAAgBL,EAAMG,IAN1B,OAMTG,EANS,OAQfL,EAAIM,IAAIP,EAAMG,GAAd,WAAsBG,IARP,QAKiBH,IALjB,uBAWjBZ,EAAaU,EAXI,iCAcZV,GAdY,4CAAH,qDAkEHiB,IAjD0C,SAAC,GAAoB,IAAD,IAAjBnB,aAAiB,MAAT,GAAS,IACjDoB,qBADiD,mBACpEC,EADoE,KAC7DC,EAD6D,KAO3E,OAJAC,qBAAU,WACRjB,IAAekB,KAAKF,KACnB,IAGD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,gCACE,+BACE,sCACA,0CACA,sCACA,yCACA,kDAGJ,gCACGtB,EAAMY,KAAI,SAACa,EAAMC,GAChB,OACE,+BACE,6BAAKD,EAAK,KACV,6BAAKA,EAAK,GAAK,cAAC,IAAD,CAAME,GAAI,gBAAiBC,KAAM,KAAS,OACzD,6BACE,+BACGP,GAASA,EAAMQ,IAAIJ,EAAK,IACvB,cAAC,IAAD,CAAYK,KAAML,EAAK,GAAIM,KAAMV,EAAMW,IAAIP,EAAK,IAAcQ,UAAQ,IAEtER,EAAK,OAIX,6BACE,+BAAOA,EAAK,OAEd,8BArEQK,EAqEOL,EAAK,GApEtBK,EAAKI,MAAM,KAEZtB,KAAI,SAACuB,EAAST,GACzB,OAAIA,EAAQ,IAAM,EACT,+BAAmBS,GAART,GAEX,cAACvB,EAAD,UAAyBgC,GAART,WA+CLA,GAtDA,IAACI","file":"static/js/96.4ad87064.chunk.js","sourcesContent":["import { Block } from 'framework7-react';\nimport React from 'react';\nimport PropsTable, { PropsDefinition, StyledCode } from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst props: PropsDefinition = [\n  ['play', false, 'function', '(direction?: TweenDirection) => void', 'Play the animation once in the requested direction'],\n  ['loop', false, 'function', '(direction?: TweenDirection) => void', 'Play the animation in a loop'],\n  [\n    'alternate',\n    false,\n    'function',\n    '(direction?: TweenDirection) => void',\n    'Play the animation in alternate directions (start/end -> end/start and so on)'\n  ],\n  [\n    'stop',\n    false,\n    'function',\n    '(reset?: boolean) => void',\n    'Stop the animation at the current position. If the `reset` flag is set to `true`, the animation is reset to its initial position'\n  ],\n  ['reverse', false, 'function', '() => void', 'Invert the direction of the animation'],\n  ['setTime', false, 'function', '(time: number) => void', 'Set a stopped animation at the requested `time`']\n];\n\nconst TweenContextDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>TweenContext</StyledTitle>\n      <StyledIntroduction>\n        This context is part of the <StyledCode>pixi-reactive-tween</StyledCode> and will store the state of the current of the animation\n        and all the controls to handle the animation. It can be installed as follow:\n        <Block>\n          <StyledCode>npm install pixi-reactive-tween</StyledCode>\n          <br />\n          or\n          <br />\n          <StyledCode>yarn add pixi-reactive-tween</StyledCode>\n        </Block>\n        The context has 2 properties, the first is the <StyledCode>state</StyledCode>, it can be a number or an object with all numeric\n        properties. Those values will get updated during the animation.\n        <br />\n        The second property is <StyledCode>controls</StyledCode> and contains all the functions that will allow you to control the\n        animation. Check the table below for a detailed list.\n      </StyledIntroduction>\n      <StyledSectionTitle>Tween Controls</StyledSectionTitle>\n      <PropsTable props={props} />\n    </>\n  );\n};\n\nexport default TweenContextDoc;\n","import { Block, Icon } from 'framework7-react';\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { getComponentUrl, getPageChildren, Pages } from '../pages';\nimport { StyledTable, StyledLink, StyledTableContainer } from './StyledComponents';\n\ntype PropDefinition = [string, boolean, string, string, string];\nexport type PropsDefinition = PropDefinition[];\n\nexport const StyledCode = styled.code`\n  background: rgba(100, 100, 100, 0.5);\n  padding: 0 5px;\n  border-radius: 2px;\n`;\n\nexport const parseCode = (text: string) => {\n  const parts = text.split(/`/);\n\n  return parts.map((content, index) => {\n    if (index % 2 === 0) {\n      return <span key={index}>{content}</span>;\n    } else {\n      return <StyledCode key={index}>{content}</StyledCode>;\n    }\n  });\n};\n\nlet pageUrlMap: Map<Pages, string>;\n\nconst getTypeLinks = async () => {\n  if (!pageUrlMap) {\n    const pages = await getPageChildren(Pages.Types);\n    const map = new Map<Pages, string>();\n\n    for (let i = 0; i < pages.length; i++) {\n      const path = await getComponentUrl(pages[i]);\n\n      map.set(pages[i], `#${path}`);\n    }\n\n    pageUrlMap = map;\n  }\n\n  return pageUrlMap;\n};\n\nconst PropsTable: React.FC<{ props: PropsDefinition }> = ({ props = [] }) => {\n  const [types, setTypes] = useState<Map<Pages, string>>();\n\n  useEffect(() => {\n    getTypeLinks().then(setTypes);\n  }, []);\n\n  return (\n    <Block>\n      <StyledTableContainer>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Required</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.map((prop, index) => {\n              return (\n                <tr key={index}>\n                  <td>{prop[0]}</td>\n                  <td>{prop[1] ? <Icon f7={'checkmark_alt'} size={14} /> : null}</td>\n                  <td>\n                    <code>\n                      {types && types.has(prop[2] as Pages) ? (\n                        <StyledLink text={prop[2]} href={types.get(prop[2] as Pages)} external />\n                      ) : (\n                        prop[2]\n                      )}\n                    </code>\n                  </td>\n                  <td>\n                    <code>{prop[3]}</code>\n                  </td>\n                  <td>{parseCode(prop[4])}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </StyledTable>\n      </StyledTableContainer>\n    </Block>\n  );\n};\n\nexport default PropsTable;\n"],"sourceRoot":""}