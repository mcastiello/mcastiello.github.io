{"version":3,"sources":["views/CodeViewer.tsx","../../src/contexts/AnimationContext.ts","../../src/props/PixiSpriteProps.ts","../../src/props/PixiTilingSpriteProps.ts","../../src/contexts/ParentContext.ts","../../src/contexts/RenderingContext.ts","../../src/contexts/ShapeTextureContext.ts","../../src/contexts/ShapeStyleContext.ts","../../src/contexts/GraphicsContext.ts","../../src/contexts/SpeedContext.ts","../../src/contexts/TextureContext.ts","../../src/contexts/PointerContext.ts","../../src/contexts/EffectContext.ts","../../src/contexts/PointsContext.ts","../../src/props/PixiAnimatedSpriteProps.ts","../../src/props/PixiFilterProps.ts","../../src/props/PixiGraphicsProps.ts","../../src/types/AnimationContextTypes.ts","../../src/types/RenderingContextTypes.ts","../../src/types/SpeedContextTypes.ts","../../src/types/GenericTypes.ts","../../src/types/EventTypes.ts","../../src/types/BlendModesTypes.ts","../../src/types/GraphicsTypes.ts","../../src/types/TextStyleTypes.ts","../../src/types/EffectTypes.ts","../../src/hooks/genericHooks.ts","../../src/types/PointerContextType.ts","../../src/hooks/propHooks.ts","../../src/hooks/contextHooks.ts","../../src/components/shapes/Holes.tsx","../../src/components/PixiCanvas.tsx","../../src/components/PixiDisplayObject.tsx","../../src/components/PixiHtmlContainer.tsx","../../src/components/PixiContainer.tsx","../../src/components/PixiTexture.tsx","../../src/components/PixiRenderTexture.tsx","../../src/components/PixiSprite.tsx","../../src/components/PixiGraphics.tsx","../../src/components/PixiTilingSprite.tsx","../../src/components/PixiAnimatedSprite.tsx","../../src/components/PixiText.tsx","../../src/components/PixiMask.tsx","../../src/components/shapes/ShapeTexture.tsx","../../src/components/shapes/LineStyle.tsx","../../src/components/shapes/FillStyle.tsx","../../src/components/shapes/Shape.tsx","../../src/components/shapes/Rectangle.tsx","../../src/components/shapes/Circle.tsx","../../src/components/shapes/Ellipse.tsx","../../src/components/shapes/Star.tsx","../../src/components/shapes/Polygon.tsx","../../src/components/shapes/Point.tsx","../../src/components/shapes/Arc.tsx","../../src/components/shapes/BezierCurve.tsx","../../src/components/shapes/QuadraticCurve.tsx","../../src/components/shapes/ArcCurve.tsx","../../src/components/shapes/Path.tsx","../../src/filters/PixiFilter.tsx","../../src/filters/AlphaFilter.tsx","../../src/filters/BlurFilter.tsx","../../src/filters/FXAAFilter.tsx","../../src/filters/NoiseFilter.tsx","../../src/filters/ColorMatrixFilter.tsx","../../src/filters/effects/BlackAndWhiteEffect.tsx","../../src/filters/effects/BrightnessEffect.tsx","../../src/filters/effects/BrowniEffect.tsx","../../src/filters/effects/ColorToneEffect.tsx","../../src/filters/effects/ContrastEffect.tsx","../../src/filters/effects/DesaturateEffect.tsx","../../src/filters/effects/GreyScaleEffect.tsx","../../src/filters/effects/HueEffect.tsx","../../src/filters/effects/KodachromeEffect.tsx","../../src/filters/effects/LsdEffect.tsx","../../src/filters/effects/NegativeEffect.tsx","../../src/filters/effects/NightEffect.tsx","../../src/filters/effects/PolaroidEffect.tsx","../../src/filters/effects/PredatorEffect.tsx","../../src/filters/effects/SaturateEffect.tsx","../../src/filters/effects/SepiaEffect.tsx","../../src/filters/effects/TechnicolorEffect.tsx","../../src/filters/effects/ToBGREffect.tsx","../../src/filters/effects/VintageEffect.tsx"],"names":["SyntaxHighlighter","registerLanguage","tsx","CodeViewer","src","children","useState","code","setCode","useEffect","fetch","then","response","text","style","darcula","language","showLineNumbers","AnimationContext","React","frameId","elapsed","fps","averageFps","minFps","maxFps","history","defaultParentContext","parent","x","y","width","height","top","left","ParentContext","defaultRenderingContext","update","getTexture","renderId","stage","RenderingContext","ShapeTextureContext","setMatrix","setTexture","ShapeStyleContext","setFillStyle","setLineStyle","setHoles","GraphicsContext","drawShape","removeShape","initialSpeedState","speed","SpeedContext","play","pause","increase","decrease","setSpeed","TextureContext","PointerContext","over","EffectContext","updateEffect","removeEffect","PointsContext","points","addPoint","removePoint","isSprite","element","SpriteProps","TilingSpriteProps","isAnimatedSprite","item","FilterProps","GraphicsProps","AnimationActionType","RenderingContextAction","SpeedContextAction","CursorType","Overflow","GenericProps","Events","BlendModes","BlendModesMap","Map","PIXI","LineJoin","LineCap","ShapeAction","Shapes","PointAction","TextAlign","TextGradient","TextBaseline","TextWhiteLine","FontStyle","FontVariant","FontWeight","defaultTextStyle","align","breakWords","dropShadow","dropShadowAlpha","dropShadowAngle","Math","dropShadowBlur","dropShadowColor","dropShadowDistance","fill","fillGradientType","fillGradientStops","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","letterSpacing","lineHeight","lineJoin","miterLimit","padding","stroke","strokeThickness","textBaseline","trim","whiteSpace","wordWrap","wordWrapWidth","leading","EffectType","EffectActionType","useId","id","v4","state","setState","useRelativePosition","setLeft","setTop","anchor","setAnchor","useFilter","useContext","index","useLoadedTexture","textureName","context","texture","loadedTexture","useTexture","currentScale","sprite","useTextureUpdate","emptyIndex","propsToMap","map","Object","prop","props","useUpdatedProps","updatedProperties","setUpdatedProperties","updatedMap","propMap","newValue","value","getMapUpdate","useGenericProps","rectangle","updateGenericProps","useSpriteProps","updateSpriteProps","useGraphicsProps","updateGraphicsProps","graphics","useAlignedPosition","parentWidth","parentHeight","alignX","alignY","useTilingSpriteProps","updateTilingSpriteProps","useFilterProps","updateFilterProps","filter","useEvent","callback","PointerContextActionType","cleanName","name","textureLoaded","loadedResources","isTouchEvent","event","usePointerContext","offset","setOffset","reducer","useCallback","action","onInteractionMove","useReducer","pointerContext","triggerUpdatePosition","multiplier","retina","type","updateMousePosition","offsetX","offsetY","updateTouchPosition","touch","clientX","clientY","StartOver","EndOver","updatePosition","isMouseEvent","pointerStart","point","onInteractionStart","pointerEnd","onInteractionEnd","pointerOver","pointerCancel","useShapeTextureContext","matrix","usePointsContext","pointMap","pointId","dispatch","useMemo","values","defaultStyle","position","right","margin","isDesktop","PixiCanvas","className","textures","background","overflow","All","filterArea","onUpdate","onAfterRender","onResize","canvasId","speedContext","Increase","Decrease","Play","Pause","useSpeedContext","textureContext","resources","loader","cleanedName","resource","frames","resourceName","count","existingResource","console","useTextureContext","animationContext","initialState","latestFps","fpsHistory","MAX_HISTORY_SIZE","a","useAnimationContext","renderingContext","canvasReference","canvas","setCanvas","renderer","setRenderer","Update","render","Render","reference","document","newRenderer","view","transparent","antialias","useRenderingContext","genericParentContext","containerStyle","setContainerStyle","childrenContainerStyle","setChildrenContainerStyle","parentContext","setParentContext","newStyle","newChildrenStyle","onTouchMove","undefined","onTouchStart","onTouchEnd","onTouchCancel","onPointerEnter","onPointerOver","onPointerDown","onPointerUp","onPointerOut","onPointerCancel","onPointerLeave","onPointerMove","canvasWidth","canvasHeight","PixiDisplayObject","useElement","setX","setY","setWidth","setHeight","transform","setTransform","useParentContext","alpha","angle","buttonMode","cursor","None","interactive","rotation","visible","zIndex","pivotX","pivotY","scaleX","scaleY","skewX","skewY","sortableChildren","SORTABLE_CHILDREN","hitArea","onClick","onMouseDown","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onMouseUpOutside","onPointerTap","onPointerUpOutside","onRemovedFrom","onRightClick","onRightDown","onRightUp","onRightUpOutside","onTap","onTouchEndOutside","onAdded","onRemoved","onChildAdded","callbacks","useDisplayObjectEvents","PixiHtmlContainer","setStyle","active","setActive","display","PixiContainer","container","PixiTexture","onLoad","textureId","loadCallback","PixiRenderTexture","parentRenderContext","parentUpdate","newTexture","PixiSprite","anchorX","anchorY","blendMode","Normal","roundPixels","tint","definition","lastPoint","i","updateGraphics","cap","join","color","holeLastPoint","hole","PixiGraphics","shapes","shape","shapeMap","PixiTilingSprite","tileWidth","setTileWidth","tileHeight","setTileHeight","clampMargin","tileX","tileY","tileScaleX","tileScaleY","uvRespectAnchor","PixiAnimatedSprite","playing","resetOnStop","currentFrame","onAnimationComplete","setFrameId","initialFrame","setInitialFrame","frameCount","setTextures","setCount","textureList","frameList","Array","useFrames","frame","initialTime","duration","isNaN","time","Reset","useFrameAnimation","PixiText","String","isTextureMode","PixiMask","enabled","ShapeTexture","newMatrix","useTransformMatrix","LineStyle","alignment","Butt","Miter","native","shapeTextureContext","FillStyle","Shape","params","styleContext","line","holes","useShapeStyleContext","Rectangle","borderRadius","setParams","shapeType","setShapeType","Circle","radius","Ellipse","Star","innerRadius","noParams","Polygon","pointsContext","Point","setPoint","Arc","startAngle","endAngle","anticlockwise","BezierCurve","xFrom","yFrom","xTo","yTo","controlX","controlY","controlX2","controlY2","QuadraticCurve","ArcCurve","Path","HoleAction","holesReducer","Holes","holeState","updateHoles","addHole","removeHole","PixiFilter","autoFit","resolution","FILTER_RESOLUTION","effects","setEffects","AlphaFilter","BlurFilter","blur","blurX","blurY","quality","repeatEdgePixels","FXAAFilter","FXAA_SEED","noise","seed","ColorMatrixFilter","effectMap","effectData","multiply","updateColorMatrix","BlackAndWhiteEffect","effect","BlackAndWhite","BrightnessEffect","amount","BrowniEffect","Browni","ColorToneEffect","desaturation","toned","lightColor","darkColor","ContrastEffect","DesaturateEffect","Desaturate","GreyScaleEffect","HueEffect","KodachromeEffect","Kodachrome","LsdEffect","Lsd","NegativeEffect","Negative","NightEffect","PolaroidEffect","Polaroid","PredatorEffect","SaturateEffect","SepiaEffect","Sepia","TechnicolorEffect","Technicolor","ToBGREffect","ToBGR","VintageEffect","Vintage"],"mappings":"uLAKAA,IAAkBC,iBAAiB,MAAOC,KAyB3BC,IAvBoD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAyB,IAApBC,gBAAoB,MAAT,GAAS,IACrEC,mBAASD,GAD4D,mBACtFE,EADsF,KAChFC,EADgF,KAe7F,OAZAC,qBAAU,WACJL,GACFM,MAAMN,GAAKO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAE,GAAI,OAAIL,EAAQK,QAEnE,CAACT,IAEJK,qBAAU,WACJJ,GACFG,EAAQH,KAET,CAACA,IAIF,kBAAC,IAAD,CAAmBS,MAAOC,IAASC,SAAU,MAAOC,iBAAe,GAChEV,K,skFCtBP,ICgBA,ECPA,EFCaW,EAAmBC,kBAVsB,CACpDC,QADoD,EAEpDC,QAFoD,EAGpDC,IAHoD,EAIpDC,WAJoD,EAKpDC,OALoD,EAMpDC,OANoD,EAOpDC,QAAS,KGNEC,EAA0D,CACrEC,OAAQ,IAD6D,IAErEC,EAFqE,EAGrEC,EAHqE,EAIrEC,MAJqE,EAKrEC,OALqE,EAMrEC,IANqE,EAOrEC,KAAM,GAGKC,EAAgBhB,kBAAtB,GCVDiB,EAAgD,CACpDC,OAAQ,wBACRC,WAAY,aACZP,MAHoD,EAIpDC,OAJoD,EAKpDO,SALoD,EAMpDC,MAAO,IAAI,EAAJ,GAGIC,EAAmBtB,kBAAzB,GCLMuB,EAAsBvB,kBALkB,CACnDwB,UAAW,wBACXC,WAAY,0BCIDC,EAAoB1B,kBANgB,CAC/C2B,aAAc,wBACdC,aAAc,wBACdC,SAAU,0BCECC,EAAkB9B,kBALqB,CAClD+B,UAAW,wBACXC,YAAa,0BCOFC,EAAgC,CAC3CC,MAAO,GAGIC,EAAenC,kBAbkB,CAC5CkC,MAD4C,EAE5CE,KAAM,wBACNC,MAAO,wBACPC,SAAU,wBACVC,SAAU,wBACVC,SAAU,0BCNCC,EAAiBzC,kBAAvB,ICAM0C,EAAiB,kBAAwC,CAAEhC,EAAF,EAAQC,EAAR,EAAcgC,MAAM,ICA7EC,EAAgB,kBAAuC,CAClEC,aAAc,wBACdC,aAAc,0BCIHC,EAAgB/C,kBANmB,CAC9CgD,OAD8C,GAE9CC,SAAU,wBACVC,YAAa,0BXHFC,EAAW,SAACC,GACvB,OAAOA,EAAP,WAeF,SAAYC,GACVA,oBACAA,oBACAA,4BAHF,CAAYA,MAAZ,KCPA,SAAYC,GACVA,4BACAA,gBACAA,gBACAA,0BACAA,0BACAA,oCANF,CAAYA,MAAZ,KWRO,ICOP,ECJA,ECQA,ECJA,ECFA,ECPA,EAuCA,EAOA,EC1CA,ECJA,EREaC,EAAmB,SAACC,GAC/B,QAAWA,EAAX,WCMF,SAAYC,GACVA,oBACAA,wBACAA,oBACAA,oBACAA,0BACAA,gBACAA,cACAA,gBACAA,gBACAA,oBACAA,sCACAA,gBACAA,cAbF,CAAYA,MAAZ,KCJA,SAAYC,GACVA,wBACAA,cAFF,CAAYA,MAAZ,KCQA,SAAYC,GACVA,2BACAA,qBAFF,CAAYA,MAAZ,KCJA,SAAYC,GACVA,uBACAA,uBAFF,CAAYA,MAAZ,KCFA,SAAYC,GACVA,2BACAA,2BACAA,qBACAA,mBACAA,iBALF,CAAYA,MAAZ,KCPA,SAAYC,GACVA,cACAA,oBACAA,cACAA,6BACAA,cACAA,oBACAA,sBACAA,cACAA,cACAA,wBACAA,cACAA,+BACAA,gBACAA,cACAA,cACAA,mBACAA,2BACAA,cACAA,sBACAA,yBACAA,yBACAA,yBACAA,yBACAA,wBACAA,yBACAA,wBACAA,8BACAA,8BACAA,8BACAA,8BACAA,6BACAA,+BACAA,yCACAA,yCACAA,mBACAA,qBApCF,CAAYA,MAAZ,KAuCA,SAAYC,GACVA,mBACAA,+BACAA,2BACAA,iBAJF,CAAYA,MAAZ,KAOA,SAAYC,GACVA,gBACAA,gBACAA,0BACAA,kBACAA,4BACAA,cACAA,kBACAA,kBACAA,sBACAA,kBACAA,kBACAA,gBACAA,gBACAA,oBACAA,QACAA,QACAA,kBACAA,gBACAA,kBACAA,sCACAA,0BACAA,oBAtBF,CAAYA,MAAZ,KC1CA,SAAYC,GACVA,gBACAA,wBACAA,wBACAA,sBACAA,wBACAA,oBACAA,kCACAA,gCACAA,4BACAA,4BACAA,0BACAA,4BACAA,0BACAA,wBACAA,sCACAA,4BACAA,0BACAA,wBACAA,oBACAA,kCA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","file":"static/js/2.b346a218.chunk.js","sourcesContent":["import React, { ReactText, useEffect, useState } from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nconst CodeViewer: React.FC<{src?: string, children?: ReactText}> = ({ src, children = '' }) => {\n  const [code, setCode] = useState(children);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src).then(response => response.text()).then(text => setCode(text));\n    }\n  }, [src]);\n\n  useEffect(() => {\n    if (children) {\n      setCode(children);\n    }\n  }, [children]);\n\n  return (\n    // @ts-ignore\n    <SyntaxHighlighter style={darcula} language={'tsx'} showLineNumbers>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeViewer;\n","import { AnimationContextType } from '../types';\nimport React from 'react';\n\nconst defaultAnimationContext: AnimationContextType = {\n  frameId: 0,\n  elapsed: 0,\n  fps: 0,\n  averageFps: 0,\n  minFps: 0,\n  maxFps: 0,\n  history: []\n};\n\nexport const AnimationContext = React.createContext(defaultAnimationContext);\n","import { GenericEventType, GenericType, PropValue } from '../types';\nimport { GraphicsPropsType } from './PixiGraphicsProps';\n\nexport const isSprite = (element: PIXI.DisplayObject): element is PIXI.Sprite => {\n  return element.isSprite;\n};\n\nexport type UpdatableTextureType = {\n  texture?: string;\n};\n\nexport type SpritePropsType = {\n  alignX?: number;\n  alignY?: number;\n  anchorX?: number;\n  anchorY?: number;\n  roundPixels?: boolean;\n};\n\nexport enum SpriteProps {\n  AnchorX = 'anchorX',\n  AnchorY = 'anchorY',\n  RoundPixels = 'roundPixels'\n}\n\nexport type SpritePropsMap = Map<SpriteProps, PropValue>;\n\nexport type PixiSpriteProps = GenericType & GenericEventType & GraphicsPropsType & SpritePropsType & UpdatableTextureType;\n","import { PropValue } from '../types';\nimport { PixiSpriteProps } from './PixiSpriteProps';\n\nexport type TilingSpritePropsType = {\n  clampMargin?: number;\n  tileX?: number;\n  tileY?: number;\n  tileScaleX?: number;\n  tileScaleY?: number;\n  uvRespectAnchor?: boolean;\n};\n\nexport enum TilingSpriteProps {\n  ClampMargin = 'clampMargin',\n  TileX = 'tileX',\n  TileY = 'tileY',\n  TileScaleX = 'tileScaleX',\n  TileScaleY = 'tileScaleY',\n  UvRespectAnchor = 'uvRespectAnchor'\n}\n\nexport type TilingSpritePropsMap = Map<TilingSpriteProps, PropValue>;\n\nexport type PixiTilingSpriteProps = PixiSpriteProps & TilingSpritePropsType;\n","import React from 'react';\nimport { ParentContextType } from '../types';\nimport * as PIXI from 'pixi.js';\n\nexport const defaultParentContext: ParentContextType<PIXI.Container> = {\n  parent: new PIXI.Container(),\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0\n};\n\nexport const ParentContext = React.createContext(defaultParentContext);\n","import * as PIXI from 'pixi.js';\nimport { RenderingContextType } from '../types';\nimport React from 'react';\n\nconst defaultRenderingContext: RenderingContextType = {\n  update: () => null,\n  getTexture: () => undefined,\n  width: 0,\n  height: 0,\n  renderId: 0,\n  stage: new PIXI.Container()\n};\n\nexport const RenderingContext = React.createContext(defaultRenderingContext);\n","import { ShapeTextureType } from '../types';\nimport React from 'react';\n\nconst defaultShapeTextureContext: ShapeTextureType = {\n  setMatrix: () => null,\n  setTexture: () => null\n};\n\nexport const ShapeTextureContext = React.createContext(defaultShapeTextureContext);\n","import { ShapeStyleType } from '../types';\nimport React from 'react';\n\nconst defaultShapeStyleContext: ShapeStyleType = {\n  setFillStyle: () => null,\n  setLineStyle: () => null,\n  setHoles: () => null\n};\n\nexport const ShapeStyleContext = React.createContext(defaultShapeStyleContext);\n","import { GraphicsContextType } from '../types';\nimport React from 'react';\n\nconst defaultGraphicsContext: GraphicsContextType = {\n  drawShape: () => null,\n  removeShape: () => null\n};\n\nexport const GraphicsContext = React.createContext(defaultGraphicsContext);\n","import { SpeedContextType, SpeedState } from '../types';\nimport React from 'react';\n\nconst defaultSpeedContext: SpeedContextType = {\n  speed: 1,\n  play: () => null,\n  pause: () => null,\n  increase: () => null,\n  decrease: () => null,\n  setSpeed: () => null\n};\n\nexport const initialSpeedState: SpeedState = {\n  speed: 1\n};\n\nexport const SpeedContext = React.createContext(defaultSpeedContext);\n","import React from 'react';\nimport { TextureContextType } from '../types';\n\nexport const TextureContext = React.createContext<TextureContextType>({});\n","import React from 'react';\nimport { PointerContextType } from '../types/PointerContextType';\n\nexport const PointerContext = React.createContext<PointerContextType>({ x: 0, y: 0, over: false });\n","import React from 'react';\nimport { EffectContextType } from '../types';\n\nexport const EffectContext = React.createContext<EffectContextType>({\n  updateEffect: () => null,\n  removeEffect: () => null\n});\n","import React from 'react';\nimport { PointsContextType } from '../types';\n\nconst defaultPointsContext: PointsContextType = {\n  points: [],\n  addPoint: () => null,\n  removePoint: () => null\n};\n\nexport const PointsContext = React.createContext(defaultPointsContext);\n","import * as PIXI from 'pixi.js';\nimport { EventListener } from '../types';\nimport { PixiSpriteProps } from './PixiSpriteProps';\n\nexport const isAnimatedSprite = (item: PIXI.Container): item is PIXI.AnimatedSprite => {\n  return !!((item as unknown) as PIXI.AnimatedSprite).textures;\n};\n\nexport type AnimatedSpriteProps = {\n  frames?: string[] | string;\n  playing?: boolean;\n  resetOnStop?: boolean;\n  currentFrame?: number;\n  fps?: number;\n  onAnimationComplete?: EventListener;\n};\n\nexport type PixiAnimatedSpriteProps = PixiSpriteProps & AnimatedSpriteProps;\n","import * as PIXI from 'pixi.js';\nimport { BlendModes, PropValue } from '../types';\n\nexport type AbstractFilterProps = {\n  autoFit?: boolean;\n  blendMode?: BlendModes;\n  enabled?: boolean;\n  padding?: number;\n  resolution?: number;\n};\n\nexport enum FilterProps {\n  AutoFit = 'autoFit',\n  BlendMode = 'blendMode',\n  Enabled = 'enabled',\n  Padding = 'padding',\n  Resolution = 'resolution',\n  Alpha = 'alpha',\n  Blur = 'blur',\n  BlurX = 'blurX',\n  BlurY = 'blurY',\n  Quality = 'quality',\n  RepeatEdgePixels = 'repeatEdgePixels',\n  Noise = 'noise',\n  Seed = 'seed'\n}\n\nexport type FilterPropsMap = Map<FilterProps, PropValue>;\n\nexport type PixiFilterProps<T extends PIXI.Filter> = AbstractFilterProps & {\n  item: T;\n};\n\nexport type BlurFilterProps = AbstractFilterProps & {\n  blur?: number;\n  blurX?: number;\n  blurY?: number;\n  quality?: number;\n  repeatEdgePixels?: boolean;\n};\n\nexport type AlphaFilterProps = AbstractFilterProps & {\n  alpha?: number;\n};\n\nexport type NoiseFilterProps = AbstractFilterProps & {\n  noise?: number;\n  seed?: number;\n};\n\nexport type AllFilterProps = AbstractFilterProps | BlurFilterProps | AlphaFilterProps | NoiseFilterProps;\n","import { BlendModes, GenericEventType, GenericType, PropValue } from '../types';\n\nexport type GraphicsPropsType = {\n  blendMode?: BlendModes;\n  tint?: number;\n};\n\nexport enum GraphicsProps {\n  BlendMode = 'blendMode',\n  Tint = 'tint'\n}\n\nexport type GraphicsPropsMap = Map<GraphicsProps, PropValue>;\n\nexport type PixiGraphicsProps = GenericType & GenericEventType & GraphicsPropsType;\n","export type AnimationContextType = {\n  fps: number;\n  averageFps: number;\n  maxFps: number;\n  minFps: number;\n  frameId: number;\n  elapsed: number;\n  history: number[];\n};\n\nexport type AnimationState = {\n  time: number;\n  frame: number;\n};\n\nexport enum AnimationActionType {\n  Progress,\n  Reset\n}\n\nexport type AnimationAction = {\n  type: AnimationActionType;\n  value?: number;\n};\n","import * as PIXI from 'pixi.js';\n\nexport type RenderingContextType = {\n  update: () => void;\n  width: number;\n  height: number;\n  stage: PIXI.Container;\n  renderId: number;\n  getTexture: <T extends PIXI.DisplayObject>(container: T, width: number, height: number) => PIXI.RenderTexture | undefined;\n};\n\nexport enum RenderingContextAction {\n  Update,\n  Render\n}\n\nexport type RenderingContextState = {\n  width: number;\n  height: number;\n  renderId: number;\n  update: boolean;\n};\n\nexport type RenderAction = {\n  type: RenderingContextAction;\n};\n","export type SpeedContextType = {\n  speed: number;\n  increase: () => void;\n  decrease: () => void;\n  setSpeed: (value: number) => void;\n  pause: () => void;\n  play: () => void;\n};\n\nexport enum SpeedContextAction {\n  Increase,\n  Decrease,\n  Pause,\n  Play,\n  Set\n}\n\nexport type SpeedAction = {\n  type: SpeedContextAction;\n  value?: number;\n};\n\nexport type SpeedState = {\n  speed: number;\n};\n","import { Area } from './GraphicsTypes';\n\nexport enum CursorType {\n  Auto = 'auto',\n  Default = 'default',\n  None = 'none',\n  ContextMenu = 'context-menu',\n  Help = 'help',\n  Pointer = 'pointer',\n  Progress = 'progress',\n  Wait = 'wait',\n  Cell = 'cell',\n  CrossHair = 'crosshair',\n  Text = 'text',\n  VerticalText = 'vertical-text',\n  Alias = 'alias',\n  Copy = 'copy',\n  Move = 'move',\n  NoDrop = 'no-drop',\n  NotAllowed = 'not-allowed',\n  Grab = 'grab',\n  Grabbing = 'grabbing',\n  AllScroll = 'all-scroll',\n  ColResize = 'col-resize',\n  RowResize = 'row-resize',\n  NorthResize = 'n-resize',\n  EastResize = 'e-resize',\n  SouthResize = 's-resize',\n  WestResize = 'w-resize',\n  NorthEastResize = 'ne-resize',\n  NorthWestResize = 'nw-resize',\n  SouthEastResize = 'se-resize',\n  SouthWestResize = 'sw-resize',\n  EastWestResize = 'ew-resize',\n  NorthSouthResize = 'ns-resize',\n  NorthEastSouthWestResize = 'nesw-resize',\n  NorthWestSouthEastResize = 'nwse-resize',\n  ZoomIn = 'zoom-in',\n  ZoomOut = 'zoom-out'\n}\n\nexport enum Overflow {\n  None,\n  Horizontal,\n  Vertical,\n  All\n}\n\nexport enum GenericProps {\n  Alpha = 'alpha',\n  Angle = 'angle', // Rotation in degrees\n  ButtonMode = 'buttonMode',\n  Cursor = 'cursor',\n  Interactive = 'interactive',\n  Name = 'name',\n  PivotX = 'pivotX',\n  PivotY = 'pivotY',\n  Rotation = 'rotation', // Rotation in radians\n  ScaleX = 'scaleX',\n  ScaleY = 'scaleY',\n  SkewX = 'skewX',\n  SkewY = 'skewY',\n  Visible = 'visible',\n  X = 'x',\n  Y = 'y',\n  ZIndex = 'zIndex',\n  Width = 'width',\n  Height = 'height',\n  SortableChildren = 'sortableChildren',\n  FilterArea = 'filterArea',\n  HitArea = 'hitArea'\n}\n\nexport type PropValue = boolean | string | number | Area | undefined;\nexport type GenericPropsMap = Map<GenericProps, PropValue>;\n\nexport type TransformType = {\n  x?: number;\n  y?: number;\n  pivotX?: number;\n  pivotY?: number;\n  scaleX?: number;\n  scaleY?: number;\n  rotation?: number; // Rotation in radians\n  skewX?: number;\n  skewY?: number;\n}\n\nexport type GenericType = TransformType & {\n  alpha?: number;\n  angle?: number; // Rotation in degrees\n  buttonMode?: boolean;\n  cursor?: CursorType;\n  interactive?: boolean;\n  name?: string;\n  visible?: boolean;\n  zIndex?: number;\n  width?: number;\n  height?: number;\n  sortableChildren?: boolean;\n  filterArea?: Area;\n  hitArea?: Area;\n};\n","import { GenericEventType } from './GenericEventTypes';\n\nexport type EventListener = (...args: any[]) => void;\n\nexport type EventsType = GenericEventType;\n\nexport enum Events {\n  Click = 'click',\n  MouseDown = 'mousedown',\n  MouseMove = 'mousemove',\n  MouseOut = 'mouseout',\n  MouseOver = 'mouseover',\n  MouseUp = 'mouseup',\n  MouseUpOutside = 'mouseupoutside',\n  PointerCancel = 'pointercancel',\n  PointerDown = 'pointerdown',\n  PointerMove = 'pointermove',\n  PointerOut = 'pointerout',\n  PointerOver = 'pointerover',\n  PointerTap = 'pointertap',\n  PointerUp = 'pointerup',\n  PointerUpOutside = 'pointerupoutside',\n  RemovedFrom = 'removedfrom',\n  RightClick = 'rightclick',\n  RightDown = 'rightdown',\n  RightUp = 'rightup',\n  RightUpOutside = 'rightupoutside',\n  Tap = 'tap',\n  TouchCancel = 'touchcancel',\n  TouchEnd = 'touchend',\n  TouchEndOutside = 'touchendoutside',\n  TouchMove = 'touchmove',\n  TouchStart = 'touchstart',\n  Added = 'added',\n  Removed = 'removed',\n  ChildAdded = 'childAdded'\n}\n","import * as PIXI from 'pixi.js';\n\nexport enum BlendModes {\n  Add,\n  AddNpm,\n  Color,\n  ColorBurn,\n  ColorDodge,\n  Darken,\n  Difference,\n  DstAtop,\n  DstIn,\n  DstOut,\n  DstOver,\n  Erase,\n  Exclusion,\n  HardLight,\n  Hue,\n  Lighten,\n  Luminosity,\n  Multiply,\n  None,\n  Normal,\n  NormalNpm,\n  Overlay,\n  Saturation,\n  Screen,\n  ScreenNpm,\n  SoftLight,\n  SrcAtop,\n  SrcIn,\n  SrcOut,\n  SrcOver,\n  Subtract,\n  Xor\n}\n\nexport const BlendModesMap = new Map<BlendModes, number>([\n  [BlendModes.Add, PIXI.BLEND_MODES.ADD],\n  [BlendModes.AddNpm, PIXI.BLEND_MODES.ADD_NPM],\n  [BlendModes.Color, PIXI.BLEND_MODES.COLOR],\n  [BlendModes.ColorBurn, PIXI.BLEND_MODES.COLOR_BURN],\n  [BlendModes.ColorDodge, PIXI.BLEND_MODES.COLOR_DODGE],\n  [BlendModes.Darken, PIXI.BLEND_MODES.DARKEN],\n  [BlendModes.Difference, PIXI.BLEND_MODES.DIFFERENCE],\n  [BlendModes.DstAtop, PIXI.BLEND_MODES.DST_ATOP],\n  [BlendModes.DstIn, PIXI.BLEND_MODES.DST_IN],\n  [BlendModes.DstOut, PIXI.BLEND_MODES.DST_OUT],\n  [BlendModes.DstOver, PIXI.BLEND_MODES.DST_OVER],\n  [BlendModes.Erase, PIXI.BLEND_MODES.ERASE],\n  [BlendModes.Exclusion, PIXI.BLEND_MODES.EXCLUSION],\n  [BlendModes.HardLight, PIXI.BLEND_MODES.HARD_LIGHT],\n  [BlendModes.Hue, PIXI.BLEND_MODES.HUE],\n  [BlendModes.Lighten, PIXI.BLEND_MODES.LIGHTEN],\n  [BlendModes.Luminosity, PIXI.BLEND_MODES.LUMINOSITY],\n  [BlendModes.Multiply, PIXI.BLEND_MODES.MULTIPLY],\n  [BlendModes.None, PIXI.BLEND_MODES.NONE],\n  [BlendModes.Normal, PIXI.BLEND_MODES.NORMAL],\n  [BlendModes.NormalNpm, PIXI.BLEND_MODES.NORMAL_NPM],\n  [BlendModes.Overlay, PIXI.BLEND_MODES.OVERLAY],\n  [BlendModes.Saturation, PIXI.BLEND_MODES.SATURATION],\n  [BlendModes.Screen, PIXI.BLEND_MODES.SCREEN],\n  [BlendModes.ScreenNpm, PIXI.BLEND_MODES.SCREEN_NPM],\n  [BlendModes.SoftLight, PIXI.BLEND_MODES.SOFT_LIGHT],\n  [BlendModes.SrcAtop, PIXI.BLEND_MODES.SRC_ATOP],\n  [BlendModes.SrcIn, PIXI.BLEND_MODES.SRC_IN],\n  [BlendModes.SrcOut, PIXI.BLEND_MODES.SRC_OUT],\n  [BlendModes.SrcOver, PIXI.BLEND_MODES.SRC_OVER],\n  [BlendModes.Subtract, PIXI.BLEND_MODES.SUBTRACT],\n  [BlendModes.Xor, PIXI.BLEND_MODES.XOR]\n]);\n","import * as PIXI from 'pixi.js';\n\nexport type ShapeTextureType = {\n  texture?: PIXI.Texture;\n  matrix?: PIXI.Matrix;\n  setTexture: (texture?: PIXI.Texture) => void;\n  setMatrix: (matrix?: PIXI.Matrix) => void;\n};\n\nexport type FillDefinition = FillStyleType & TextureStyleType;\nexport type LineDefinition = LineStyleType & TextureStyleType;\n\nexport type ShapeStyleType = {\n  fill?: FillDefinition;\n  line?: LineDefinition;\n  holes?: ShapeType[];\n  setFillStyle: (fill?: FillDefinition) => void;\n  setLineStyle: (line?: LineDefinition) => void;\n  setHoles: (holes?: ShapeType[]) => void;\n};\n\nexport enum LineJoin {\n  Miter = 'miter',\n  Round = 'round',\n  Bevel = 'bevel'\n}\n\nexport enum LineCap {\n  Butt = 'butt',\n  Round = 'round',\n  Square = 'square'\n}\n\nexport enum ShapeAction {\n  UpdateShape,\n  RemoveShape\n}\n\nexport type GraphicsState = {\n  shapes: string[];\n  shapeMap: Map<string, DrawShapeDefinition>;\n};\n\nexport type ShapeActionType = {\n  type: ShapeAction;\n  id: string;\n  definition?: DrawShapeDefinition;\n};\n\nexport enum Shapes {\n  Path,\n  Circle,\n  Ellipse,\n  Polygon,\n  Rect,\n  RoundedRect,\n  Star,\n  Arc,\n  ArcCurve,\n  BezierCurve,\n  QuadraticCurve\n}\n\nexport type ShapeGenericType = {\n  name?: string;\n};\n\nexport type ShapeType = ShapeGenericType & {\n  type: Shapes;\n  params: number[];\n  points?: PIXI.Point[];\n};\n\ntype TextureStyleType = {\n  texture?: PIXI.Texture;\n  matrix?: PIXI.Matrix;\n};\n\nexport type FillStyleType = {\n  alpha?: number;\n  color?: number;\n};\n\nexport type LineStyleType = FillStyleType & {\n  alignment?: number;\n  cap?: LineCap;\n  join?: LineJoin;\n  miterLimit?: number;\n  native?: boolean;\n  width?: number;\n};\n\nexport type DrawShapeDefinition = ShapeType & {\n  id: string;\n  fill?: FillDefinition;\n  line?: LineDefinition;\n  holes?: ShapeType[];\n};\n\nexport type GraphicsContextType = {\n  drawShape: (definition: DrawShapeDefinition) => void;\n  removeShape: (id: string) => void;\n};\n\nexport type Coords = {\n  x: number;\n  y: number;\n};\n\nexport type Area = Coords & {\n  width: number;\n  height: number;\n};\n\nexport type RectangleType = ShapeGenericType &\n  Area & {\n    borderRadius?: number;\n  };\n\nexport type CircleType = ShapeGenericType &\n  Coords & {\n    radius: number;\n  };\n\nexport type QuadraticCurveType = ShapeGenericType & {\n  xFrom?: number;\n  yFrom?: number;\n  xTo: number;\n  yTo: number;\n  controlX: number;\n  controlY: number;\n};\n\nexport type ArcCurveType = QuadraticCurveType & {\n  radius: number\n};\n\nexport type BezierCurveType = QuadraticCurveType & {\n  controlX2: number;\n  controlY2: number;\n};\n\nexport type ArcType = ShapeGenericType &\n  CircleType &\n  Coords & {\n    startAngle: number;\n    endAngle: number;\n    anticlockwise?: boolean;\n  };\n\nexport type EllipseType = ShapeGenericType & Area;\n\nexport type RegularPolygonType = CircleType & {\n  sides?: number;\n  rotation?: number;\n};\n\nexport type StarType = CircleType & {\n  points?: number;\n  innerRadius?: number;\n  rotation?: number;\n};\n\nexport type PointProps = Coords & {\n  id?: string;\n};\n\nexport type PointsContextType = {\n  points: PIXI.Point[];\n  addPoint: (id: string, point: Coords) => void;\n  removePoint: (id: string) => void;\n};\n\nexport type PointsState = {\n  points: string[];\n  pointMap: Map<string, Coords>;\n};\n\nexport enum PointAction {\n  Add,\n  Remove\n}\n\nexport type PointActionType = {\n  type: PointAction;\n  id: string;\n  point?: Coords;\n};\n","import { LineJoin } from './GraphicsTypes';\n\nexport enum TextAlign {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right'\n}\n\nexport enum TextGradient {\n  LinearVertical,\n  LinearHorizontal\n}\n\nexport enum TextBaseline {\n  Alphabetic = 'alphabetic',\n  Top = 'top',\n  Hanging = 'hanging',\n  Middle = 'middle',\n  Ideographic = 'ideographic',\n  Bottom = 'bottom'\n}\n\nexport enum TextWhiteLine {\n  Normal = 'normal',\n  Pre = 'pre',\n  PreLine = 'pre-line'\n}\n\nexport enum FontStyle {\n  Normal = 'normal',\n  Italic = 'italic',\n  Oblique = 'oblique'\n}\n\nexport enum FontVariant {\n  Normal = 'normal',\n  SmallCaps = 'small-caps'\n}\n\nexport enum FontWeight {\n  Normal = 'Normal',\n  Bold = 'Bold',\n  Bolder = 'Bolder',\n  Lighter = 'Lighter',\n  W100 = '100',\n  W200 = '200',\n  W300 = '300',\n  W400 = '400',\n  W500 = '500',\n  W600 = '600',\n  W700 = '700',\n  W800 = '800',\n  W900 = '900'\n}\n\nexport type TextStyle = {\n  align?: TextAlign;\n  breakWords?: boolean;\n  dropShadow?: boolean;\n  dropShadowAlpha?: number;\n  dropShadowAngle?: number;\n  dropShadowBlur?: number;\n  dropShadowColor?: string;\n  dropShadowDistance?: number;\n  fill?: string;\n  fillGradientType?: TextGradient;\n  fillGradientStops?: string[];\n  fontFamily?: string;\n  fontSize?: number;\n  fontStyle?: FontStyle;\n  fontVariant?: FontVariant;\n  fontWeight?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  lineJoin?: LineJoin;\n  miterLimit?: number;\n  padding?: number;\n  stroke?: string;\n  strokeThickness?: number;\n  textBaseline?: TextBaseline;\n  trim?: boolean;\n  whiteSpace?: TextWhiteLine;\n  wordWrap?: boolean;\n  wordWrapWidth?: number;\n  leading?: number;\n};\n\nexport const defaultTextStyle: TextStyle = {\n  align: TextAlign.Left,\n  breakWords: false,\n  dropShadow: false,\n  dropShadowAlpha: 1,\n  dropShadowAngle: Math.PI / 6,\n  dropShadowBlur: 0,\n  dropShadowColor: 'black',\n  dropShadowDistance: 5,\n  fill: 'black',\n  fillGradientType: TextGradient.LinearHorizontal,\n  fillGradientStops: [],\n  fontFamily: 'Arial',\n  fontSize: 26,\n  fontStyle: FontStyle.Normal,\n  fontVariant: FontVariant.Normal,\n  fontWeight: FontWeight.Normal,\n  letterSpacing: 0,\n  lineHeight: 0,\n  lineJoin: LineJoin.Miter,\n  miterLimit: 10,\n  padding: 0,\n  stroke: 'black',\n  strokeThickness: 0,\n  textBaseline: TextBaseline.Alphabetic,\n  trim: false,\n  whiteSpace: TextWhiteLine.Pre,\n  wordWrap: false,\n  wordWrapWidth: 100,\n  leading: 0\n};\n","export enum EffectType {\n  BlackAndWhite,\n  Brightness,\n  Browni,\n  ColorTone,\n  Contrast,\n  Desaturate,\n  GreyScale,\n  Hue,\n  Kodachrome,\n  Lsd,\n  Negative,\n  Night,\n  Polaroid,\n  Predator,\n  Saturate,\n  Sepia,\n  Technicolor,\n  ToBGR,\n  Vintage\n}\n\nexport enum EffectActionType {\n  UpdateEffect,\n  RemoveEffect\n}\n\nexport type EffectValue = {\n  id: string;\n  multiply?: boolean;\n  effect?: EffectType;\n  params?: number[];\n  enabled?: boolean;\n};\n\nexport type EffectAction = {\n  type: EffectActionType;\n  value: EffectValue;\n};\n\nexport type EffectState = {\n  effects: string[];\n  effectMap: Map<string, EffectValue>;\n};\n\nexport type EffectContextType = {\n  updateEffect: (value: EffectValue) => void;\n  removeEffect: (id: string) => void;\n};\n","import * as PIXI from 'pixi.js';\nimport { useCallback, useContext, useEffect, useReducer, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { AnimationContext, ParentContext, RenderingContext, ShapeTextureContext, TextureContext } from '../contexts';\nimport { isAnimatedSprite, isSprite } from '../props';\nimport { AnimationAction, AnimationActionType, AnimationState } from '../types';\n\nexport const useId = (id?: string) => {\n  const [state, setState] = useState(v4());\n\n  useEffect(() => {\n    setState(id ? id : v4());\n  }, [id]);\n\n  return state;\n};\n\nexport const useElement = <T extends PIXI.Container>(item: T) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const [element] = useState(item);\n\n  useEffect(() => {\n    return () => {\n      element.destroy();\n    };\n  }, [element]);\n\n  useEffect(() => {\n    element.setParent(parent);\n    update();\n  }, [element, parent, update]);\n\n  return element;\n};\n\nexport const useRelativePosition = <T extends PIXI.Sprite>(item?: T) => {\n  const [left, setLeft] = useState(0);\n  const [top, setTop] = useState(0);\n  const [anchor, setAnchor] = useState(new PIXI.Point(0, 0));\n\n  useEffect(() => {\n    if (item && item.anchor) {\n      setAnchor(item.anchor);\n    } else {\n      setAnchor(new PIXI.Point(0, 0));\n    }\n  }, [item]);\n\n  useEffect(() => {\n    setLeft(-anchor.x);\n    setTop(-anchor.y);\n  }, [anchor.x, anchor.y]);\n\n  return [left, top];\n};\n\nexport const useFilter = <T extends PIXI.Filter>(item: T) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const [element] = useState(item);\n\n  useEffect(() => {\n    if (parent && !parent.filters) {\n      parent.filters = [];\n    }\n    if (parent && parent.filters.indexOf(element) < 0) {\n      parent.filters.push(element);\n      update();\n    }\n    return () => {\n      const index = parent.filters.indexOf(element);\n      if (index >= 0) {\n        parent.filters.splice(index, 1);\n        update();\n      }\n    };\n  }, [element, parent, update]);\n\n  return element;\n};\n\nexport const useLoadedTexture = (textureName?: string) => {\n  const context = useContext(TextureContext);\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>(\n    typeof textureName === 'string' && context[textureName] instanceof PIXI.Texture ? (context[textureName] as PIXI.Texture) : undefined\n  );\n\n  useEffect(() => {\n    if (typeof textureName === 'string' && context[textureName] instanceof PIXI.Texture) {\n      const loadedTexture = context[textureName] as PIXI.Texture;\n\n      if (loadedTexture && loadedTexture !== texture) {\n        setTexture(loadedTexture);\n      }\n    }\n  }, [texture, context, textureName]);\n\n  return texture;\n};\n\nexport const useTexture = <T extends PIXI.Sprite>(sprite: T, textureName?: string) => {\n  const { update } = useContext(RenderingContext);\n  const texture = useLoadedTexture(textureName);\n\n  useEffect(() => {\n    if (texture) {\n      const currentScale = sprite.scale.clone();\n      sprite.texture = texture;\n      sprite.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [texture, sprite, update]);\n};\n\nexport const useFrames = <T extends PIXI.AnimatedSprite>(sprite: T, frames?: string[] | string): number => {\n  const context = useContext(TextureContext);\n  const { update } = useContext(RenderingContext);\n  const [textures, setTextures] = useState<PIXI.Texture[]>([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    if (frames) {\n      const textureList: PIXI.Texture[] = [];\n      let frameList: string[] = [];\n\n      if (Array.isArray(frames)) {\n        frameList = frames;\n      } else if (Array.isArray(context[frames])) {\n        frameList = context[frames] as string[];\n      }\n      frameList.forEach((frameName) => {\n        const loadedTexture = context[frameName];\n\n        if (loadedTexture instanceof PIXI.Texture) {\n          textureList.push(loadedTexture);\n        }\n      });\n\n      setTextures(textureList);\n    }\n  }, [context, frames]);\n\n  useEffect(() => {\n    if (textures && textures.length > 0) {\n      const currentScale = sprite.scale.clone();\n      sprite.textures = textures;\n      sprite.texture = textures[0];\n      sprite.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [textures, sprite, update]);\n\n  useEffect(() => {\n    setCount(sprite.textures.length);\n  }, [sprite.textures]);\n\n  return count;\n};\n\nexport const useTextureUpdate = (texture?: PIXI.Texture) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const { setTexture } = useContext(ShapeTextureContext);\n\n  useEffect(() => {\n    if (texture) {\n      if (isSprite(parent)) {\n        const currentScale = parent.scale.clone();\n        if (isAnimatedSprite(parent)) {\n          const emptyIndex = parent.textures.indexOf(PIXI.Texture.EMPTY);\n          if (emptyIndex >= 0) {\n            parent.textures = [texture];\n          } else {\n            parent.textures = [...parent.textures, texture];\n          }\n        }\n        parent.texture = texture;\n        parent.scale.copyFrom(currentScale);\n        update();\n      } else {\n        setTexture(texture);\n      }\n    }\n  }, [parent, texture, update, setTexture]);\n};\n\nexport const useFrameAnimation = (initialFrame: number, frameCount: number, fps: number, playing: boolean): number => {\n  const { frameId, elapsed } = useContext(AnimationContext);\n\n  const reducer = useCallback(\n    (state: AnimationState, action: AnimationAction): AnimationState => {\n      let time, frame;\n      const initialTime = initialFrame * (1000 / fps);\n      const duration = (1000 / fps) * frameCount;\n      if (isNaN(state.time) || isNaN(state.frame)) {\n        action.type = AnimationActionType.Reset;\n      }\n      switch (action.type) {\n        case AnimationActionType.Progress:\n          time = (state.time + (action.value || 0)) % duration;\n          frame = Math.floor((time / 1000) * fps) % frameCount;\n          return { time, frame };\n        case AnimationActionType.Reset:\n          if (state.time !== initialTime) {\n            return {\n              frame: initialFrame,\n              time: initialTime\n            };\n          } else {\n            return state;\n          }\n        default:\n          return state;\n      }\n    },\n    [initialFrame, fps, frameCount]\n  );\n\n  const [{ frame }, dispatch] = useReducer(reducer, { time: initialFrame * (1000 / fps), frame: initialFrame });\n\n  useEffect(() => {\n    if (playing) {\n      dispatch({ type: AnimationActionType.Progress, value: elapsed });\n    } else {\n      dispatch({ type: AnimationActionType.Reset });\n    }\n  }, [frameId, elapsed, playing, dispatch]);\n\n  return frame;\n};\n","export type PointerContextType = {\n  x: number;\n  y: number;\n  over: boolean;\n};\n\nexport enum PointerContextActionType {\n  UpdatePosition,\n  StartOver,\n  EndOver\n}\nexport type PointerContextAction = {\n  type: PointerContextActionType;\n  x?: number;\n  y?: number;\n};\n","import * as PIXI from 'pixi.js';\nimport { useContext, useEffect, useState } from 'react';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport {\n  AllFilterProps,\n  FilterProps,\n  FilterPropsMap,\n  GraphicsProps,\n  GraphicsPropsMap,\n  GraphicsPropsType,\n  SpriteProps,\n  SpritePropsMap,\n  SpritePropsType,\n  TilingSpriteProps,\n  TilingSpritePropsMap,\n  TilingSpritePropsType\n} from '../props';\nimport {\n  BlendModes,\n  BlendModesMap,\n  Events,\n  GenericEventType,\n  GenericProps,\n  GenericPropsMap,\n  GenericType,\n  PropValue,\n  Area\n} from '../types';\n\nconst propsToMap = <S extends { [K in T]?: PropValue }, T extends keyof S>(props: S) => {\n  const map = new Map<T, PropValue>();\n\n  Object.keys(props).forEach((key: string) => {\n    const prop = key as T;\n    map.set(prop, props[prop] as PropValue);\n  });\n\n  return map;\n};\n\nconst getMapUpdate = <S extends { [K in T]?: PropValue }, T extends keyof S>(state: Map<T, PropValue>, props: S) => {\n  const propMap = propsToMap(props);\n  const updatedMap = new Map<T, PropValue>();\n\n  state.forEach((value, key) => {\n    const newValue = propMap.get(key) as PropValue;\n    if (value !== newValue) {\n      state.set(key, newValue);\n      updatedMap.set(key as T, newValue);\n    }\n  });\n\n  return updatedMap;\n};\n\nconst updateGenericProps = <T extends PIXI.Container>(item: T, updatedProperties?: GenericPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    let rectangle;\n    switch (key) {\n      case GenericProps.Alpha:\n        item.alpha = value as number;\n        break;\n      case GenericProps.Angle:\n        item.angle = value as number;\n        break;\n      case GenericProps.ButtonMode:\n        item.buttonMode = value as boolean;\n        break;\n      case GenericProps.Cursor:\n        item.cursor = value as string;\n        break;\n      case GenericProps.Height:\n        item.height = (value as number) || item.height;\n        break;\n      case GenericProps.Interactive:\n        item.interactive = value as boolean;\n        break;\n      case GenericProps.Name:\n        item.name = value as string;\n        break;\n      case GenericProps.PivotX:\n        item.pivot.x = value as number;\n        break;\n      case GenericProps.PivotY:\n        item.pivot.y = value as number;\n        break;\n      case GenericProps.Rotation:\n        item.rotation = value as number;\n        break;\n      case GenericProps.ScaleX:\n        item.scale.x = value as number;\n        break;\n      case GenericProps.ScaleY:\n        item.scale.y = value as number;\n        break;\n      case GenericProps.SkewX:\n        item.skew.x = value as number;\n        break;\n      case GenericProps.SkewY:\n        item.skew.y = value as number;\n        break;\n      case GenericProps.SortableChildren:\n        item.sortableChildren = value as boolean;\n        break;\n      case GenericProps.Visible:\n        item.visible = value as boolean;\n        break;\n      case GenericProps.Width:\n        item.width = (value as number) || item.width;\n        break;\n      case GenericProps.X:\n        item.x = value as number;\n        break;\n      case GenericProps.Y:\n        item.y = value as number;\n        break;\n      case GenericProps.ZIndex:\n        item.zIndex = value as number;\n        break;\n      case GenericProps.FilterArea:\n        if (value) {\n          rectangle = value as Area;\n          item.filterArea = new PIXI.Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          item.filterArea = null;\n        }\n        break;\n      case GenericProps.HitArea:\n        if (value) {\n          rectangle = value as Area;\n          item.hitArea = new PIXI.Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          item.hitArea = null;\n        }\n        break;\n    }\n  });\n};\n\nconst updateSpriteProps = <T extends PIXI.Sprite>(item: T, updatedProperties?: SpritePropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case SpriteProps.AnchorX:\n        if (value) {\n          item.anchor.x = value as number;\n        }\n        break;\n      case SpriteProps.AnchorY:\n        if (value) {\n          item.anchor.y = value as number;\n        }\n        break;\n      case SpriteProps.RoundPixels:\n        item.roundPixels = value as boolean;\n        break;\n    }\n  });\n};\n\nconst updateGraphicsProps = <T extends PIXI.Sprite | PIXI.Graphics>(item: T, updatedProperties?: GraphicsPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case GraphicsProps.BlendMode:\n        item.blendMode = BlendModesMap.get(value as BlendModes) || 0;\n        break;\n      case GraphicsProps.Tint:\n        item.tint = value as number;\n        break;\n    }\n  });\n};\n\nconst updateTilingSpriteProps = <T extends PIXI.TilingSprite>(item: T, updatedProperties?: TilingSpritePropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case TilingSpriteProps.ClampMargin:\n        item.clampMargin = value as number;\n        break;\n      case TilingSpriteProps.TileScaleX:\n        item.tileScale.x = value as number;\n        break;\n      case TilingSpriteProps.TileScaleY:\n        item.tileScale.y = value as number;\n        break;\n      case TilingSpriteProps.TileX:\n        item.tilePosition.x = (value as number) % item.texture.width;\n        break;\n      case TilingSpriteProps.TileY:\n        item.tilePosition.y = (value as number) % item.texture.height;\n        break;\n      case TilingSpriteProps.UvRespectAnchor:\n        item.uvRespectAnchor = value as boolean;\n        break;\n    }\n  });\n};\n\nconst updateFilterProps = <T extends PIXI.Filter>(item: T, updatedProperties?: FilterPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case FilterProps.AutoFit:\n        item.autoFit = value as boolean;\n        break;\n      case FilterProps.BlendMode:\n        item.blendMode = BlendModesMap.get(value as BlendModes) || 0;\n        break;\n      case FilterProps.Enabled:\n        item.enabled = value as boolean;\n        break;\n      case FilterProps.Padding:\n        item.padding = value as number;\n        break;\n      case FilterProps.Resolution:\n        item.resolution = value as number;\n        break;\n      case FilterProps.Alpha:\n        ((item as unknown) as PIXI.filters.AlphaFilter).alpha = value as number;\n        break;\n      case FilterProps.Blur:\n        ((item as unknown) as PIXI.filters.BlurFilter).blur = value as number;\n        break;\n      case FilterProps.BlurX:\n        ((item as unknown) as PIXI.filters.BlurFilter).blurX = value as number;\n        break;\n      case FilterProps.BlurY:\n        ((item as unknown) as PIXI.filters.BlurFilter).blurY = value as number;\n        break;\n      case FilterProps.Quality:\n        ((item as unknown) as PIXI.filters.BlurFilter).quality = value as number;\n        break;\n      case FilterProps.RepeatEdgePixels:\n        ((item as unknown) as PIXI.filters.BlurFilter).repeatEdgePixels = value as boolean;\n        break;\n      case FilterProps.Noise:\n        ((item as unknown) as PIXI.filters.NoiseFilter).noise = value as number;\n        break;\n      case FilterProps.Seed:\n        ((item as unknown) as PIXI.filters.NoiseFilter).seed = value as number;\n        break;\n    }\n  });\n};\n\nconst useUpdatedProps = <S extends { [K in T]?: PropValue }, T extends keyof S>(props: S) => {\n  const [state, setState] = useState<Map<T, PropValue>>(propsToMap(props));\n  const [updatedProperties, setUpdatedProperties] = useState(state);\n\n  useEffect(() => {\n    const updatedMap = getMapUpdate(state, props);\n\n    if (updatedMap.size > 0) {\n      setUpdatedProperties(updatedMap);\n      setState(propsToMap(props));\n    }\n  }, [props, state]);\n\n  return updatedProperties;\n};\n\nexport const useGenericProps = <T extends PIXI.Container>(item: T, props: GenericType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateGenericProps(item, updatedProperties as GenericPropsMap);\n    update();\n  }, [updatedProperties, update, item]);\n};\n\nexport const useSpriteProps = <T extends PIXI.Sprite>(sprite: T, props: SpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateSpriteProps(sprite, updatedProperties as SpritePropsMap);\n    update();\n  }, [updatedProperties, update, sprite]);\n};\n\nexport const useGraphicsProps = <T extends PIXI.Sprite | PIXI.Graphics>(graphics: T, props: GraphicsPropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateGraphicsProps(graphics, updatedProperties as GraphicsPropsMap);\n    update();\n  }, [updatedProperties, update, graphics]);\n};\n\nexport const useTransformMatrix = (\n  x = 0,\n  y = 0,\n  pivotX = 0,\n  pivotY = 0,\n  scaleX = 1,\n  scaleY = 1,\n  rotation = 0, // Rotation in radians\n  skewX = 0,\n  skewY = 0\n) => {\n  const [matrix, setMatrix] = useState(new PIXI.Matrix());\n\n  useEffect(() => {\n    const newMatrix = new PIXI.Matrix();\n\n    newMatrix.setTransform(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY);\n\n    setMatrix(newMatrix);\n  }, [x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY]);\n\n  return matrix;\n};\n\nexport const useAlignedPosition = <T extends PIXI.Sprite>(sprite: T, props: GenericType & SpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const { width: parentWidth, height: parentHeight } = useContext(ParentContext);\n  const { x = 0, y = 0, alignX, alignY } = props;\n\n  useEffect(() => {\n    if (alignX) {\n      sprite.x = parentWidth * alignX + x;\n      sprite.anchor.x = alignX;\n    } else {\n      sprite.x = x;\n    }\n    update();\n  }, [update, sprite, parentWidth, x, alignX]);\n\n  useEffect(() => {\n    if (alignY) {\n      sprite.y = parentHeight * alignY + y;\n      sprite.anchor.y = alignY;\n    } else {\n      sprite.y = y;\n    }\n    update();\n  }, [update, sprite, parentHeight, y, alignY]);\n};\n\nexport const useTilingSpriteProps = <T extends PIXI.TilingSprite>(sprite: T, props: TilingSpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateTilingSpriteProps(sprite, updatedProperties as TilingSpritePropsMap);\n    update();\n  }, [updatedProperties, update, sprite]);\n};\n\nexport const useFilterProps = <T extends PIXI.Filter>(filter: T, props: AllFilterProps) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateFilterProps(filter, updatedProperties as FilterPropsMap);\n    update();\n  }, [updatedProperties, update, filter]);\n};\n\nexport const useEvent = <T extends PIXI.Container>(item: T, event: Events, callback?: EventListener) => {\n  useEffect(() => {\n    if (callback) {\n      item?.addListener(event, callback);\n    } else {\n      item?.removeListener(event);\n    }\n    return () => {\n      item?.removeListener(event);\n    };\n  }, [callback, item, event]);\n};\n\nexport const useDisplayObjectEvents = <T extends PIXI.Container>(item: T, callbacks: GenericEventType) => {\n  const {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  } = callbacks;\n\n  useEffect(() => {\n    return () => {\n      item.removeAllListeners();\n    };\n  }, [item]);\n\n  useEvent(item, Events.Click, onClick);\n  useEvent(item, Events.MouseDown, onMouseDown);\n  useEvent(item, Events.MouseMove, onMouseMove);\n  useEvent(item, Events.MouseOut, onMouseOut);\n  useEvent(item, Events.MouseOver, onMouseOver);\n  useEvent(item, Events.MouseUp, onMouseUp);\n  useEvent(item, Events.MouseUpOutside, onMouseUpOutside);\n  useEvent(item, Events.PointerCancel, onPointerCancel);\n  useEvent(item, Events.PointerDown, onPointerDown);\n  useEvent(item, Events.PointerMove, onPointerMove);\n  useEvent(item, Events.PointerOut, onPointerOut);\n  useEvent(item, Events.PointerOver, onPointerOver);\n  useEvent(item, Events.PointerTap, onPointerTap);\n  useEvent(item, Events.PointerUp, onPointerUp);\n  useEvent(item, Events.PointerUpOutside, onPointerUpOutside);\n  useEvent(item, Events.RemovedFrom, onRemovedFrom);\n  useEvent(item, Events.RightClick, onRightClick);\n  useEvent(item, Events.RightDown, onRightDown);\n  useEvent(item, Events.RightUp, onRightUp);\n  useEvent(item, Events.RightUpOutside, onRightUpOutside);\n  useEvent(item, Events.Tap, onTap);\n  useEvent(item, Events.TouchCancel, onTouchCancel);\n  useEvent(item, Events.TouchEnd, onTouchEnd);\n  useEvent(item, Events.TouchEndOutside, onTouchEndOutside);\n  useEvent(item, Events.TouchMove, onTouchMove);\n  useEvent(item, Events.TouchStart, onTouchStart);\n  useEvent(item, Events.Added, onAdded);\n  useEvent(item, Events.Removed, onRemoved);\n  useEvent(item, Events.ChildAdded, onChildAdded);\n};\n","import { SyntheticEvent, useCallback, useContext, useEffect, useMemo, useReducer, useState } from 'react';\nimport {\n  SpeedAction,\n  SpeedContextType,\n  SpeedState,\n  SpeedContextAction,\n  RenderingContextType,\n  AnimationContextType,\n  ParentContextType,\n  RenderingContextAction,\n  RenderingContextState,\n  RenderAction,\n  LoadResourceType,\n  TextureContextType,\n  ShapeTextureType,\n  ShapeStyleType,\n  LineDefinition,\n  FillDefinition,\n  PointsState,\n  PointActionType,\n  PointAction,\n  Coords,\n  PointsContextType, ShapeType\n} from '../types';\nimport { initialSpeedState, ParentContext, AnimationContext } from '../contexts';\nimport * as PIXI from 'pixi.js';\nimport { PointerContextAction, PointerContextActionType, PointerContextType } from '../types/PointerContextType';\nimport { useRelativePosition } from './genericHooks';\n\nconst MAX_HISTORY_SIZE = 120;\n\nexport const useSpeedContext = (): SpeedContextType => {\n  const reducer = useCallback((state: SpeedState, action: SpeedAction): SpeedState => {\n    switch (action.type) {\n      case SpeedContextAction.Increase:\n        return { speed: state.speed > 0 ? state.speed * 2 : 1 };\n      case SpeedContextAction.Decrease:\n        return { speed: state.speed / 2 };\n      case SpeedContextAction.Pause:\n        return { speed: 0 };\n      case SpeedContextAction.Play:\n        return { speed: 1 };\n      case SpeedContextAction.Set:\n        return { speed: action.value && action.value > 0 ? action.value : state.speed };\n      default:\n        return state;\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, initialSpeedState);\n\n  const increase = useCallback(() => dispatch({ type: SpeedContextAction.Increase }), [dispatch]);\n  const decrease = useCallback(() => dispatch({ type: SpeedContextAction.Decrease }), [dispatch]);\n  const play = useCallback(() => dispatch({ type: SpeedContextAction.Play }), [dispatch]);\n  const pause = useCallback(() => dispatch({ type: SpeedContextAction.Pause }), [dispatch]);\n  const setSpeed = useCallback((value: number) => dispatch({ type: SpeedContextAction.Set, value }), [dispatch]);\n\n  return { ...state, increase, decrease, play, pause, setSpeed };\n};\n\nexport const useAnimationContext = (speed: number): AnimationContextType => {\n  const initialState = useContext(AnimationContext);\n  const reducer = useCallback(\n    (state: AnimationContextType) => {\n      const { frameId, history } = state;\n\n      if (speed > 0) {\n        const latestFps = Math.round(PIXI.Ticker.shared.FPS);\n        const fpsHistory = [latestFps, ...history.slice(0, MAX_HISTORY_SIZE - 1)];\n\n        return {\n          frameId: frameId + 1,\n          elapsed: PIXI.Ticker.shared.deltaMS * speed,\n          fps: latestFps,\n          history: fpsHistory,\n          averageFps: Math.round(fpsHistory.reduce((a, b) => a + b, 0) / fpsHistory.length),\n          minFps: Math.min(...fpsHistory),\n          maxFps: Math.max(...fpsHistory)\n        };\n      } else {\n        return state;\n      }\n    },\n    [speed]\n  );\n  const [context, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    PIXI.Ticker.shared.add(dispatch);\n\n    return () => {\n      PIXI.Ticker.shared.remove(dispatch);\n    };\n  }, [dispatch]);\n\n  return context;\n};\n\nexport const useRenderingContext = (canvasReference: string, frameId: number, background?: number): RenderingContextType => {\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | undefined>(undefined);\n  const [stage] = useState<PIXI.Container>(new PIXI.Container());\n  const [renderer, setRenderer] = useState<PIXI.Renderer | undefined>();\n\n  const reducer = useCallback(\n    (state: RenderingContextState, action: RenderAction): RenderingContextState => {\n      let renderId, width, height, update;\n      switch (action.type) {\n        case RenderingContextAction.Update:\n          return { ...state, update: true };\n        case RenderingContextAction.Render:\n        default:\n          if (canvas && renderer) {\n            update = state.update;\n            width = state.width;\n            height = state.height;\n            renderId = state.renderId;\n            if (width !== canvas.width || height !== canvas.height) {\n              width = canvas.width;\n              height = canvas.height;\n\n              renderer.resize(width, height);\n\n              update = true;\n            }\n\n            if (stage && update) {\n              renderer.render(stage);\n\n              update = false;\n              renderId++;\n            }\n            return { update, width, height, renderId };\n          }\n          return state;\n      }\n    },\n    [renderer, canvas, stage]\n  );\n\n  const [state, dispatch] = useReducer(reducer, { height: 0, width: 0, renderId: 0, update: true });\n\n  const update = useCallback(() => dispatch({ type: RenderingContextAction.Update }), []);\n\n  const render = useCallback(() => dispatch({ type: RenderingContextAction.Render }), []);\n\n  const getTexture = useCallback(\n    <T extends PIXI.DisplayObject>(container: T, width: number, height: number): PIXI.RenderTexture | undefined => {\n      if (renderer) {\n        return renderer.generateTexture(container, PIXI.SCALE_MODES.LINEAR, 1, new PIXI.Rectangle(0, 0, width, height));\n      }\n      return undefined;\n    },\n    [renderer]\n  );\n\n  useEffect(() => {\n    const reference = document.getElementById(canvasReference) as HTMLCanvasElement;\n\n    if (!reference && renderer) {\n      // Force release of WebGL context\n      renderer.gl.getExtension('WEBGL_lose_context')?.loseContext();\n      renderer.destroy();\n      setRenderer(undefined);\n    } else if (reference && !renderer) {\n      const newRenderer = new PIXI.Renderer({\n        view: reference,\n        transparent: true,\n        width: reference.width,\n        height: reference.height,\n        antialias: true\n      });\n      setCanvas(reference);\n      setRenderer(newRenderer);\n    }\n  }, [canvasReference, renderer, frameId]);\n\n  useEffect(() => {\n    render();\n  }, [frameId, render]);\n\n  useEffect(() => {\n    if (renderer) {\n      renderer.transparent = !!background;\n      if (background) {\n        renderer.backgroundColor = background;\n      }\n    }\n  }, [renderer, background])\n\n  return {\n    update,\n    stage,\n    width: state.width,\n    height: state.height,\n    renderId: state.renderId,\n    getTexture\n  };\n};\n\nexport const useParentContext = <T extends PIXI.Container>(parent: T): ParentContextType<T> => {\n  const parentContext = useContext(ParentContext);\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [width, setWidth] = useState(parentContext.width);\n  const [height, setHeight] = useState(parentContext.height);\n  const [left, top] = useRelativePosition((parent as unknown) as PIXI.Sprite | undefined);\n  const [transform, setTransform] = useState<number[] | undefined>();\n\n  useEffect(() => {\n    if (parent) {\n      if (parent.width) {\n        setWidth(parent.width);\n      } else {\n        setWidth(parentContext.width);\n      }\n      if (parent.height) {\n        setHeight(parent.height);\n      } else {\n        setHeight(parentContext.height);\n      }\n    }\n  }, [parent, parent.width, parent.height, parentContext.width, parentContext.height]);\n\n  useEffect(() => {\n    setX(parent.worldTransform.tx);\n    setY(parent.worldTransform.ty);\n    setTransform([\n      parent.worldTransform.a,\n      parent.worldTransform.b,\n      parent.worldTransform.c,\n      parent.worldTransform.d,\n      parent.worldTransform.tx,\n      parent.worldTransform.ty\n    ]);\n  }, [\n    parent.worldTransform.a,\n    parent.worldTransform.b,\n    parent.worldTransform.c,\n    parent.worldTransform.d,\n    parent.worldTransform.tx,\n    parent.worldTransform.ty\n  ]);\n\n  return {\n    parent,\n    x,\n    y,\n    width,\n    height,\n    transform,\n    left: left * width,\n    top: top * height\n  };\n};\n\nconst cleanName = (name: string) => name.replace(/(?:(\\.\\w+?$)|(_image$))/, '');\n\nconst textureLoaded = new Map<string, string>();\n\nlet loadedResources: TextureContextType = {};\n\nexport const useTextureContext = (resources: LoadResourceType) => {\n  const [loader] = useState(new PIXI.Loader());\n  const reducer = useCallback((state: TextureContextType, action: TextureContextType): TextureContextType => {\n    loadedResources = { ...loadedResources, ...state, ...action };\n    return loadedResources;\n  }, []);\n  const [context, dispatch] = useReducer(reducer, loadedResources);\n\n  const callback = useCallback(\n    (loader: PIXI.Loader, resource: PIXI.LoaderResource) => {\n      const resources: TextureContextType = {};\n      const cleanedName = cleanName(resource.name);\n\n      if (resource.texture && !loadedResources[cleanedName]) {\n        resources[cleanedName] = resource.texture;\n      } else if (resource.textures) {\n        const frames: string[] = [];\n        Object.keys(resource.textures).forEach((name) => {\n          const texture = resource.textures ? resource.textures[name] : undefined;\n          if (texture) {\n            const resourceName = cleanName(name);\n            resources[resourceName] = texture;\n            frames.push(resourceName);\n          }\n        });\n        resources[cleanedName] = frames;\n      }\n\n      dispatch(resources);\n\n      return loader;\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    loader.onLoad.add(callback);\n    return () => {\n      loader.onLoad.detach(callback);\n    };\n  }, [loader, callback]);\n\n  useEffect(() => {\n    let count = 0;\n    Object.keys(resources).forEach((key) => {\n      const existingResource = textureLoaded.get(key);\n      if (!existingResource) {\n        loader.add(key, resources[key]);\n        textureLoaded.set(key, resources[key]);\n        count++;\n      } else if (existingResource !== resources[key]) {\n        console.warn(\n          `Attempt of overriding existing resource ${key} from ${existingResource}\n          to ${resources[key]}. Please use a unique name for your resource.`\n        );\n      }\n    });\n    if (count) {\n      loader.load();\n    }\n  }, [resources, loader]);\n\n  return context;\n};\n\nconst isTouchEvent = (event: Event): event is TouchEvent => {\n  return !!(event as TouchEvent)?.touches;\n};\nconst isMouseEvent = (event: Event): event is MouseEvent => {\n  return !isTouchEvent(event);\n};\n\nexport const usePointerContext = (\n  retina: boolean,\n  width: number,\n  height: number,\n  onInteractionStart?: (point: Coords) => void,\n  onInteractionEnd?: (point: Coords) => void,\n  onInteractionMove?: (point: Coords) => void\n) => {\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n  const reducer = useCallback(\n    (state: PointerContextType, action: PointerContextAction): PointerContextType => {\n      switch (action.type) {\n        case PointerContextActionType.StartOver:\n          if (!state.over) {\n            return { ...state, over: true };\n          } else {\n            return state;\n          }\n        case PointerContextActionType.EndOver:\n          if (state.over) {\n            return { ...state, over: false };\n          } else {\n            return state;\n          }\n        case PointerContextActionType.UpdatePosition:\n          if (state.over && action.x && action.y && (action.x !== state.x || action.y !== state.y)) {\n            if (onInteractionMove) {\n              onInteractionMove({ x: action.x, y: action.y });\n            }\n            return { x: action.x, y: action.y, over: true };\n          } else {\n            return state;\n          }\n      }\n    },\n    [onInteractionMove]\n  );\n  const [pointerContext, update] = useReducer(reducer, { x: 0, y: 0, over: false });\n  const triggerUpdatePosition = useCallback(\n    (x: number, y: number) => {\n      const multiplier = retina ? 2 : 1;\n      update({ type: PointerContextActionType.UpdatePosition, x: x * multiplier, y: y * multiplier });\n    },\n    [retina]\n  );\n  const updateMousePosition = useCallback(\n    (event: MouseEvent) => {\n      const { offsetX: x, offsetY: y } = event;\n\n      triggerUpdatePosition(x, y);\n\n      return { x, y };\n    },\n    [triggerUpdatePosition]\n  );\n  const updateTouchPosition = useCallback(\n    (event: TouchEvent) => {\n      const touch = event.touches.length > 0 ? event.touches[0] : event.changedTouches[0];\n      if (touch) {\n        const { clientX, clientY } = touch;\n        const x = clientX - offset.x;\n        const y = clientY - offset.y;\n\n        if (x >= 0 && x < width && y >= 0 && y < height) {\n          update({ type: PointerContextActionType.StartOver });\n          triggerUpdatePosition(x, y);\n        } else {\n          update({ type: PointerContextActionType.EndOver });\n        }\n\n        return { x, y };\n      }\n      return null;\n    },\n    [offset, width, height, triggerUpdatePosition]\n  );\n  const updatePosition = useCallback(\n    (event: SyntheticEvent) => {\n      if (isTouchEvent(event.nativeEvent)) {\n        return updateTouchPosition(event.nativeEvent);\n      } else if (isMouseEvent(event.nativeEvent)) {\n        return updateMousePosition(event.nativeEvent);\n      }\n      return null;\n    },\n    [updateMousePosition, updateTouchPosition]\n  );\n  const pointerStart = useCallback(\n    (event: SyntheticEvent) => {\n      const { x, y } = (event.nativeEvent.target as HTMLCanvasElement).getBoundingClientRect();\n      setOffset({ x, y });\n      const point = updatePosition(event);\n\n      if (point && onInteractionStart) {\n        onInteractionStart(point);\n      }\n    },\n    [updatePosition, onInteractionStart]\n  );\n  const pointerEnd = useCallback(\n    (event: SyntheticEvent) => {\n      const point = updatePosition(event);\n\n      if (point && onInteractionEnd) {\n        onInteractionEnd(point);\n      }\n    },\n    [updatePosition, onInteractionEnd]\n  );\n\n  const pointerOver = useCallback(() => update({ type: PointerContextActionType.StartOver }), []);\n  const pointerCancel = useCallback(() => update({ type: PointerContextActionType.EndOver }), []);\n\n  return { pointerContext, updatePosition, pointerStart, pointerOver, pointerEnd, pointerCancel };\n};\n\nexport const useShapeTextureContext = (): ShapeTextureType => {\n  const [matrix, setMatrix] = useState<PIXI.Matrix | undefined>();\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>();\n\n  return {\n    texture,\n    matrix: texture ? matrix : undefined,\n    setMatrix,\n    setTexture\n  };\n};\n\nexport const useShapeStyleContext = (): ShapeStyleType => {\n  const [line, setLineStyle] = useState<LineDefinition | undefined>();\n  const [fill, setFillStyle] = useState<FillDefinition | undefined>();\n  const [holes, setHoles] = useState<ShapeType[] | undefined>()\n\n  return { line, fill, holes, setLineStyle, setFillStyle, setHoles };\n};\n\nexport const usePointsContext = (): PointsContextType => {\n  const reducer = useCallback((state: PointsState, action: PointActionType): PointsState => {\n    switch (action.type) {\n      case PointAction.Remove:\n        state.pointMap.delete(action.id);\n        return {\n          pointMap: state.pointMap,\n          points: state.points.filter((pointId) => pointId !== action.id)\n        };\n      case PointAction.Add:\n        if (action.point) {\n          state.pointMap.set(action.id, action.point);\n          if (state.points.indexOf(action.id) < 0) {\n            return {\n              points: [...state.points, action.id],\n              pointMap: state.pointMap\n            };\n          } else {\n            return {\n              points: [...state.points],\n              pointMap: state.pointMap\n            };\n          }\n        } else {\n          return state;\n        }\n    }\n  }, []);\n  const [state, dispatch] = useReducer(reducer, {\n    points: [],\n    pointMap: new Map()\n  });\n\n  const points = useMemo(() => {\n    const values: PIXI.Point[] = [];\n    state.points.forEach((pointId) => {\n      const point = state.pointMap.get(pointId);\n      if (point) {\n        values.push(new PIXI.Point(point.x, point.y));\n      }\n    });\n\n    return values;\n  }, [state]);\n  const addPoint = useCallback((id: string, point: Coords) => dispatch({ type: PointAction.Add, id, point }), []);\n  const removePoint = useCallback((id: string) => dispatch({ type: PointAction.Remove, id }), []);\n\n  return { points, addPoint, removePoint };\n};\n","import React, { useCallback, useContext, useEffect, useMemo, useReducer } from 'react';\nimport { GraphicsContext, ShapeStyleContext } from '../../contexts';\nimport { DrawShapeDefinition, ShapeType } from '../../types';\n\nenum HoleAction {\n  Add,\n  Remove\n}\n\ntype HoleActionType = {\n  type: HoleAction;\n  id: string;\n  shape?: ShapeType;\n};\n\ntype Hole = {\n  id: string;\n  definition: ShapeType;\n};\n\nconst holesReducer = (state: Hole[], action: HoleActionType) => {\n  switch (action.type) {\n    case HoleAction.Remove:\n      return state.filter((hole) => hole.id !== action.id);\n    case HoleAction.Add:\n      if (action.shape) {\n        return [\n          ...state,\n          {\n            id: action.id,\n            definition: action.shape\n          }\n        ];\n      } else {\n        return state;\n      }\n  }\n};\n\nconst Holes: React.FC = ({ children }) => {\n  const [holeState, updateHoles] = useReducer(holesReducer, []);\n  const { setHoles } = useContext(ShapeStyleContext);\n  const holes = useMemo(() => holeState.map((hole) => hole.definition), [holeState]);\n\n  const addHole = useCallback(\n    ({ id, type, params, points }: DrawShapeDefinition) => updateHoles({ type: HoleAction.Add, id, shape: { type, params, points } }),\n    []\n  );\n  const removeHole = useCallback((id: string) => updateHoles({ type: HoleAction.Remove, id }), []);\n\n  useEffect(() => {\n    setHoles(holes);\n  }, [holes, setHoles]);\n\n  return <GraphicsContext.Provider value={{ drawShape: addHole, removeShape: removeHole }}>{children}</GraphicsContext.Provider>;\n};\n\nexport default Holes;\n","import * as PIXI from 'pixi.js';\nimport React, { CSSProperties, useContext, useEffect, useState } from 'react';\nimport { PixiCanvasProps } from '../props';\nimport AutoSizer, { Size } from 'react-virtualized-auto-sizer';\nimport { useId, useAnimationContext, useRenderingContext, useSpeedContext, useTextureContext, usePointerContext } from '../hooks';\nimport { SpeedContext, AnimationContext, RenderingContext, ParentContext, TextureContext, PointerContext } from '../contexts';\nimport { Overflow, ParentContextType } from '../types';\n\nconst defaultStyle: CSSProperties = {\n  position: 'relative',\n  left: 0,\n  right: 0,\n  margin: 0,\n  padding: 0,\n  width: '100%',\n  height: '100%'\n};\n\nconst isDesktop = !PIXI.utils.isMobile.any;\n\nconst PixiCanvas: React.FC<PixiCanvasProps> = ({\n  id,\n  className,\n  width,\n  height,\n  retina = false,\n  textures = {},\n  speed = 1,\n  background,\n  overflow = Overflow.All,\n  filterArea,\n  onUpdate,\n  onAfterRender,\n  onResize,\n  onInteractionStart,\n  onInteractionEnd,\n  onInteractionMove,\n  children\n}) => {\n  const canvasId = useId(id);\n\n  const speedContext = useSpeedContext();\n  const textureContext = useTextureContext(textures);\n  const animationContext = useAnimationContext(speedContext.speed);\n  const renderingContext = useRenderingContext(canvasId, animationContext.frameId, background);\n  const genericParentContext = useContext(ParentContext);\n  const [containerStyle, setContainerStyle] = useState<CSSProperties>(defaultStyle);\n  const [childrenContainerStyle, setChildrenContainerStyle] = useState<CSSProperties>(defaultStyle);\n\n  const { setSpeed } = speedContext;\n\n  const { pointerContext, pointerStart, pointerEnd, pointerCancel, pointerOver, updatePosition } = usePointerContext(\n    retina,\n    renderingContext.width,\n    renderingContext.height,\n    onInteractionStart,\n    onInteractionEnd,\n    onInteractionMove\n  );\n\n  const [parentContext, setParentContext] = useState<ParentContextType<PIXI.Container>>({\n    ...genericParentContext,\n    parent: renderingContext.stage,\n    width: renderingContext.width,\n    height: renderingContext.height\n  });\n\n  useEffect(() => {\n    setParentContext({\n      ...genericParentContext,\n      parent: renderingContext.stage,\n      width: renderingContext.width,\n      height: renderingContext.height\n    });\n  }, [renderingContext.stage, renderingContext.width, renderingContext.height, genericParentContext]);\n\n  useEffect(() => {\n    const newStyle = { ...defaultStyle };\n    const newChildrenStyle = { ...defaultStyle };\n\n    switch (overflow) {\n      case Overflow.Horizontal:\n        newChildrenStyle.overflowY = 'hidden';\n        break;\n      case Overflow.Vertical:\n        newChildrenStyle.overflowX = 'hidden';\n        break;\n      case Overflow.None:\n        newChildrenStyle.overflow = 'hidden';\n    }\n\n    newChildrenStyle.position = 'absolute';\n    newStyle.width = width || '100%';\n    newStyle.height = height || '100%';\n\n    setContainerStyle(newStyle);\n    setChildrenContainerStyle(newChildrenStyle);\n  }, [width, height, overflow]);\n\n  useEffect(() => {\n    if (filterArea) {\n      renderingContext.stage.filterArea = new PIXI.Rectangle(filterArea.x, filterArea.y, filterArea.width, filterArea.height);\n    } else {\n      renderingContext.stage.filterArea = (null as unknown) as PIXI.Rectangle;\n    }\n  }, [renderingContext.stage, filterArea]);\n\n  useEffect(() => {\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  }, [animationContext.frameId, onUpdate]);\n\n  useEffect(() => {\n    if (typeof onAfterRender === 'function') {\n      onAfterRender();\n    }\n  }, [renderingContext.renderId, onAfterRender]);\n\n  useEffect(() => {\n    if (typeof onResize === 'function') {\n      onResize({\n        width: renderingContext.width,\n        height: renderingContext.height\n      });\n    }\n  }, [renderingContext.width, renderingContext.height, onResize]);\n\n  useEffect(() => {\n    setSpeed(speed);\n  }, [speed, setSpeed]);\n\n  return (\n    <TextureContext.Provider value={textureContext}>\n      <SpeedContext.Provider value={speedContext}>\n        <RenderingContext.Provider value={renderingContext}>\n          <AnimationContext.Provider value={animationContext}>\n            <PointerContext.Provider value={pointerContext}>\n              {renderingContext.stage && (\n                <ParentContext.Provider value={parentContext}>\n                  <div\n                    className={'pixi-root'}\n                    style={containerStyle}\n                    onTouchMove={isDesktop ? undefined : updatePosition}\n                    onTouchStart={isDesktop ? undefined : pointerStart}\n                    onTouchEnd={isDesktop ? undefined : pointerEnd}\n                    onTouchCancel={isDesktop ? undefined : pointerCancel}\n                    onPointerEnter={isDesktop ? pointerOver : undefined}\n                    onPointerOver={isDesktop ? pointerOver : undefined}\n                    onPointerDown={isDesktop ? pointerStart : undefined}\n                    onPointerUp={isDesktop ? pointerEnd : undefined}\n                    onPointerOut={isDesktop ? pointerCancel : undefined}\n                    onPointerCancel={isDesktop ? pointerCancel : undefined}\n                    onPointerLeave={isDesktop ? pointerCancel : undefined}\n                    onPointerMove={isDesktop ? updatePosition : undefined}\n                  >\n                    <AutoSizer>\n                      {({ width, height }: Size) => {\n                        const multiplier = retina ? 2 : 1;\n                        const canvasWidth = width * multiplier;\n                        const canvasHeight = height * multiplier;\n\n                        return (\n                          <canvas\n                            id={canvasId}\n                            className={className}\n                            width={canvasWidth}\n                            height={canvasHeight}\n                            style={{ ...defaultStyle, width, height }}\n                          />\n                        );\n                      }}\n                    </AutoSizer>\n                    <div className={'pixi-children-root'} style={childrenContainerStyle}>\n                      {children}\n                    </div>\n                  </div>\n                </ParentContext.Provider>\n              )}\n            </PointerContext.Provider>\n          </AnimationContext.Provider>\n        </RenderingContext.Provider>\n      </SpeedContext.Provider>\n    </TextureContext.Provider>\n  );\n};\n\nexport default PixiCanvas;\n","import * as PIXI from 'pixi.js';\nimport React, { PropsWithChildren, useContext, useEffect } from 'react';\nimport { AnimationContext, ParentContext, RenderingContext } from '../contexts';\nimport { useDisplayObjectEvents, useId, useParentContext, useGenericProps, useElement } from '../hooks';\nimport { PixiDisplayObjectProps } from '../props';\nimport { CursorType } from '../types';\n\nconst PixiDisplayObject: React.FC<PixiDisplayObjectProps<PIXI.Container>> = <T extends PIXI.Container>(\n  props: PropsWithChildren<PixiDisplayObjectProps<T>>\n) => {\n  const { item, children, onUpdate, onAfterRender } = props;\n  const { frameId } = useContext(AnimationContext);\n  const { renderId, update } = useContext(RenderingContext);\n  const element = useElement(item);\n  const parentContext = useParentContext(element);\n  const {\n    alpha = 1,\n    angle = 0,\n    buttonMode = false,\n    cursor = CursorType.None,\n    interactive = false,\n    name,\n    rotation = 0,\n    visible = true,\n    x = 0,\n    y = 0,\n    zIndex = element.parent?.children.length || 0,\n    pivotX = 0,\n    pivotY = 0,\n    scaleX = 1,\n    scaleY = 1,\n    skewX = 0,\n    skewY = 0,\n    width,\n    height,\n    sortableChildren = PIXI.settings.SORTABLE_CHILDREN,\n    hitArea,\n    filterArea\n  } = props;\n  const {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  } = props;\n\n  const id = useId(name);\n\n  useDisplayObjectEvents(element, {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  });\n\n  useGenericProps(element, {\n    alpha,\n    angle,\n    buttonMode,\n    cursor,\n    height,\n    interactive,\n    name: id,\n    pivotX,\n    pivotY,\n    rotation,\n    scaleX,\n    scaleY,\n    skewX,\n    skewY,\n    sortableChildren,\n    visible,\n    width,\n    x,\n    y,\n    zIndex,\n    hitArea,\n    filterArea\n  });\n\n  useEffect(() => {\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  }, [frameId, onUpdate]);\n\n  useEffect(() => {\n    if (typeof onAfterRender === 'function') {\n      onAfterRender();\n    }\n  }, [renderId, onAfterRender]);\n\n  useEffect(() => {\n    return () => {\n      update();\n    };\n  }, [update]);\n\n  return <ParentContext.Provider value={parentContext}>{children}</ParentContext.Provider>;\n};\n\nexport default PixiDisplayObject;\n","import React, { CSSProperties, useContext, useEffect, useState } from 'react';\nimport { ParentContext } from '../contexts';\nimport { PixiHtmlContainerProps } from '../props/PixiHtmlContainerProps';\nimport { Overflow } from '../types';\n\nconst PixiHtmlContainer: React.FC<PixiHtmlContainerProps> = ({ id, overflow = Overflow.All, children }) => {\n  const { left, top, transform, width, height, parent } = useContext(ParentContext);\n  const [style, setStyle] = useState<CSSProperties>({});\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (transform) {\n      const newStyle: CSSProperties = {\n        display: 'inline-block',\n        position: 'absolute',\n        transform: `matrix(${transform.join(',')})`,\n        width,\n        height,\n        top,\n        left\n      };\n\n      switch (overflow) {\n        case Overflow.Horizontal:\n          newStyle.overflowY = 'hidden';\n          break;\n        case Overflow.Vertical:\n          newStyle.overflowX = 'hidden';\n          break;\n        case Overflow.None:\n          newStyle.overflow = 'hidden';\n      }\n\n      setStyle(newStyle);\n    }\n  }, [transform, width, height, left, top, overflow]);\n\n  useEffect(() => {\n    setActive(!!transform && !!parent.parent && width > 1 && height > 1);\n  }, [transform, width, height, parent.parent]);\n\n  return (\n    active ? (\n      <div id={id} className={parent.name} style={style}>\n        {children}\n      </div>\n    ) : null\n  );\n};\n\nexport default PixiHtmlContainer;\n","import React, { useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { PixiContainerProps } from '../props';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiContainer: React.FC<PixiContainerProps> = (props) => {\n  const [container] = useState(new PIXI.Container());\n\n  return <PixiDisplayObject item={container} {...props} />;\n};\n\nexport default PixiContainer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useId, useTextureUpdate } from '../hooks';\nimport { PixiTextureProps } from '../props';\n\nconst PixiTexture: React.FC<PixiTextureProps> = ({ name, src, onLoad }) => {\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>();\n  const textureId = useId(name);\n\n  const loadCallback = useCallback((loadedTexture: PIXI.Texture) => {\n    setTexture(loadedTexture);\n    if (onLoad) {\n      onLoad();\n    }\n  }, [onLoad])\n\n  useEffect(() => {\n    if (src) {\n      PIXI.Texture.fromURL(src).then(loadCallback);\n    }\n  }, [src, loadCallback]);\n\n  useEffect(() => {\n    texture?.textureCacheIds.splice(0);\n    texture?.textureCacheIds.push(textureId);\n  }, [texture, textureId]);\n\n  useTextureUpdate(texture);\n\n  return null;\n};\n\nexport default PixiTexture;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { defaultParentContext, ParentContext, RenderingContext } from '../contexts';\nimport { useId, useTextureUpdate } from '../hooks';\nimport { PixiRenderTextureProps } from '../props';\nimport { Overflow } from '../types';\nimport PixiHtmlContainer from './PixiHtmlContainer';\n\nconst PixiRenderTexture: React.FC<PixiRenderTextureProps> = ({ name, width, height, children }) => {\n  const parentRenderContext = useContext(RenderingContext);\n  const textureId = useId(name);\n  const [stage] = useState(new PIXI.Container());\n  const [parentContext, setParentContext] = useState(defaultParentContext);\n  const [texture, setTexture] = useState<PIXI.RenderTexture | undefined>();\n  const [state, setState] = useState(true);\n  const { getTexture, update: parentUpdate, renderId } = parentRenderContext;\n\n  const update = useCallback(() => setState(true), []);\n\n  useEffect(() => {\n    setParentContext({\n      ...defaultParentContext,\n      parent: stage,\n      width,\n      height\n    });\n    setState(true);\n  }, [width, height, stage, textureId]);\n\n  useEffect(() => {\n    if (state) {\n      const newTexture = getTexture(stage, width, height);\n      newTexture?.textureCacheIds.push(textureId);\n      setTexture(newTexture);\n      setState(false);\n      parentUpdate();\n    }\n  }, [state, stage, parentUpdate, getTexture, width, height, textureId]);\n\n  useTextureUpdate(texture);\n\n  return (\n    <PixiHtmlContainer overflow={Overflow.None}>\n      <RenderingContext.Provider\n        value={{\n          stage,\n          width,\n          height,\n          renderId,\n          update,\n          getTexture\n        }}\n      >\n        <ParentContext.Provider value={parentContext}>{children}</ParentContext.Provider>\n      </RenderingContext.Provider>\n    </PixiHtmlContainer>\n  );\n};\n\nexport default PixiRenderTexture;\n","import React, { useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useSpriteProps, useTexture, useAlignedPosition, useGraphicsProps } from '../hooks';\nimport { PixiSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiSprite: React.FC<PixiSpriteProps> = (props) => {\n  const [sprite] = useState(new PIXI.Sprite());\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n\n  useTexture(sprite, props.texture);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined} />;\n};\n\nexport default PixiSprite;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useReducer, useState } from 'react';\nimport { GraphicsContext, RenderingContext } from '../contexts';\nimport { useGraphicsProps } from '../hooks';\nimport { PixiGraphicsProps } from '../props';\nimport {\n  BlendModes,\n  DrawShapeDefinition,\n  GraphicsState,\n  LineCap,\n  LineJoin,\n  ShapeAction,\n  ShapeActionType,\n  Shapes,\n  ShapeType\n} from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst drawShape = (definition: ShapeType, graphics: PIXI.Graphics, point?: PIXI.Point) => {\n  let lastPoint = point;\n\n  switch (definition.type) {\n    case Shapes.Path:\n      if (definition.points && definition.points.length > 1) {\n        if (!lastPoint || lastPoint.x !== definition.points[0].x || lastPoint.y !== definition.points[0].y) {\n          graphics.moveTo(definition.points[0].x, definition.points[0].y);\n        }\n        for (let i = 1; i < definition.points.length; i++) {\n          graphics.lineTo(definition.points[i].x, definition.points[i].y);\n        }\n        lastPoint = definition.points[definition.points.length - 1];\n      }\n      break;\n    case Shapes.Circle:\n      graphics.drawCircle(definition.params[0], definition.params[1], definition.params[2]);\n      break;\n    case Shapes.Arc:\n      graphics.arc(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4],\n        !!definition.params[5]\n      );\n      break;\n    case Shapes.BezierCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.bezierCurveTo(\n        definition.params[4],\n        definition.params[5],\n        definition.params[6],\n        definition.params[7],\n        definition.params[2],\n        definition.params[3]\n      );\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.ArcCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.arcTo(definition.params[4], definition.params[5], definition.params[2], definition.params[3], definition.params[6]);\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.QuadraticCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.quadraticCurveTo(definition.params[4], definition.params[5], definition.params[2], definition.params[3]);\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Ellipse:\n      graphics.drawEllipse(definition.params[0], definition.params[1], definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Rect:\n      graphics.drawRect(definition.params[0], definition.params[1], definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Polygon:\n      if (definition.points) {\n        graphics.drawPolygon(definition.points);\n      }\n      break;\n    case Shapes.RoundedRect:\n      graphics.drawRoundedRect(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4]\n      );\n      break;\n    case Shapes.Star:\n      graphics.drawStar(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4],\n        definition.params[5]\n      );\n      break;\n  }\n\n  return lastPoint;\n};\n\nconst updateGraphics = (graphics: PIXI.Graphics, state: GraphicsState) => {\n  let lastPoint: PIXI.Point | undefined;\n  graphics.clear();\n\n  state.shapes.forEach((shapeId) => {\n    const definition = state.shapeMap.get(shapeId);\n    let cap, join;\n\n    if (definition) {\n      if (definition.line) {\n        if (definition.line.texture) {\n          switch (definition.line.cap) {\n            case LineCap.Butt:\n              cap = PIXI.LINE_CAP.BUTT;\n              break;\n            case LineCap.Round:\n              cap = PIXI.LINE_CAP.ROUND;\n              break;\n            case LineCap.Square:\n              cap = PIXI.LINE_CAP.SQUARE;\n              break;\n          }\n\n          switch (definition.line.join) {\n            case LineJoin.Bevel:\n              join = PIXI.LINE_JOIN.BEVEL;\n              break;\n            case LineJoin.Miter:\n              join = PIXI.LINE_JOIN.MITER;\n              break;\n            case LineJoin.Round:\n              join = PIXI.LINE_JOIN.ROUND;\n              break;\n          }\n          graphics.lineTextureStyle({ ...definition.line, cap, join });\n        } else {\n          graphics.lineStyle(\n            definition.line.width,\n            definition.line.color,\n            definition.line.alpha,\n            definition.line.alignment,\n            definition.line.native\n          );\n        }\n      } else if (!lastPoint) {\n        graphics.lineStyle(0);\n      }\n      if (definition.fill) {\n        if (definition.fill.texture) {\n          graphics.beginTextureFill({\n            texture: definition.fill.texture,\n            matrix: definition.fill.matrix,\n            color: definition.fill.color,\n            alpha: definition.fill.alpha\n          });\n        } else {\n          graphics.beginFill(definition.fill.color, definition.fill.alpha);\n        }\n      }\n\n      lastPoint = drawShape(definition, graphics, lastPoint);\n\n      if (definition.holes && definition.holes.length > 0) {\n        let holeLastPoint: PIXI.Point | undefined;\n\n        graphics.beginHole();\n        definition.holes.forEach((hole) => {\n          holeLastPoint = drawShape(hole, graphics, holeLastPoint);\n        });\n        graphics.endHole();\n      }\n\n      if (definition.fill) {\n        graphics.endFill();\n      }\n    }\n  });\n};\n\nconst PixiGraphics: React.FC<PixiGraphicsProps> = (props) => {\n  const [graphics] = useState(new PIXI.Graphics());\n  const { blendMode = BlendModes.Normal, tint = 0xffffff } = props;\n  const { update } = useContext(RenderingContext);\n\n  const reducer = useCallback((state: GraphicsState, action: ShapeActionType): GraphicsState => {\n    switch (action.type) {\n      case ShapeAction.RemoveShape:\n        state.shapeMap.delete(action.id);\n        return {\n          shapes: state.shapes.filter((shape) => shape !== action.id),\n          shapeMap: state.shapeMap\n        };\n      case ShapeAction.UpdateShape:\n        if (action.definition) {\n          state.shapeMap.set(action.id, action.definition);\n          if (state.shapes.indexOf(action.id) < 0) {\n            return {\n              shapes: [...state.shapes, action.id],\n              shapeMap: state.shapeMap\n            };\n          } else {\n            return { ...state };\n          }\n        } else {\n          return state;\n        }\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, { shapes: [], shapeMap: new Map() });\n\n  const drawShape = useCallback(\n    (definition: DrawShapeDefinition) => dispatch({ type: ShapeAction.UpdateShape, id: definition.id, definition }),\n    []\n  );\n\n  const removeShape = useCallback((id: string) => dispatch({ type: ShapeAction.RemoveShape, id }), []);\n\n  useGraphicsProps(graphics, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    updateGraphics(graphics, state);\n    update();\n  }, [graphics, state, update]);\n\n  return (\n    <GraphicsContext.Provider value={{ drawShape, removeShape }}>\n      <PixiDisplayObject item={graphics} {...props} />\n    </GraphicsContext.Provider>\n  );\n};\n\nexport default PixiGraphics;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext } from '../contexts';\nimport { useGraphicsProps, useSpriteProps, useTexture, useTilingSpriteProps, useAlignedPosition } from '../hooks';\nimport { PixiTilingSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiTilingSprite: React.FC<PixiTilingSpriteProps> = (props) => {\n  const { width, height } = useContext(ParentContext);\n  const [tileWidth, setTileWidth] = useState(props.width || width);\n  const [tileHeight, setTileHeight] = useState(props.height || height);\n  const [sprite] = useState(new PIXI.TilingSprite(PIXI.Texture.EMPTY, tileWidth, tileHeight));\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { clampMargin = 0.5, tileX = 0, tileY = 0, tileScaleX = 1, tileScaleY = 1, uvRespectAnchor = false } = props;\n\n  useTexture(sprite, props.texture);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    setTileWidth(props.width || width);\n  }, [width, props.width]);\n\n  useEffect(() => {\n    setTileHeight(props.height || height);\n  }, [height, props.height]);\n\n  useTilingSpriteProps(sprite, {\n    clampMargin,\n    tileScaleX,\n    tileScaleY,\n    tileX,\n    tileY,\n    uvRespectAnchor\n  });\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} width={tileWidth} height={tileHeight} x={undefined} y={undefined} />;\n};\n\nexport default PixiTilingSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { RenderingContext } from '../contexts';\nimport { useFrames, useSpriteProps, useTexture, useFrameAnimation, useAlignedPosition, useGraphicsProps } from '../hooks';\nimport { PixiAnimatedSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiAnimatedSprite: React.FC<PixiAnimatedSpriteProps> = (props) => {\n  const [sprite] = useState(new PIXI.AnimatedSprite([PIXI.Texture.EMPTY], false));\n  const { update } = useContext(RenderingContext);\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { playing = false, resetOnStop = true, currentFrame = 0, fps = 60, onAnimationComplete } = props;\n  const [frameId, setFrameId] = useState(currentFrame);\n  const [initialFrame, setInitialFrame] = useState(0);\n\n  useTexture(sprite, props.texture);\n\n  const frameCount = useFrames(sprite, props.frames);\n  const frame = useFrameAnimation(initialFrame, frameCount, fps, playing);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    if (currentFrame < frameCount) {\n      setInitialFrame(currentFrame);\n    } else if (currentFrame > 0) {\n      setInitialFrame(currentFrame - 1);\n    }\n  }, [currentFrame, frameCount]);\n\n  useEffect(() => {\n    if (!playing && resetOnStop) {\n      setFrameId(initialFrame);\n    }\n  }, [playing, resetOnStop, initialFrame]);\n\n  useEffect(() => {\n    if (!isNaN(frameId)) {\n      sprite.gotoAndStop(frameId);\n      update();\n    }\n  }, [frameId, sprite, update]);\n\n  useEffect(() => {\n    if (playing && !isNaN(frame)) {\n      if (frame === frameCount - 1 && onAnimationComplete && frameCount > 0) {\n        onAnimationComplete();\n      }\n      setFrameId(frame);\n    }\n  }, [frame, frameCount, playing, onAnimationComplete]);\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined} />;\n};\n\nexport default PixiAnimatedSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport { useGraphicsProps, useSpriteProps, useTextureUpdate, useAlignedPosition } from '../hooks';\nimport { isAnimatedSprite, isSprite, PixiTextProps } from '../props';\nimport { BlendModes, defaultTextStyle } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiText: React.FC<PixiTextProps> = (props) => {\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { style = defaultTextStyle, children = '' } = props;\n  const { update } = useContext(RenderingContext);\n  const { parent } = useContext(ParentContext);\n  const [sprite] = useState(new PIXI.Text(String(children), style));\n  const [state, setState] = useState(false);\n  const [texture, setTexture] = useState(sprite.texture);\n  const [isTextureMode] = useState(isSprite(parent) || isAnimatedSprite(parent));\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    sprite.text = children ? String(children) : '';\n    sprite.updateText(true);\n    update();\n    setState(true);\n  }, [children, sprite, update]);\n\n  useEffect(() => {\n    sprite.style = style;\n    sprite.updateText(true);\n    update();\n    setState(true);\n  }, [style, sprite, update]);\n\n  useEffect(() => {\n    if (state) {\n      setTexture(sprite.texture);\n    }\n  }, [state, sprite]);\n\n  useTextureUpdate(texture);\n\n  useAlignedPosition(sprite, props);\n\n  return isTextureMode ? null : (\n    <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined}>\n      {null /* Avoiding passing down the tree the child text */}\n    </PixiDisplayObject>\n  );\n};\n\nexport default PixiText;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport { useTexture } from '../hooks';\nimport { useRelativePosition } from '../hooks/genericHooks';\nimport { PixiMaskProps } from '../props';\n\nconst PixiMask: React.FC<PixiMaskProps> = ({ texture, enabled = true, children }) => {\n  const [sprite] = useState(new PIXI.Sprite());\n  const parentContext = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const { parent } = parentContext;\n  const [left, top] = useRelativePosition((parent as unknown) as PIXI.Sprite | undefined);\n\n  useTexture(sprite, texture);\n\n  useEffect(() => {\n    if (enabled) {\n      parent.mask = sprite;\n      parent.addChild(sprite);\n      update();\n    }\n\n    return () => {\n      parent.removeChild(sprite);\n      parent.mask = null;\n      update();\n    };\n  }, [sprite, parent, enabled, update]);\n\n  useEffect(() => {\n    sprite.anchor.set(-left, -top);\n  }, [sprite, left, top]);\n\n  return <ParentContext.Provider value={{ ...parentContext, parent: sprite }}>{children}</ParentContext.Provider>;\n};\n\nexport default PixiMask;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeTextureContext } from '../../contexts';\nimport { useLoadedTexture, useTransformMatrix } from '../../hooks';\nimport { PixiTextureProps, UpdatableTextureType } from '../../props';\nimport { TransformType } from '../../types';\nimport PixiTexture from '../PixiTexture';\n\nconst ShapeTexture: React.FC<PixiTextureProps & TransformType & UpdatableTextureType> = ({\n  name,\n  src,\n  onLoad,\n  texture,\n  x,\n  y,\n  pivotX,\n  pivotY,\n  scaleX,\n  scaleY,\n  rotation,\n  skewX,\n  skewY\n}) => {\n  const { setTexture, setMatrix } = useContext(ShapeTextureContext);\n\n  const loadedTexture = useLoadedTexture(texture);\n  const matrix = useTransformMatrix(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY);\n\n  useEffect(() => {\n    setTexture(loadedTexture);\n\n    return () => {\n      setTexture(undefined);\n    }\n  }, [loadedTexture, setTexture]);\n\n  useEffect(() => {\n    setMatrix(matrix);\n\n    return () => {\n      setMatrix(undefined);\n    }\n  }, [matrix, setMatrix]);\n\n  return <PixiTexture name={name} src={src} onLoad={onLoad} />;\n};\n\nexport default ShapeTexture;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeStyleContext, ShapeTextureContext } from '../../contexts';\nimport { useShapeTextureContext } from '../../hooks';\nimport { LineCap, LineJoin, LineStyleType } from '../../types';\n\nconst LineStyle: React.FC<LineStyleType> = ({\n  alpha = 1,\n  color = 0x000000,\n  alignment = 0.5,\n  width = 1,\n  cap = LineCap.Butt,\n  join = LineJoin.Miter,\n  miterLimit = 10,\n  native = false,\n  children\n}) => {\n  const shapeTextureContext = useShapeTextureContext();\n  const { texture, matrix } = shapeTextureContext;\n  const { setLineStyle } = useContext(ShapeStyleContext);\n\n  useEffect(() => {\n    setLineStyle({ alpha, color, texture, matrix, alignment, width, cap, join, miterLimit, native });\n\n    return () => {\n      setLineStyle(undefined);\n    };\n  }, [alpha, color, texture, matrix, alignment, width, cap, join, miterLimit, native, setLineStyle]);\n\n  return <ShapeTextureContext.Provider value={shapeTextureContext}>{children}</ShapeTextureContext.Provider>;\n};\n\nexport default LineStyle;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeStyleContext, ShapeTextureContext } from '../../contexts';\nimport { useShapeTextureContext } from '../../hooks';\nimport { FillStyleType } from '../../types';\n\nconst FillStyle: React.FC<FillStyleType> = ({ alpha = 1, color = 0xffffff, children }) => {\n  const shapeTextureContext = useShapeTextureContext();\n  const { texture, matrix } = shapeTextureContext;\n  const { setFillStyle } = useContext(ShapeStyleContext);\n\n  useEffect(() => {\n    setFillStyle({\n      alpha, color, texture, matrix\n    });\n\n    return () => {\n      setFillStyle(undefined);\n    };\n  }, [alpha, color, texture, matrix, setFillStyle]);\n\n  return <ShapeTextureContext.Provider value={shapeTextureContext}>{children}</ShapeTextureContext.Provider>;\n};\n\nexport default FillStyle;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeStyleContext, GraphicsContext } from '../../contexts';\nimport { useId, useShapeStyleContext } from '../../hooks';\nimport { ShapeType } from '../../types';\n\nconst Shape: React.FC<ShapeType> = ({ name, type, params, points, children }) => {\n  const styleContext = useShapeStyleContext();\n  const { drawShape, removeShape } = useContext(GraphicsContext);\n  const { fill, line, holes } = styleContext;\n  const id = useId(name);\n\n  useEffect(() => {\n    drawShape({ id, type, params, points, fill, line, holes });\n  }, [id, type, params, fill, line, points, holes, drawShape]);\n\n  useEffect(() => {\n    return () => {\n      removeShape(id);\n    };\n  }, [id, removeShape]);\n\n  return <ShapeStyleContext.Provider value={styleContext}>{children}</ShapeStyleContext.Provider>;\n};\n\nexport default Shape;\n","import React, { useEffect, useState } from 'react';\nimport { RectangleType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Rectangle: React.FC<RectangleType> = ({ name, x, y, width, height, borderRadius = 0, children }) => {\n  const [params, setParams] = useState([x, y, width, height]);\n  const [shapeType, setShapeType] = useState(Shapes.Rect);\n\n  useEffect(() => {\n    if (borderRadius > 0) {\n      setShapeType(Shapes.RoundedRect);\n      setParams([x, y, width, height, borderRadius]);\n    } else {\n      setShapeType(Shapes.Rect);\n      setParams([x, y, width, height]);\n    }\n  }, [borderRadius, x, y, width, height]);\n\n  return (\n    <Shape name={name} type={shapeType} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Rectangle;\n","import React, { useEffect, useState } from 'react';\nimport { CircleType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Circle: React.FC<CircleType> = ({ name, x, y, radius, children }) => {\n  const [params, setParams] = useState([x, y, radius]);\n\n  useEffect(() => {\n    setParams([x, y, radius]);\n  }, [x, y, radius]);\n\n  return (\n    <Shape name={name} type={Shapes.Circle} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Circle;\n","import React, { useEffect, useState } from 'react';\nimport { EllipseType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Ellipse: React.FC<EllipseType> = ({ name, x, y, width, height, children }) => {\n  const [params, setParams] = useState([x, y, width, height]);\n\n  useEffect(() => {\n    setParams([x, y, width, height]);\n  }, [x, y, width, height]);\n\n  return (\n    <Shape name={name} type={Shapes.Ellipse} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Ellipse;\n","import React, { useEffect, useState } from 'react';\nimport { StarType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Star: React.FC<StarType> = ({ name, x, y, radius, innerRadius, points = 5, rotation = 0, children }) => {\n  const [params, setParams] = useState([x, y, points, radius, innerRadius || radius / 2, rotation]);\n\n  useEffect(() => {\n    setParams([x, y, points, radius, innerRadius || radius / 2, rotation]);\n  }, [x, y, points, radius, innerRadius, rotation]);\n\n  return (\n    <Shape name={name} type={Shapes.Star} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Star;\n","import React from 'react';\nimport { usePointsContext } from '../../hooks';\nimport { PointsContext } from '../../contexts';\nimport { ShapeGenericType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst noParams: number[] = [];\n\nconst Polygon: React.FC<ShapeGenericType> = ({ name, children }) => {\n  const pointsContext = usePointsContext();\n  const { points } = pointsContext;\n\n  return (\n    <PointsContext.Provider value={pointsContext}>\n      <Shape name={name} type={Shapes.Polygon} params={noParams} points={points}>\n        {children}\n      </Shape>\n    </PointsContext.Provider>\n  );\n};\n\nexport default Polygon;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { PointsContext } from '../../contexts';\nimport { useId } from '../../hooks';\nimport { Coords, PointProps } from '../../types';\n\nconst Point: React.FC<PointProps> = ({ id, x, y }) => {\n  const pointId = useId(id);\n  const { addPoint, removePoint } = useContext(PointsContext);\n  const [point, setPoint] = useState<Coords>({ x, y });\n\n  useEffect(() => {\n    setPoint({ x, y });\n  }, [x, y]);\n\n  useEffect(() => {\n    addPoint(pointId, point);\n  }, [point, pointId, addPoint]);\n\n  useEffect(() => {\n    return () => {\n      removePoint(pointId);\n    };\n  }, [pointId, removePoint]);\n\n  return null;\n};\n\nexport default Point;\n","import React, { useEffect, useState } from 'react';\nimport { ArcType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Arc: React.FC<ArcType> = ({ name, x, y, radius, startAngle, endAngle, anticlockwise = false, children }) => {\n  const [params, setParams] = useState([x, y, radius, startAngle, endAngle, anticlockwise ? 1 : 0]);\n\n  useEffect(() => {\n    setParams([x, y, radius, startAngle, endAngle, anticlockwise ? 1 : 0]);\n  }, [x, y, radius, startAngle, endAngle, anticlockwise]);\n\n  return (\n    <Shape name={name} type={Shapes.Arc} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Arc;\n","import React, { useEffect, useState } from 'react';\nimport { BezierCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst BezierCurve: React.FC<BezierCurveType> = ({\n  name,\n  xFrom = 0,\n  yFrom = 0,\n  xTo,\n  yTo,\n  controlX,\n  controlY,\n  controlX2,\n  controlY2,\n  children\n}) => {\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n\n  return (\n    <Shape name={name} type={Shapes.BezierCurve} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default BezierCurve;\n","import React, { useEffect, useState } from 'react';\nimport { QuadraticCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst QuadraticCurve: React.FC<QuadraticCurveType> = ({ name, xFrom = 0, yFrom = 0, xTo, yTo, controlX, controlY, children }) => {\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY]);\n\n  return (\n    <Shape name={name} type={Shapes.QuadraticCurve} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default QuadraticCurve;\n","import React, { useEffect, useState } from 'react';\nimport { ArcCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst ArcCurve: React.FC<ArcCurveType> = ({ name, radius, xFrom = 0, yFrom = 0, xTo, yTo, controlX, controlY, children }) => {\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n\n  return (\n    <Shape name={name} type={Shapes.ArcCurve} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default ArcCurve;\n","import React from 'react';\nimport { usePointsContext } from '../../hooks';\nimport { PointsContext } from '../../contexts';\nimport { ShapeGenericType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst noParams: number[] = [];\n\nconst Path: React.FC<ShapeGenericType> = ({ name, children }) => {\n  const pointsContext = usePointsContext();\n  const { points } = pointsContext;\n\n  return (\n    <PointsContext.Provider value={pointsContext}>\n      <Shape name={name} type={Shapes.Path} params={noParams} points={points}>\n        {children}\n      </Shape>\n    </PointsContext.Provider>\n  );\n};\n\nexport default Path;\n","import React, { PropsWithChildren, ReactNode, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useFilterProps } from '../hooks';\nimport { PixiFilterProps } from '../props';\nimport { BlendModes } from '../types';\n\nconst PixiFilter: React.FC<PixiFilterProps<PIXI.Filter>> = <T extends PIXI.Filter>(props: PropsWithChildren<PixiFilterProps<T>>) => {\n  const {\n    item,\n    blendMode = BlendModes.Normal,\n    autoFit = true,\n    enabled = true,\n    padding = 0,\n    resolution = PIXI.settings.FILTER_RESOLUTION,\n    children\n  } = props;\n\n  const [effects, setEffects] = useState<ReactNode[]>([]);\n\n  useFilterProps(item, {\n    autoFit,\n    blendMode,\n    enabled,\n    padding,\n    resolution\n  });\n\n  useEffect(() => {\n    if (children) {\n      if (Array.isArray(children)) {\n        setEffects(children);\n      } else {\n        setEffects([children]);\n      }\n    } else {\n      setEffects([]);\n    }\n  }, [children]);\n\n  return React.createElement(React.Fragment, null, ...effects);\n};\n\nexport default PixiFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { AlphaFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst AlphaFilter: React.FC<AlphaFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.AlphaFilter());\n  const { alpha = 1 } = props;\n\n  useFilterProps(filter, {\n    alpha\n  });\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default AlphaFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { BlurFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst BlurFilter: React.FC<BlurFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.BlurFilter());\n  const { blur = 2, blurX = 2, blurY = 2, quality = 1, repeatEdgePixels = false } = props;\n\n  useFilterProps(filter, {\n    blur,\n    blurX,\n    blurY,\n    quality,\n    repeatEdgePixels\n  });\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default BlurFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter } from '../hooks';\nimport { AbstractFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst FXAAFilter: React.FC<AbstractFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.FXAAFilter());\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default FXAAFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport PixiFilter from './PixiFilter';\nimport { NoiseFilterProps } from '../props';\n\nconst FXAA_SEED = Math.random();\n\nconst FXAAFilter: React.FC<NoiseFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.NoiseFilter());\n  const { noise = 0.5, seed = FXAA_SEED } = props;\n\n  useFilterProps(filter, {\n    noise,\n    seed\n  });\n\n  return <PixiFilter item={filter} {...props} enabled={undefined} />;\n};\n\nexport default FXAAFilter;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useReducer } from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { AlphaFilterProps } from '../props';\nimport { EffectContext, RenderingContext } from '../contexts';\nimport PixiFilter from './PixiFilter';\nimport { EffectAction, EffectActionType, EffectState, EffectType, EffectValue } from '../types';\n\nconst updateColorMatrix = (filter: PIXI.filters.ColorMatrixFilter, state: EffectState) => {\n  filter.reset();\n  state.effects.forEach((id) => {\n    const effectData = state.effectMap.get(id);\n\n    if (effectData) {\n      const { params = [], multiply = true, enabled = true } = effectData;\n\n      if (!enabled) return;\n\n      switch (effectData.effect) {\n        case EffectType.BlackAndWhite:\n          filter.blackAndWhite(multiply);\n          break;\n        case EffectType.Brightness:\n          filter.brightness(params[0], multiply);\n          break;\n        case EffectType.Browni:\n          filter.browni(multiply);\n          break;\n        case EffectType.ColorTone:\n          filter.colorTone(params[0], params[1], params[2], params[3], multiply);\n          break;\n        case EffectType.Contrast:\n          filter.contrast(params[0], multiply);\n          break;\n        case EffectType.Desaturate:\n          filter.desaturate();\n          break;\n        case EffectType.GreyScale:\n          filter.greyscale(params[0], multiply);\n          break;\n        case EffectType.Hue:\n          filter.hue(params[0], multiply);\n          break;\n        case EffectType.Kodachrome:\n          filter.kodachrome(multiply);\n          break;\n        case EffectType.Lsd:\n          filter.lsd(multiply);\n          break;\n        case EffectType.Negative:\n          filter.negative(multiply);\n          break;\n        case EffectType.Night:\n          filter.night(params[0], multiply);\n          break;\n        case EffectType.Polaroid:\n          filter.polaroid(multiply);\n          break;\n        case EffectType.Predator:\n          filter.predator(params[0], multiply);\n          break;\n        case EffectType.Saturate:\n          filter.saturate(params[0], multiply);\n          break;\n        case EffectType.Sepia:\n          filter.sepia(multiply);\n          break;\n        case EffectType.Technicolor:\n          filter.technicolor(multiply);\n          break;\n        case EffectType.ToBGR:\n          filter.toBGR(multiply);\n          break;\n        case EffectType.Vintage:\n          filter.vintage(multiply);\n          break;\n      }\n    }\n  });\n};\n\nconst ColorMatrixFilter: React.FC<AlphaFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.ColorMatrixFilter());\n  const { update } = useContext(RenderingContext);\n  const { alpha = 1, children } = props;\n\n  const reducer = useCallback((state: EffectState, action: EffectAction): EffectState => {\n    const { id } = action.value;\n    let index, effects;\n\n    switch (action.type) {\n      case EffectActionType.UpdateEffect:\n        effects = [...state.effects];\n        if (action.value.effect !== undefined) {\n          index = state.effects.indexOf(id);\n          state.effectMap.set(id, action.value);\n\n          if (index < 0) {\n            effects.push(id);\n          }\n          return {\n            ...state,\n            effects\n          };\n        } else {\n          return state;\n        }\n      case EffectActionType.RemoveEffect:\n        index = state.effects.indexOf(id);\n        if (index >= 0) {\n          effects = [...state.effects];\n          effects.splice(index, 1);\n          state.effectMap.delete(id);\n          return {\n            ...state,\n            effects\n          };\n        } else {\n          return state;\n        }\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, {\n    effects: [],\n    effectMap: new Map()\n  });\n\n  const updateEffect = useCallback((value: EffectValue) => {\n    dispatch({ type: EffectActionType.UpdateEffect, value });\n  }, []);\n  const removeEffect = useCallback((id: string) => {\n    dispatch({\n      type: EffectActionType.RemoveEffect,\n      value: {\n        id\n      }\n    });\n  }, []);\n\n  useFilterProps(filter, {\n    alpha\n  });\n\n  useEffect(() => {\n    updateColorMatrix(filter, state);\n    update();\n  }, [filter, state, update]);\n\n  return (\n    <PixiFilter item={filter} {...props}>\n      <EffectContext.Provider value={{ updateEffect, removeEffect }}>{children}</EffectContext.Provider>\n    </PixiFilter>\n  );\n};\n\nexport default ColorMatrixFilter;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BlackAndWhiteEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.BlackAndWhite\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default BlackAndWhiteEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { BrightnessEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BrightnessEffect: React.FC<BrightnessEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Brightness,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default BrightnessEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BrowniEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Browni\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default BrowniEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { ColorToneProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ColorToneEffect: React.FC<ColorToneProps> = ({ multiply = true, enabled = true, desaturation, toned, lightColor, darkColor }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.ColorTone,\n      params: [desaturation, toned, lightColor, darkColor]\n    });\n  }, [id, multiply, enabled, updateEffect, desaturation, toned, lightColor, darkColor]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default ColorToneEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { ContrastEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ContrastEffect: React.FC<ContrastEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Contrast,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default ContrastEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst DesaturateEffect: React.FC<EffectProps> = ({ enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply: false,\n      enabled,\n      effect: EffectType.Desaturate\n    });\n  }, [id, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default DesaturateEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { GreyScaleEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst GreyScaleEffect: React.FC<GreyScaleEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.GreyScale,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default GreyScaleEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { HueEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst HueEffect: React.FC<HueEffectProps> = ({ multiply = true, enabled = true, rotation = 0 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Hue,\n      params: [rotation]\n    });\n  }, [id, multiply, enabled, updateEffect, rotation]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default HueEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst KodachromeEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Kodachrome\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default KodachromeEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst LsdEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Lsd\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default LsdEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst NegativeEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Negative\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default NegativeEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { NightEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst NightEffect: React.FC<NightEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Night,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default NightEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst PolaroidEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Polaroid\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default PolaroidEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { PredatorEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst PredatorEffect: React.FC<PredatorEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Predator,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default PredatorEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { SaturateEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst SaturateEffect: React.FC<SaturateEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Saturate,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default SaturateEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst SepiaEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Sepia\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default SepiaEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst TechnicolorEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Technicolor\n    });\n\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default TechnicolorEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ToBGREffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.ToBGR\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default ToBGREffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst VintageEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Vintage\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default VintageEffect;\n"],"sourceRoot":""}