{"version":3,"sources":["views/PageIndex.tsx","views/pages/Filters.tsx","views/pages/FXAAFilter.tsx"],"names":["buildIndex","page","dispatch","a","items","getPageChildren","pages","i","getComponentUrl","url","push","href","key","text","onClick","length","PageIndex","showTitle","useState","links","setLinks","useContext","DispatchContext","useEffect","then","filterProps","Filters","Pages","textures","galaxy","ship","FXAAFilterExample","enabled","trackSize","setTrackSize","resize","useCallback","size","width","reducer","position","useReducer","update","onUpdate","onResize","texture","x","alignY","FXAAFilterDoc","setEnabled","toggle","style","textAlign","marginRight","defaultChecked","onChange","height","src","props"],"mappings":"yMAIMA,EAAU,uCAAG,WAAOC,EAAaC,GAApB,qBAAAC,EAAA,6DACXC,EAAwB,GADb,SAEGC,YAAgBJ,GAFnB,OAEXK,EAFW,WAAAH,EAAA,iBAIRI,GAJQ,eAAAJ,EAAA,sEAKGK,YAAgBF,EAAMC,IALzB,OAKTE,EALS,OAOfL,EAAMM,KAAK,kBAAC,IAAD,CAAoBC,KAAI,WAAMF,GAAOG,IAAKN,EAAMC,GAAIM,KAAMP,EAAMC,GAAIO,QAAS,kBAAMZ,EAASI,EAAMC,QAP9F,0CAIRA,EAAI,EAJI,YAIDA,EAAID,EAAMS,QAJT,0CAIRR,GAJQ,eAIiBA,IAJjB,gDAUVH,GAVU,4CAAH,wDA6BDY,IAhB6B,SAAC,GAAgC,IAA9Bf,EAA6B,EAA7BA,KAA6B,IAAvBgB,iBAAuB,WAChDC,mBAAyB,IADuB,mBACnEC,EADmE,KAC5DC,EAD4D,KAElElB,EAAamB,qBAAWC,KAAxBpB,SAMR,OAJAqB,qBAAU,WACRvB,EAAWC,EAAMC,GAAUsB,KAAKJ,KAC/B,CAACnB,EAAMC,IAGR,oCACGe,GAAa,kBAAC,IAAD,mBAAqBhB,IAClCkB,K,gCC5BP,wFAKaM,EAA+B,CAC1C,CAAC,aAAa,EAAO,YAAa,oBAAqB,kDACvD,CAAC,WAAW,EAAO,UAAW,OAAQ,kFACtC,CAAC,WAAW,EAAO,UAAW,OAAQ,uDACtC,CACE,WACA,EACA,SACA,IACA,wKAEF,CAAC,cAAc,EAAO,SAAU,IAAK,iCAOxBC,UAJW,WACxB,OAAO,kBAAC,IAAD,CAAWzB,KAAM0B,IAAMD,Y,sHCZ1BE,EAAW,CACfC,OAAQ,4BACRC,KAAM,gCAGFC,EAAoD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACvCd,mBAAS,GAD8B,mBAClEe,EADkE,KACvDC,EADuD,KAEnEC,EAASC,uBAAY,SAACC,GAAD,OAAUH,EAAaG,EAAKC,MAAQ,OAAM,IAC/DC,EAAUH,uBAAY,SAACI,GAAD,OAAeA,EAAW,GAAKP,IAAW,CAACA,IAHE,EAI9CQ,qBAAWF,EAAS,GAJ0B,mBAIlEC,EAJkE,KAIxDE,EAJwD,KAMzE,OACE,kBAAC,IAAD,CAAYd,SAAUA,EAAUe,SAAUD,EAAQE,SAAUT,GAC1D,kBAAC,IAAD,CAAkBU,QAAS,WAC3B,kBAAC,IAAD,CAAYA,QAAS,OAAQC,EAAGN,EAAW,IAAKO,OAAQ,IACtD,kBAAC,IAAD,CAAYf,QAASA,OA8BdgB,UAxBiB,WAAO,IAAD,EACN9B,oBAAS,GADH,mBAC7Bc,EAD6B,KACpBiB,EADoB,KAE9BC,EAASd,uBAAY,kBAAMa,GAAYjB,KAAU,CAACA,IAExD,OACE,oCACE,kBAAC,IAAD,mBACA,kBAAC,IAAD,sEACA,kBAAC,IAAD,CAAOmB,MAAO,CAAEC,UAAW,UACzB,0BAAMD,MAAO,CAAEE,YAAa,KAAO,iBACnC,kBAAC,IAAD,CAAQC,gBAAc,EAACC,SAAUL,KAEnC,kBAAC,IAAD,CAAOC,MAAO,CAAEK,OAAQ,MACtB,kBAACzB,EAAD,CAAmBC,QAASA,KAE9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,IAAK,4CAEnB,kBAAC,IAAD,mBACA,kBAAC,IAAD,CAAYC,MAAOjC","file":"static/js/33.f367c69b.chunk.js","sourcesContent":["import React, { ReactElement, useContext, useEffect, useState } from 'react';\nimport { DispatchContext, getComponentUrl, getPageChildren, PageIndexProps, Pages } from '../pages';\nimport { StyledTitle, IndexComponentLink } from './StyledComponents';\n\nconst buildIndex = async (page: Pages, dispatch: (page: Pages) => void) => {\n  const items: ReactElement[] = [];\n  const pages = await getPageChildren(page);\n\n  for (let i = 0; i < pages.length; i++) {\n    const url = await getComponentUrl(pages[i]);\n\n    items.push(<IndexComponentLink href={`#${url}`} key={pages[i]} text={pages[i]} onClick={() => dispatch(pages[i])} />);\n  }\n\n  return items;\n};\n\nconst PageIndex: React.FC<PageIndexProps> = ({ page, showTitle = true }) => {\n  const [links, setLinks] = useState<ReactElement[]>([]);\n  const { dispatch } = useContext(DispatchContext);\n\n  useEffect(() => {\n    buildIndex(page, dispatch).then(setLinks);\n  }, [page, dispatch]);\n\n  return (\n    <>\n      {showTitle && <StyledTitle>{`All ${page}`}</StyledTitle>}\n      {links}\n    </>\n  );\n};\n\nexport default PageIndex;\n","import React from 'react';\nimport { Pages } from '../../pages';\nimport PageIndex from '../PageIndex';\nimport { PropsDefinition } from '../PropsTable';\n\nexport const filterProps: PropsDefinition = [\n  ['blendMode', false, 'BlendMode', 'BlendModes.Normal', 'Mode used to blend the filter with the element'],\n  ['autoFit', false, 'boolean', 'true', 'If enabled, it will fit the filter area into boundaries for better performance'],\n  ['enabled', false, 'boolean', 'true', 'Whether the filter is applied to the element or not'],\n  [\n    'padding',\n    false,\n    'number',\n    '0',\n    'Some filters require extra space to breath such as a blur. Increasing this will add extra width and height to the bounds of the object that the filter is applied to'\n  ],\n  ['resolution', false, 'number', '1', 'The resolution of the filter']\n];\n\nconst Filters: React.FC = () => {\n  return <PageIndex page={Pages.Filters} />;\n};\n\nexport default Filters;\n","import { Block, Toggle } from 'framework7-react';\nimport { PixiCanvas, PixiSprite, PixiTilingSprite, FXAAFilter } from 'pixi-reactive';\nimport React, { useCallback, useReducer, useState } from 'react';\nimport { filterProps } from './Filters';\nimport CodeViewer from '../CodeViewer';\nimport PropsTable from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst textures = {\n  galaxy: '/static/assets/galaxy.png',\n  ship: '/static/assets/spaceship.png'\n};\n\nconst FXAAFilterExample: React.FC<{ enabled: boolean }> = ({ enabled }) => {\n  const [trackSize, setTrackSize] = useState(0);\n  const resize = useCallback((size) => setTrackSize(size.width + 300), []);\n  const reducer = useCallback((position) => (position + 1) % trackSize, [trackSize]);\n  const [position, update] = useReducer(reducer, 0);\n\n  return (\n    <PixiCanvas textures={textures} onUpdate={update} onResize={resize}>\n      <PixiTilingSprite texture={'galaxy'} />\n      <PixiSprite texture={'ship'} x={position - 150} alignY={0.5}>\n        <FXAAFilter enabled={enabled} />\n      </PixiSprite>\n    </PixiCanvas>\n  );\n};\n\nconst FXAAFilterDoc: React.FC = () => {\n  const [enabled, setEnabled] = useState(true);\n  const toggle = useCallback(() => setEnabled(!enabled), [enabled]);\n\n  return (\n    <>\n      <StyledTitle>FXAAFilter</StyledTitle>\n      <StyledIntroduction>Apply a fast approximate anti-aliasing filter to the element.</StyledIntroduction>\n      <Block style={{ textAlign: 'right' }}>\n        <span style={{ marginRight: 10 }}>{'Toggle Filter'}</span>\n        <Toggle defaultChecked onChange={toggle} />\n      </Block>\n      <Block style={{ height: 300 }}>\n        <FXAAFilterExample enabled={enabled} />\n      </Block>\n      <Block>\n        <CodeViewer src={'/static/examples/FXAAFilterExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={filterProps} />\n    </>\n  );\n};\n\nexport default FXAAFilterDoc;\n"],"sourceRoot":""}