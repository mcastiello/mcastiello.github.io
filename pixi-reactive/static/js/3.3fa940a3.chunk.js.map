{"version":3,"sources":["views/pages/PixiAnimatedSprite.tsx","views/PropsTable.tsx","views/ComponentLink.tsx","views/pages/PixiCanvas.tsx","views/pages/PixiContainer.tsx","views/pages/PixiSprite.tsx"],"names":["props","spriteProps","events","genericEvents","textures","coin","PixiAnimatedSpriteExample","frames","alignX","playing","fps","PixiAnimatedSpriteColorsExample","alignY","src","PixiAnimatedSpriteDoc","page","Pages","PixiTexture","style","height","pageUrlMap","StyledCode","styled","code","getTypeLinks","a","getPageChildren","Types","pages","map","Map","i","length","getComponentUrl","path","set","PropsTable","useState","types","setTypes","useEffect","then","prop","index","key","f7","size","has","text","href","get","external","split","content","ComponentLink","className","url","setUrl","renderEvents","galaxy","stars","ship","updateScene","state","newDirection","direction","shipY","galaxyTileX","starsTileX","PixiCanvasExample","useReducer","update","onUpdate","texture","tileX","x","y","anchorY","PixiCanvasDoc","transformProps","genericProps","PixiContainerExample","PixiContainerDoc","sheet","PixiSpriteExample","PixiSpriteDoc","TextureContext"],"mappings":"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","file":"static/js/3.3fa940a3.chunk.js","sourcesContent":["import { Block } from 'framework7-react';\nimport { PixiAnimatedSprite, PixiCanvas, PixiTexture } from 'pixi-reactive';\nimport React from 'react';\nimport { Pages } from '../../pages';\nimport CodeViewer from '../CodeViewer';\nimport ComponentLink from '../ComponentLink';\nimport PropsTable, { PropsDefinition, StyledCode } from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\nimport { genericEvents } from './PixiContainer';\nimport { spriteProps } from './PixiSprite';\n\nconst props: PropsDefinition = [\n  ['frames', false, 'string[] | string', '[]', 'List of frame names of name of the JSON file containing the whole animation'],\n  ['playing', false, 'boolean', 'false', 'Whether to play or not the animation'],\n  ['resetOnStop', false, 'boolean', 'true', 'Whether to reset to the first frame when the animation is stopped'],\n  ['currentFrame', false, 'number', '0', 'Index of the current frame'],\n  ['fps', false, 'number', '60', 'Frame rate of the currently running animation'],\n  ...spriteProps\n];\n\nconst events: PropsDefinition = [\n  ['onAnimationComplete', false, 'function', 'null', 'Callback executed when each animation loop is completed'],\n  ...genericEvents\n];\n\nconst textures = {\n  coin: './static/assets/animation.json'\n};\n\nconst PixiAnimatedSpriteExample: React.FC = () => {\n  return (\n    <PixiCanvas textures={textures}>\n      <PixiAnimatedSprite frames={'coin'} alignX={0.5} playing={true} fps={24} />\n    </PixiCanvas>\n  );\n};\n\nconst PixiAnimatedSpriteColorsExample: React.FC = () => {\n  return (\n    <PixiCanvas>\n      <PixiAnimatedSprite alignX={0.5} alignY={0.5} playing={true} fps={4}>\n        <PixiTexture src={'./static/assets/blue.png'} />\n        <PixiTexture src={'./static/assets/green.png'} />\n        <PixiTexture src={'./static/assets/red.png'} />\n        <PixiTexture src={'./static/assets/yellow.png'} />\n      </PixiAnimatedSprite>\n    </PixiCanvas>\n  );\n};\n\nconst PixiAnimatedSpriteDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>PixiAnimatedSprite</StyledTitle>\n      <StyledIntroduction>\n        The animated sprite allow you to play an animation just passing an array of frame names, the name of a JSON sprite-sheet or a group\n        of <ComponentLink page={Pages.PixiTexture} /> children nodes. It is also possible to set the frame rate and start the animation by\n        setting the <StyledCode>playing</StyledCode> property to true.\n      </StyledIntroduction>\n      <Block style={{ height: 200 }}>\n        <PixiAnimatedSpriteExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/PixiAnimatedSpriteExample.tsx'} />\n      </Block>\n      <Block style={{ height: 200 }}>\n        <PixiAnimatedSpriteColorsExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/PixiAnimatedSpriteColorsExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={props} />\n      <StyledSectionTitle>Event Callbacks</StyledSectionTitle>\n      <PropsTable props={events} />\n    </>\n  );\n};\n\nexport default PixiAnimatedSpriteDoc;\n","import { Block, Icon } from 'framework7-react';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getComponentUrl, getPageChildren, Pages } from '../pages';\nimport { StyledTable, StyledLink, StyledTableContainer } from './StyledComponents';\n\ntype PropDefinition = [string, boolean, string, string, string];\nexport type PropsDefinition = PropDefinition[];\n\nexport const StyledCode = styled.code`\n  background: rgba(100, 100, 100, 0.5);\n  padding: 0 5px;\n  border-radius: 2px;\n`;\n\nexport const parseCode = (text: string) => {\n  const parts = text.split(/`/);\n\n  return parts.map((content, index) => {\n    if (index % 2 === 0) {\n      return <span key={index}>{content}</span>;\n    } else {\n      return <StyledCode key={index}>{content}</StyledCode>;\n    }\n  });\n};\n\nlet pageUrlMap: Map<Pages, string>;\n\nconst getTypeLinks = async () => {\n  if (!pageUrlMap) {\n    const pages = await getPageChildren(Pages.Types);\n    const map = new Map<Pages, string>();\n\n    for (let i = 0; i < pages.length; i++) {\n      const path = await getComponentUrl(pages[i]);\n\n      map.set(pages[i], `#${path}`);\n    }\n\n    pageUrlMap = map;\n  }\n\n  return pageUrlMap;\n};\n\nconst PropsTable: React.FC<{ props: PropsDefinition }> = ({ props = [] }) => {\n  const [types, setTypes] = useState<Map<Pages, string>>();\n\n  useEffect(() => {\n    getTypeLinks().then(setTypes);\n  }, []);\n\n  return (\n    <Block>\n      <StyledTableContainer>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Required</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.map((prop, index) => {\n              return (\n                <tr key={index}>\n                  <td>{prop[0]}</td>\n                  <td>{prop[1] ? <Icon f7={'checkmark_alt'} size={14} /> : null}</td>\n                  <td>\n                    <code>\n                      {types && types.has(prop[2] as Pages) ? (\n                        <StyledLink text={prop[2]} href={types.get(prop[2] as Pages)} external />\n                      ) : (\n                        prop[2]\n                      )}\n                    </code>\n                  </td>\n                  <td>\n                    <code>{prop[3]}</code>\n                  </td>\n                  <td>{parseCode(prop[4])}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </StyledTable>\n      </StyledTableContainer>\n    </Block>\n  );\n};\n\nexport default PropsTable;\n","import React, { useEffect, useState } from 'react';\nimport { getComponentUrl, Pages } from '../pages';\nimport { StyledComponentLink } from './StyledComponents';\n\nconst ComponentLink: React.FC<{ page: Pages; className?: string }> = ({ page, className }) => {\n  const [url, setUrl] = useState<string | undefined>();\n\n  useEffect(() => {\n    getComponentUrl(page).then((url) => setUrl(`#${url}`));\n  }, [page]);\n\n  return <StyledComponentLink className={className} href={url} key={page} text={page} external />;\n};\n\nexport default ComponentLink;\n","import { Block } from 'framework7-react';\nimport React, { useReducer } from 'react';\nimport { PixiCanvas, PixiTilingSprite, PixiSprite } from 'pixi-reactive';\nimport CodeViewer from '../CodeViewer';\nimport PropsTable, { PropsDefinition } from '../PropsTable';\nimport { StyledTitle, StyledSectionTitle, StyledIntroduction } from '../StyledComponents';\n\nconst props: PropsDefinition = [\n  ['id', false, 'string', 'null', 'Canvas identifier'],\n  [\n    'overflow',\n    false,\n    'Overflow',\n    'Overflow.All',\n    'Whether HTML elements hovering the canvas should be seen if they overflow their container'\n  ],\n  ['className', false, 'string', 'null', 'CSS class name applied to the canvas element'],\n  ['width', false, 'number', 'null', 'Width of the canvas'],\n  ['height', false, 'number', 'null', 'Height of the canvas'],\n  ['retina', false, 'boolean', 'false', 'Whether to use a @2x canvas'],\n  ['speed', false, 'number', '1', 'Speed at which the rendered animations will run'],\n  ['background', false, 'number', 'null', 'Set the background color of the canvas, if empty the canvas will be transparent'],\n  ['textures', false, 'LoadResourceType', '[]', 'List of textures that will be loaded by the Pixi Loader']\n];\n\nexport const renderEvents: PropsDefinition = [\n  ['onResize', false, 'function', 'null', 'Callback executed when the canvas is resized'],\n  ['onUpdate', false, 'function', 'null', 'Callback executed at every animation frame'],\n  ['onAfterRender', false, 'function', 'null', 'Callback executed after a frame has been rendered on the canvas']\n];\n\nconst events: PropsDefinition = [\n  ...renderEvents,\n  ['onInteractionStart', false, 'function', 'null', 'Callback executed when an interaction is started (touch or mouse)'],\n  ['onInteractionMove', false, 'function', 'null', 'Callback executed when the pointer is moved'],\n  ['onInteractionEnd', false, 'function', 'null', 'Callback executed when the interaction is terminated'],\n]\nconst textures = {\n  galaxy: './static/assets/galaxy.png',\n  stars: './static/assets/slow-stars.png',\n  ship: './static/assets/spaceship.png'\n};\n\ntype Space = {\n  galaxyTileX: number;\n  starsTileX: number;\n  direction: boolean;\n  shipY: number;\n};\n\nconst updateScene = (state: Space): Space => {\n  let newDirection = state.direction;\n\n  if ((state.direction && state.shipY <= 60) || (!state.direction && state.shipY >= 240)) {\n    newDirection = !state.direction;\n  }\n  return {\n    galaxyTileX: state.galaxyTileX - 0.1,\n    starsTileX: state.starsTileX - 0.5,\n    direction: newDirection,\n    shipY: newDirection ? state.shipY - 0.5 : state.shipY + 0.5\n  };\n};\n\nexport const PixiCanvasExample: React.FC = () => {\n  const [state, update] = useReducer(updateScene, {\n    galaxyTileX: 0,\n    starsTileX: 0,\n    direction: false,\n    shipY: 150\n  });\n\n  return (\n    <PixiCanvas height={300} textures={textures} onUpdate={update}>\n      <PixiTilingSprite texture={'galaxy'} tileX={state.galaxyTileX} />\n      <PixiTilingSprite texture={'stars'} tileX={state.starsTileX} />\n      <PixiSprite texture={'ship'} x={30} y={state.shipY} anchorY={0.5} />\n    </PixiCanvas>\n  );\n};\n\nconst PixiCanvasDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>PixiCanvas</StyledTitle>\n      <StyledIntroduction>\n        The PixiCanvas is the base component that generates the canvas element, initialise the PIXI Renderer, load the textures and creates\n        all the React contexts. It is also responsible of starting the animation loop and render all the elements onto the stage.\n      </StyledIntroduction>\n      <Block>\n        <PixiCanvasExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/PixiCanvasExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={props} />\n      <StyledSectionTitle>Event Callbacks</StyledSectionTitle>\n      <PropsTable props={events} />\n    </>\n  );\n};\n\nexport default PixiCanvasDoc;\n","import { Block } from 'framework7-react';\nimport React from 'react';\nimport { PixiCanvas, PixiTilingSprite, PixiSprite, PixiContainer } from 'pixi-reactive';\nimport CodeViewer from '../CodeViewer';\nimport PropsTable, { PropsDefinition } from '../PropsTable';\nimport { StyledTitle, StyledSectionTitle, StyledIntroduction } from '../StyledComponents';\nimport { renderEvents } from './PixiCanvas';\n\nexport const transformProps: PropsDefinition = [\n  ['x', false, 'number', '0', 'X coordinate of the object relative to the parent'],\n  ['y', false, 'number', '0', 'X coordinate of the object relative to the parent'],\n  ['pivotX', false, 'number', '0', 'Relative coordinate on the X axis of the point around which the object rotate'],\n  ['pivotY', false, 'number', '0', 'Relative coordinate on the Y axis of the point around which the object rotate'],\n  ['rotation', false, 'number', '0', 'Rotation of the object in radians'],\n  ['scaleX', false, 'number', '1', 'Scale of the object on the X axis'],\n  ['scaleY', false, 'number', '1', 'Scale of the object on the Y axis'],\n  ['skewX', false, 'number', '0', 'Skew transform value on the X axis'],\n  ['skewY', false, 'number', '0', 'Skew transform value on the Y axis']\n];\n\nexport const genericProps: PropsDefinition = [\n  ...transformProps,\n  ['alpha', false, 'number', '1', 'Value between 0 and 1 that defines the object opacity'],\n  ['angle', false, 'number', '0', 'Rotation of the object in degrees'],\n  ['buttonMode', false, 'boolean', 'false', 'When set to true it makes the element clickable and set the cursor as pointer'],\n  ['cursor', false, 'CursorType', 'CursorType.None', 'Cursor used while hovering on the object'],\n  ['interactive', false, 'boolean', 'false', 'Whether the object is interactive (react to pointer events)'],\n  ['name', false, 'string', 'null', 'Name of the object'],\n  ['visible', false, 'boolean', 'true', 'Whether the object is visible or not'],\n  ['zIndex', false, 'number', '0', 'Order in which the object is rendered (only works if the parent `sortableChildren` is set to `true`)'],\n  ['width', false, 'number', 'null', 'Width of the object'],\n  ['height', false, 'number', 'null', 'Height of the object'],\n  ['sortableChildren', false, 'boolean', 'false', 'Whether the children of the element can be sorted through the `zIndex`'],\n  ['filterArea', false, 'Area', 'null', 'Area over which the filters will be applied'],\n  ['hitArea', false, 'Area', 'null', 'Area of the element that will be used to test for interactions']\n];\n\nexport const genericEvents: PropsDefinition = [\n  ...renderEvents,\n  ['onClick', false, 'function', 'null', 'Callback executed when the `click` event is triggered'],\n  ['onMouseDown', false, 'function', 'null', 'Callback executed when the `mousedown` event is triggered'],\n  ['onMouseMove', false, 'function', 'null', 'Callback executed when the `mousemove` event is triggered'],\n  ['onMouseOut', false, 'function', 'null', 'Callback executed when the `mouseout` event is triggered'],\n  ['onMouseOver', false, 'function', 'null', 'Callback executed when the `mouseover` event is triggered'],\n  ['onMouseUp', false, 'function', 'null', 'Callback executed when the `mouseup` event is triggered'],\n  ['onMouseUpOutside', false, 'function', 'null', 'Callback executed when the `mouseupoutside` event is triggered'],\n  ['onPointerCancel', false, 'function', 'null', 'Callback executed when the `pointercancel` event is triggered'],\n  ['onPointerDown', false, 'function', 'null', 'Callback executed when the `pointerdown` event is triggered'],\n  ['onPointerMove', false, 'function', 'null', 'Callback executed when the `pointermove` event is triggered'],\n  ['onPointerOut', false, 'function', 'null', 'Callback executed when the `pointerout` event is triggered'],\n  ['onPointerOver', false, 'function', 'null', 'Callback executed when the `pointerover` event is triggered'],\n  ['onPointerTap', false, 'function', 'null', 'Callback executed when the `pointertap` event is triggered'],\n  ['onPointerUp', false, 'function', 'null', 'Callback executed when the `pointerup` event is triggered'],\n  ['onPointerUpOutside', false, 'function', 'null', 'Callback executed when the `pointerupoutside` event is triggered'],\n  ['onRemovedFrom', false, 'function', 'null', 'Callback executed when the `removedfrom` event is triggered'],\n  ['onRightClick', false, 'function', 'null', 'Callback executed when the `rightclick` event is triggered'],\n  ['onRightDown', false, 'function', 'null', 'Callback executed when the `rightdown` event is triggered'],\n  ['onRightUp', false, 'function', 'null', 'Callback executed when the `rightup` event is triggered'],\n  ['onRightUpOutside', false, 'function', 'null', 'Callback executed when the `rightupoutside` event is triggered'],\n  ['onTap', false, 'function', 'null', 'Callback executed when the `tap` event is triggered'],\n  ['onTouchCancel', false, 'function', 'null', 'Callback executed when the `touchcancel` event is triggered'],\n  ['onTouchEnd', false, 'function', 'null', 'Callback executed when the `touchend` event is triggered'],\n  ['onTouchEndOutside', false, 'function', 'null', 'Callback executed when the `touchendoutside` event is triggered'],\n  ['onTouchMove', false, 'function', 'null', 'Callback executed when the `touchmove` event is triggered'],\n  ['onTouchStart', false, 'function', 'null', 'Callback executed when the `touchstart` event is triggered'],\n  ['onAdded', false, 'function', 'null', 'Callback executed the object is added to a parent element or into the rendered stage'],\n  ['onRemoved', false, 'function', 'null', \"Callback executed the element is removed from it' parent\"],\n  ['onChildAdded', false, 'function', 'null', 'Callback executed a child element is added']\n];\n\nconst textures = {\n  galaxy: './static/assets/galaxy.png',\n  ship: './static/assets/spaceship.png'\n};\n\nconst PixiContainerExample: React.FC = () => {\n  return (\n    <PixiCanvas textures={textures}>\n      <PixiTilingSprite texture={'galaxy'} />\n      <PixiContainer x={50} y={50}>\n        <PixiSprite texture={'ship'} />\n        <PixiContainer x={100} y={100}>\n          <PixiSprite texture={'ship'} />\n        </PixiContainer>\n      </PixiContainer>\n    </PixiCanvas>\n  );\n};\n\nconst PixiContainerDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>PixiContainer</StyledTitle>\n      <StyledIntroduction>\n        The PixiContainer, as the name suggests, is an object used co contain other objects. Any transformation (position, rotation and\n        scale) are applied to all its children and allow to create logical groups that can be handled together.\n      </StyledIntroduction>\n      <Block style={{ height: 300 }}>\n        <PixiContainerExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/PixiContainerExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={genericProps} />\n      <StyledSectionTitle>Event Callbacks</StyledSectionTitle>\n      <PropsTable props={genericEvents} />\n    </>\n  );\n};\n\nexport default PixiContainerDoc;\n","import { Block } from 'framework7-react';\nimport React from 'react';\nimport { PixiCanvas, PixiSprite, PixiTexture, PixiTilingSprite } from 'pixi-reactive';\nimport { Pages } from '../../pages';\nimport CodeViewer from '../CodeViewer';\nimport ComponentLink from '../ComponentLink';\nimport PropsTable, { PropsDefinition, StyledCode } from '../PropsTable';\nimport { StyledTitle, StyledSectionTitle, StyledIntroduction } from '../StyledComponents';\nimport { genericEvents, genericProps } from './PixiContainer';\n\nexport const spriteProps: PropsDefinition = [\n  [\n    'alignX',\n    false,\n    'number',\n    '0',\n    'Value between 0 and 1 that defines where the object is aligned on the X axis (0 aligns it on the left and 1 on the right)'\n  ],\n  [\n    'alignY',\n    false,\n    'number',\n    '0',\n    'Value between 0 and 1 that defines where the object is aligned on theYX axis (0 aligns it on the top and 1 on the bottom)'\n  ],\n  ['anchorX', false, 'number', '0', 'Anchor on the X axis where the texture starts to be rendered (it is overridden by `alignX`)'],\n  ['anchorY', false, 'number', '0', 'Anchor on the Y axis where the texture starts to be rendered (it is overridden by `alignY`)'],\n  ['blendMode', false, 'BlendModes', 'BlendModes.Normal', 'Mode used to blend textures together'],\n  [\n    'roundPixels',\n    false,\n    'boolean',\n    'false',\n    'Whether to round the pixel values when the scale causes decimal values on position and size. It makes rendering faster'\n  ],\n  ['tint', false, 'number', '0xffffff', 'Tint applied onto the texture'],\n  ['texture', false, 'string', 'null', 'Name of the texture to be used'],\n  ...genericProps\n];\n\nconst textures = {\n  galaxy: './static/assets/galaxy.png',\n  sheet: './static/assets/spritesheet.json'\n};\n\nconst PixiSpriteExample: React.FC = () => {\n  return (\n    <PixiCanvas textures={textures}>\n      <PixiTilingSprite texture={'galaxy'} />\n      <PixiSprite alignY={0.5} x={20}>\n        <PixiTexture src={'./static/assets/spaceship.png'} />\n      </PixiSprite>\n      <PixiSprite texture={'enemy-ship'} alignY={0.5} alignX={1} x={-20} />\n    </PixiCanvas>\n  );\n};\n\nconst PixiSpriteDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>PixiSprite</StyledTitle>\n      <StyledIntroduction>\n        The PixiSprite is the component that will render a texture onto the canvas. It is possible to use a texture preloaded by the{' '}\n        <ComponentLink page={Pages.TextureContext} /> by using the <StyledCode>texture</StyledCode> property or by adding a{' '}\n        <ComponentLink page={Pages.PixiTexture} /> as a child node. <br />\n        If you are familiar with the PIXI properties, there are a couple of extra properties added by this library. Both{' '}\n        <StyledCode>alignX</StyledCode> and <StyledCode>alignX</StyledCode> are not original properties but it is something I've found quite\n        useful during the years as a game developer. These 2 properties will allow you to align the sprite on the X and Y axis. If you'll\n        use the <StyledCode>x</StyledCode> and/or <StyledCode>y</StyledCode> properties, they will work as relative position translations\n        from the aligned central position.\n      </StyledIntroduction>\n      <Block style={{ height: 300 }}>\n        <PixiSpriteExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/PixiSpriteExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={spriteProps} />\n      <StyledSectionTitle>Event Callbacks</StyledSectionTitle>\n      <PropsTable props={genericEvents} />\n    </>\n  );\n};\n\nexport default PixiSpriteDoc;\n"],"sourceRoot":""}