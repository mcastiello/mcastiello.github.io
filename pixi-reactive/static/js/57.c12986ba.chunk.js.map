{"version":3,"sources":["views/pages/SpeedContext.tsx","views/PropsTable.tsx","views/ComponentLink.tsx"],"names":["props","textures","galaxy","ship","StyledButton","styled","Link","StyledContainer","div","SpeedController","useContext","SpeedContext","play","pause","increase","decrease","speed","useState","running","setRunning","togglePlayPause","useCallback","style","display","iconOnly","iconF7","onClick","Ship","width","RenderingContext","elapsed","AnimationContext","positionReducer","position","delta","useReducer","updatePosition","useEffect","Math","round","texture","x","alignY","SpeedContextExample","SpeedContextDoc","page","Pages","PixiAnimatedSprite","height","src","pageUrlMap","StyledCode","code","getTypeLinks","a","getPageChildren","Types","pages","map","Map","i","length","getComponentUrl","path","set","PropsTable","types","setTypes","then","prop","index","key","f7","size","has","text","href","get","external","split","content","ComponentLink","className","url","setUrl"],"mappings":"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","file":"static/js/57.c12986ba.chunk.js","sourcesContent":["import { Block, Link } from 'framework7-react';\nimport { AnimationContext, PixiCanvas, PixiSprite, PixiTilingSprite, RenderingContext, SpeedContext } from 'pixi-reactive';\nimport React, { useCallback, useContext, useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components';\nimport { Pages } from '../../pages';\nimport CodeViewer from '../CodeViewer';\nimport ComponentLink from '../ComponentLink';\nimport PropsTable, { PropsDefinition, StyledCode } from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst props: PropsDefinition = [\n  ['speed', true, 'number', '1', 'Current speed of the animation'],\n  ['increase', true, 'function', '() => void', 'Double the current speed'],\n  ['decrease', true, 'function', '() => void', 'Halve the current speed'],\n  ['play', true, 'function', '() => void', 'Reset the current speed to 1'],\n  ['pause', true, 'function', '() => void', 'Set the current speed to 0'],\n  ['setSpeed', true, 'function', '(speed: number) => void', 'Set the speed to a specific value']\n];\n\nconst textures = {\n  galaxy: './static/assets/galaxy.png',\n  ship: './static/assets/spaceship.png'\n};\n\nconst StyledButton = styled(Link)`\n  color: white;\n  padding: 0 5px;\n`;\nconst StyledContainer = styled.div`\n  position: absolute;\n  bottom: -30px;\n  text-align: center;\n  width: 100%\n`;\n\n// Add the speed controller that allow us to accelerate or slow down the animation\nconst SpeedController: React.FC = () => {\n  const { play, pause, increase, decrease, speed } = useContext(SpeedContext);\n  const [running, setRunning] = useState(true);\n\n  const togglePlayPause = useCallback(() => {\n    if (running) {\n      pause();\n      setRunning(false);\n    } else {\n      play();\n      setRunning(true);\n    }\n  }, [running, play, pause]);\n\n  return (\n    <>\n      <StyledContainer>\n        <div style={{ display: 'absolute' }}>Speed: {speed}</div>\n        <StyledButton iconOnly iconF7={'backward_fill'} onClick={decrease} />\n        <StyledButton iconOnly iconF7={'playpause_fill'} onClick={togglePlayPause} />\n        <StyledButton iconOnly iconF7={'forward_fill'} onClick={increase} />\n      </StyledContainer>\n    </>\n  );\n};\n\n// The ship animation is now based on the elapsed time\nconst Ship: React.FC = () => {\n  const { width } = useContext(RenderingContext);\n  const { elapsed } = useContext(AnimationContext);\n  const positionReducer = useCallback((position, delta) => (position + delta) % (width + 300), [width]);\n  const [position, updatePosition] = useReducer(positionReducer, 0);\n\n  useEffect(() => {\n    const frameDuration = 1000 / 60;\n    const delta = Math.round((elapsed / frameDuration) * 10) / 10;\n    updatePosition(delta);\n  }, [elapsed]);\n\n  return <PixiSprite texture={'ship'} x={position - 150} alignY={0.5} />;\n};\n\nconst SpeedContextExample: React.FC = () => {\n  return (\n    <PixiCanvas textures={textures}>\n      <PixiTilingSprite texture={'galaxy'} />\n      <Ship />\n      <SpeedController />\n    </PixiCanvas>\n  );\n};\n\nconst SpeedContextDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>SpeedContext</StyledTitle>\n      <StyledIntroduction>\n        This context provides the instruments to alter the speed of the canvas rendering. This is achieved by changing the{' '}\n        <StyledCode>elapsed</StyledCode> property from the <ComponentLink page={Pages.AnimationContext} />. This means that it will only\n        affect those animations based on this parameter. Components like <ComponentLink page={Pages.PixiAnimatedSprite} /> are already based\n        on this, so they will be automatically affected.\n        <br />\n        This is mostly useful during debug, because it allows you to slow down animations and check every frame, or to accelerate the\n        execution to skip sequence of animations we're not interested in.\n        <br />\n        In the following example we'll refactor the <StyledCode>Ship</StyledCode> animation to use the <StyledCode>elapsed</StyledCode>{' '}\n        property, so that we can handle its speed using the context functions. Click the buttons below the canvas to see what happens.\n      </StyledIntroduction>\n      <Block style={{ height: 300 }}>\n        <SpeedContextExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/SpeedContextExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={props} />\n    </>\n  );\n};\n\nexport default SpeedContextDoc;\n","import { Block, Icon } from 'framework7-react';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getComponentUrl, getPageChildren, Pages } from '../pages';\nimport { StyledTable, StyledLink, StyledTableContainer } from './StyledComponents';\n\ntype PropDefinition = [string, boolean, string, string, string];\nexport type PropsDefinition = PropDefinition[];\n\nexport const StyledCode = styled.code`\n  background: rgba(100, 100, 100, 0.5);\n  padding: 0 5px;\n  border-radius: 2px;\n`;\n\nexport const parseCode = (text: string) => {\n  const parts = text.split(/`/);\n\n  return parts.map((content, index) => {\n    if (index % 2 === 0) {\n      return <span key={index}>{content}</span>;\n    } else {\n      return <StyledCode key={index}>{content}</StyledCode>;\n    }\n  });\n};\n\nlet pageUrlMap: Map<Pages, string>;\n\nconst getTypeLinks = async () => {\n  if (!pageUrlMap) {\n    const pages = await getPageChildren(Pages.Types);\n    const map = new Map<Pages, string>();\n\n    for (let i = 0; i < pages.length; i++) {\n      const path = await getComponentUrl(pages[i]);\n\n      map.set(pages[i], `#${path}`);\n    }\n\n    pageUrlMap = map;\n  }\n\n  return pageUrlMap;\n};\n\nconst PropsTable: React.FC<{ props: PropsDefinition }> = ({ props = [] }) => {\n  const [types, setTypes] = useState<Map<Pages, string>>();\n\n  useEffect(() => {\n    getTypeLinks().then(setTypes);\n  }, []);\n\n  return (\n    <Block>\n      <StyledTableContainer>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Required</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.map((prop, index) => {\n              return (\n                <tr key={index}>\n                  <td>{prop[0]}</td>\n                  <td>{prop[1] ? <Icon f7={'checkmark_alt'} size={14} /> : null}</td>\n                  <td>\n                    <code>\n                      {types && types.has(prop[2] as Pages) ? (\n                        <StyledLink text={prop[2]} href={types.get(prop[2] as Pages)} external />\n                      ) : (\n                        prop[2]\n                      )}\n                    </code>\n                  </td>\n                  <td>\n                    <code>{prop[3]}</code>\n                  </td>\n                  <td>{parseCode(prop[4])}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </StyledTable>\n      </StyledTableContainer>\n    </Block>\n  );\n};\n\nexport default PropsTable;\n","import React, { useEffect, useState } from 'react';\nimport { getComponentUrl, Pages } from '../pages';\nimport { StyledComponentLink } from './StyledComponents';\n\nconst ComponentLink: React.FC<{ page: Pages; className?: string }> = ({ page, className }) => {\n  const [url, setUrl] = useState<string | undefined>();\n\n  useEffect(() => {\n    getComponentUrl(page).then((url) => setUrl(`#${url}`));\n  }, [page]);\n\n  return <StyledComponentLink className={className} href={url} key={page} text={page} external />;\n};\n\nexport default ComponentLink;\n"],"sourceRoot":""}