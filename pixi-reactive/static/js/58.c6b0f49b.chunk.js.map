{"version":3,"sources":["views/pages/UseTweenAnimation.tsx","views/PropsTable.tsx","views/CodeViewer.tsx","views/ComponentLink.tsx"],"names":["props","textures","galaxy","ship","Ship","width","useContext","RenderingContext","position","useTweenAnimation","loop","controls","useEffect","texture","x","state","alignY","UseTweenAnimationExample","UseTweenAnimationDoc","page","Pages","TweenContext","style","height","src","pageUrlMap","StyledCode","styled","code","getTypeLinks","a","getPageChildren","Types","pages","map","Map","i","length","getComponentUrl","path","set","PropsTable","useState","types","setTypes","then","prop","index","f7","size","has","text","href","get","external","split","content","SyntaxHighlighter","registerLanguage","tsx","CodeViewer","children","setCode","fetch","response","darcula","language","showLineNumbers","ComponentLink","className","url","setUrl"],"mappings":"qQAUMA,EAAyB,CAC7B,CAAC,QAAQ,EAAM,kBAAmB,OAAQ,oFAC1C,CAAC,MAAM,EAAM,kBAAmB,OAAQ,yFACxC,CAAC,YAAY,EAAM,SAAU,OAAQ,mCACrC,CAAC,QAAQ,EAAO,SAAU,gBAAiB,0CAC3C,CACE,cACA,EACA,SACA,OACA,qKAIF,CAAC,WAAW,EAAO,WAAY,OAAQ,kEAGnCC,EAAW,CACfC,OAAQ,6BACRC,KAAM,iCAGKC,EAAiB,WAAO,IAC3BC,EAAUC,qBAAWC,MAArBF,MACFG,EAAWC,aAAmB,IAAKJ,EAAQ,IAAK,KAE9CK,EADaF,EAAbG,SACAD,KAIR,OAFAE,oBAAUF,EAAM,CAACA,IAEV,cAAC,IAAD,CAAYG,QAAS,OAAQC,EAAGN,EAASO,MAAOC,OAAQ,MAG3DC,EAAqC,WACzC,OACE,eAAC,IAAD,CAAYhB,SAAUA,EAAtB,UACE,cAAC,IAAD,CAAkBY,QAAS,WAC3B,cAACT,EAAD,QAiCSc,UA5BwB,WACrC,OACE,qCACE,cAAC,IAAD,gCACA,eAAC,IAAD,uCAC2B,cAAC,IAAD,kCAD3B,uEAGE,eAAC,IAAD,WACE,cAAC,IAAD,8CACA,uBAFF,KAIE,uBACA,cAAC,IAAD,8CARJ,sDAUqD,cAAC,IAAD,CAAeC,KAAMC,IAAMC,eAVhF,OAYA,cAAC,IAAD,CAAOC,MAAO,CAAEC,OAAQ,KAAxB,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYO,IAAK,qDAEnB,cAAC,IAAD,yBACA,cAAC,IAAD,CAAYxB,MAAOA,S,yTClElB,IAkBHyB,EAlBSC,EAAaC,IAAOC,KAAV,KAoBjBC,EAAY,uCAAG,kCAAAC,EAAA,yDACdL,EADc,iCAEGM,YAAgBX,IAAMY,OAFzB,OAEXC,EAFW,OAGXC,EAAM,IAAIC,IAEPC,EAAI,EALI,YAKDA,EAAIH,EAAMI,QALT,iCAMIC,YAAgBL,EAAMG,IAN1B,OAMTG,EANS,OAQfL,EAAIM,IAAIP,EAAMG,GAAd,WAAsBG,IARP,QAKiBH,IALjB,uBAWjBX,EAAaS,EAXI,iCAcZT,GAdY,4CAAH,qDAkEHgB,IAjD0C,SAAC,GAAoB,IAAD,IAAjBzC,aAAiB,MAAT,GAAS,IACjD0C,qBADiD,mBACpEC,EADoE,KAC7DC,EAD6D,KAO3E,OAJAhC,qBAAU,WACRiB,IAAegB,KAAKD,KACnB,IAGD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,gCACE,+BACE,sCACA,0CACA,sCACA,yCACA,kDAGJ,gCACG5C,EAAMkC,KAAI,SAACY,EAAMC,GAChB,OACE,+BACE,6BAAKD,EAAK,KACV,6BAAKA,EAAK,GAAK,cAAC,IAAD,CAAME,GAAI,gBAAiBC,KAAM,KAAS,OACzD,6BACE,+BACGN,GAASA,EAAMO,IAAIJ,EAAK,IACvB,cAAC,IAAD,CAAYK,KAAML,EAAK,GAAIM,KAAMT,EAAMU,IAAIP,EAAK,IAAcQ,UAAQ,IAEtER,EAAK,OAIX,6BACE,+BAAOA,EAAK,OAEd,8BArEQK,EAqEOL,EAAK,GApEtBK,EAAKI,MAAM,KAEZrB,KAAI,SAACsB,EAAST,GACzB,OAAIA,EAAQ,IAAM,EACT,+BAAmBS,GAART,GAEX,cAACrB,EAAD,UAAyB8B,GAART,WA+CLA,GAtDA,IAACI,gB,uFCV1BM,IAAkBC,iBAAiB,MAAOC,KAwB3BC,IAtBoD,SAAC,GAA4B,IAA1BpC,EAAyB,EAAzBA,IAAyB,IAApBqC,gBAAoB,MAAT,GAAS,IACrEnB,mBAASmB,GAD4D,mBACtFjC,EADsF,KAChFkC,EADgF,KAe7F,OAZAlD,qBAAU,WACJY,GACFuC,MAAMvC,GAAKqB,MAAK,SAAAmB,GAAQ,OAAIA,EAASb,UAAQN,MAAK,SAAAM,GAAI,OAAIW,EAAQX,QAEnE,CAAC3B,IAEJZ,qBAAU,WACJiD,GACFC,EAAQD,KAET,CAACA,IAGF,cAAC,IAAD,CAAmBvC,MAAO2C,IAASC,SAAU,MAAOC,iBAAe,EAAnE,SACGvC,M,4ECVQwC,IAVsD,SAAC,GAAyB,IAAvBjD,EAAsB,EAAtBA,KAAMkD,EAAgB,EAAhBA,UAAgB,EACtE3B,qBADsE,mBACrF4B,EADqF,KAChFC,EADgF,KAO5F,OAJA3D,qBAAU,WACR0B,YAAgBnB,GAAM0B,MAAK,SAACyB,GAAD,OAASC,EAAO,IAAD,OAAKD,SAC9C,CAACnD,IAEG,cAAC,IAAD,CAAqBkD,UAAWA,EAAWjB,KAAMkB,EAAgBnB,KAAMhC,EAAMmC,UAAQ,GAA1BnC","file":"static/js/58.c6b0f49b.chunk.js","sourcesContent":["import { Block } from 'framework7-react';\nimport { PixiCanvas, PixiSprite, PixiTilingSprite, RenderingContext } from 'pixi-reactive';\nimport { useTweenAnimation } from 'pixi-reactive-tween';\nimport React, { useContext, useEffect } from 'react';\nimport { Pages } from '../../pages';\nimport CodeViewer from '../CodeViewer';\nimport ComponentLink from '../ComponentLink';\nimport PropsTable, { PropsDefinition, StyledCode } from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst props: PropsDefinition = [\n  ['from', true, 'object | number', 'null', 'Number or object with numeric properties used as starting point of the animation'],\n  ['to', true, 'object | number', 'null', 'Number or object with numeric properties used define the destination of the animation'],\n  ['duration', true, 'number', 'null', 'Duration of the tween animation'],\n  ['ease', false, 'Easing', 'Easing.Linear', 'Easing effect applied to the animation'],\n  [\n    'easeParams',\n    false,\n    'string',\n    'null',\n    'Some easing effects require a few parameters ' +\n      '(please, refer to the GreenSock website for details). ' +\n      'Parameters can be added to the string and separated by a comma'\n  ],\n  ['onEvent', false, 'function', 'null', 'Callback executed when an event is triggered by the animation']\n];\n\nconst textures = {\n  galaxy: './static/assets/galaxy.png',\n  ship: './static/assets/spaceship.png'\n};\n\nexport const Ship: React.FC = () => {\n  const { width } = useContext(RenderingContext);\n  const position = useTweenAnimation(-150, width + 150, 5000);\n  const { controls } = position;\n  const { loop } = controls;\n\n  useEffect(loop, [loop]);\n\n  return <PixiSprite texture={'ship'} x={position.state} alignY={0.5} />;\n};\n\nconst UseTweenAnimationExample: React.FC = () => {\n  return (\n    <PixiCanvas textures={textures}>\n      <PixiTilingSprite texture={'galaxy'} />\n      <Ship />\n    </PixiCanvas>\n  );\n};\n\nconst UseTweenAnimationDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>useTweenAnimation</StyledTitle>\n      <StyledIntroduction>\n        This hook is part of the <StyledCode>pixi-reactive-tween</StyledCode> and will generate a tween animation. It can be installed as\n        follow:\n        <Block>\n          <StyledCode>npm install pixi-reactive-tween</StyledCode>\n          <br />\n          or\n          <br />\n          <StyledCode>yarn add pixi-reactive-tween</StyledCode>\n        </Block>\n        It will return a reference to the type used by the <ComponentLink page={Pages.TweenContext} />.\n      </StyledIntroduction>\n      <Block style={{ height: 300 }}>\n        <UseTweenAnimationExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/UseTweenAnimationExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Parameters</StyledSectionTitle>\n      <PropsTable props={props} />\n    </>\n  );\n};\n\nexport default UseTweenAnimationDoc;\n","import { Block, Icon } from 'framework7-react';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getComponentUrl, getPageChildren, Pages } from '../pages';\nimport { StyledTable, StyledLink, StyledTableContainer } from './StyledComponents';\n\ntype PropDefinition = [string, boolean, string, string, string];\nexport type PropsDefinition = PropDefinition[];\n\nexport const StyledCode = styled.code`\n  background: rgba(100, 100, 100, 0.5);\n  padding: 0 5px;\n  border-radius: 2px;\n`;\n\nexport const parseCode = (text: string) => {\n  const parts = text.split(/`/);\n\n  return parts.map((content, index) => {\n    if (index % 2 === 0) {\n      return <span key={index}>{content}</span>;\n    } else {\n      return <StyledCode key={index}>{content}</StyledCode>;\n    }\n  });\n};\n\nlet pageUrlMap: Map<Pages, string>;\n\nconst getTypeLinks = async () => {\n  if (!pageUrlMap) {\n    const pages = await getPageChildren(Pages.Types);\n    const map = new Map<Pages, string>();\n\n    for (let i = 0; i < pages.length; i++) {\n      const path = await getComponentUrl(pages[i]);\n\n      map.set(pages[i], `#${path}`);\n    }\n\n    pageUrlMap = map;\n  }\n\n  return pageUrlMap;\n};\n\nconst PropsTable: React.FC<{ props: PropsDefinition }> = ({ props = [] }) => {\n  const [types, setTypes] = useState<Map<Pages, string>>();\n\n  useEffect(() => {\n    getTypeLinks().then(setTypes);\n  }, []);\n\n  return (\n    <Block>\n      <StyledTableContainer>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Required</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.map((prop, index) => {\n              return (\n                <tr key={index}>\n                  <td>{prop[0]}</td>\n                  <td>{prop[1] ? <Icon f7={'checkmark_alt'} size={14} /> : null}</td>\n                  <td>\n                    <code>\n                      {types && types.has(prop[2] as Pages) ? (\n                        <StyledLink text={prop[2]} href={types.get(prop[2] as Pages)} external />\n                      ) : (\n                        prop[2]\n                      )}\n                    </code>\n                  </td>\n                  <td>\n                    <code>{prop[3]}</code>\n                  </td>\n                  <td>{parseCode(prop[4])}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </StyledTable>\n      </StyledTableContainer>\n    </Block>\n  );\n};\n\nexport default PropsTable;\n","import React, { ReactText, useEffect, useState } from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nconst CodeViewer: React.FC<{src?: string, children?: ReactText}> = ({ src, children = '' }) => {\n  const [code, setCode] = useState(children);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src).then(response => response.text()).then(text => setCode(text));\n    }\n  }, [src]);\n\n  useEffect(() => {\n    if (children) {\n      setCode(children);\n    }\n  }, [children]);\n\n  return (\n    <SyntaxHighlighter style={darcula} language={'tsx'} showLineNumbers>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeViewer;\n","import React, { useEffect, useState } from 'react';\nimport { getComponentUrl, Pages } from '../pages';\nimport { StyledComponentLink } from './StyledComponents';\n\nconst ComponentLink: React.FC<{ page: Pages; className?: string }> = ({ page, className }) => {\n  const [url, setUrl] = useState<string | undefined>();\n\n  useEffect(() => {\n    getComponentUrl(page).then((url) => setUrl(`#${url}`));\n  }, [page]);\n\n  return <StyledComponentLink className={className} href={url} key={page} text={page} external />;\n};\n\nexport default ComponentLink;\n"],"sourceRoot":""}