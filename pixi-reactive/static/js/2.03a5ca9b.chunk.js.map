{"version":3,"sources":["views/CodeViewer.tsx","../../src/contexts/AnimationContext.ts","../../src/props/PixiSpriteProps.ts","../../src/props/PixiTilingSpriteProps.ts","../../src/contexts/ParentContext.ts","../../src/contexts/RenderingContext.ts","../../src/contexts/ShapeTextureContext.ts","../../src/contexts/ShapeStyleContext.ts","../../src/contexts/GraphicsContext.ts","../../src/contexts/SpeedContext.ts","../../src/contexts/TextureContext.ts","../../src/contexts/PointerContext.ts","../../src/contexts/EffectContext.ts","../../src/contexts/PointsContext.ts","../../src/props/PixiAnimatedSpriteProps.ts","../../src/props/PixiFilterProps.ts","../../src/props/PixiGraphicsProps.ts","../../src/types/AnimationContextTypes.ts","../../src/types/RenderingContextTypes.ts","../../src/types/SpeedContextTypes.ts","../../src/types/GenericTypes.ts","../../src/types/EventTypes.ts","../../src/types/BlendModesTypes.ts","../../src/types/GraphicsTypes.ts","../../src/types/TextStyleTypes.ts","../../src/types/EffectTypes.ts","../../src/types/PointerContextType.ts","../../src/hooks/genericHooks.ts","../../src/hooks/propHooks.ts","../../src/hooks/contextHooks.ts","../../src/components/shapes/Holes.tsx","../../src/components/PixiCanvas.tsx","../../src/components/PixiDisplayObject.tsx","../../src/components/PixiHtmlContainer.tsx","../../src/components/PixiContainer.tsx","../../src/components/PixiTexture.tsx","../../src/components/PixiRenderTexture.tsx","../../src/components/PixiSprite.tsx","../../src/components/PixiGraphics.tsx","../../src/components/PixiTilingSprite.tsx","../../src/components/PixiAnimatedSprite.tsx","../../src/components/PixiText.tsx","../../src/components/PixiMask.tsx","../../src/components/shapes/ShapeTexture.tsx","../../src/components/shapes/LineStyle.tsx","../../src/components/shapes/FillStyle.tsx","../../src/components/shapes/Shape.tsx","../../src/components/shapes/Rectangle.tsx","../../src/components/shapes/Circle.tsx","../../src/components/shapes/Ellipse.tsx","../../src/components/shapes/Star.tsx","../../src/components/shapes/Polygon.tsx","../../src/components/shapes/Point.tsx","../../src/components/shapes/Arc.tsx","../../src/components/shapes/BezierCurve.tsx","../../src/components/shapes/QuadraticCurve.tsx","../../src/components/shapes/ArcCurve.tsx","../../src/components/shapes/Path.tsx","../../src/filters/PixiFilter.tsx","../../src/filters/AlphaFilter.tsx","../../src/filters/BlurFilter.tsx","../../src/filters/FXAAFilter.tsx","../../src/filters/NoiseFilter.tsx","../../src/filters/ColorMatrixFilter.tsx","../../src/filters/effects/BlackAndWhiteEffect.tsx","../../src/filters/effects/BrightnessEffect.tsx","../../src/filters/effects/BrowniEffect.tsx","../../src/filters/effects/ColorToneEffect.tsx","../../src/filters/effects/ContrastEffect.tsx","../../src/filters/effects/DesaturateEffect.tsx","../../src/filters/effects/GreyScaleEffect.tsx","../../src/filters/effects/HueEffect.tsx","../../src/filters/effects/KodachromeEffect.tsx","../../src/filters/effects/LsdEffect.tsx","../../src/filters/effects/NegativeEffect.tsx","../../src/filters/effects/NightEffect.tsx","../../src/filters/effects/PolaroidEffect.tsx","../../src/filters/effects/PredatorEffect.tsx","../../src/filters/effects/SaturateEffect.tsx","../../src/filters/effects/SepiaEffect.tsx","../../src/filters/effects/TechnicolorEffect.tsx","../../src/filters/effects/ToBGREffect.tsx","../../src/filters/effects/VintageEffect.tsx"],"names":["SyntaxHighlighter","registerLanguage","tsx","CodeViewer","src","children","useState","code","setCode","useEffect","fetch","then","response","text","style","darcula","language","showLineNumbers","AnimationContext","React","frameId","elapsed","fps","averageFps","minFps","maxFps","history","defaultParentContext","parent","x","y","width","height","top","left","ParentContext","defaultRenderingContext","update","getTexture","renderId","stage","RenderingContext","ShapeTextureContext","setMatrix","setTexture","ShapeStyleContext","setFillStyle","setLineStyle","setHoles","GraphicsContext","drawShape","removeShape","initialSpeedState","speed","SpeedContext","play","pause","increase","decrease","setSpeed","TextureContext","PointerContext","over","EffectContext","updateEffect","removeEffect","PointsContext","points","addPoint","removePoint","isSprite","element","SpriteProps","TilingSpriteProps","isAnimatedSprite","item","FilterProps","GraphicsProps","AnimationActionType","RenderingContextAction","SpeedContextAction","CursorType","Overflow","GenericProps","SpecialKeys","KeyboardActionType","Events","BlendModes","BlendModesMap","Map","PIXI","LineJoin","LineCap","ShapeAction","Shapes","PointAction","TextAlign","TextGradient","TextBaseline","TextWhiteLine","FontStyle","FontVariant","FontWeight","defaultTextStyle","align","breakWords","dropShadow","dropShadowAlpha","dropShadowAngle","Math","dropShadowBlur","dropShadowColor","dropShadowDistance","fill","fillGradientType","fillGradientStops","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","letterSpacing","lineHeight","lineJoin","miterLimit","padding","stroke","strokeThickness","textBaseline","trim","whiteSpace","wordWrap","wordWrapWidth","leading","EffectType","EffectActionType","useId","id","v4","state","setState","useRelativePosition","setLeft","setTop","anchor","setAnchor","updateKeyboardPressList","list","action","Array","useKeyboard","keys","keyList","setKeyList","useReducer","keyPressList","updateKeyPressList","reset","useCallback","type","index","value","JSON","onKeyUpdate","key","event","updateValue","keyValid","altValid","controlValid","shiftValid","onKeyDown","onKeyUp","window","useFilter","useContext","useLoadedTexture","textureName","context","texture","loadedTexture","useTexture","currentScale","sprite","useTextureUpdate","emptyIndex","propsToMap","map","Object","prop","props","useUpdatedProps","updatedProperties","setUpdatedProperties","updatedMap","propMap","newValue","getMapUpdate","useGenericProps","rectangle","updateGenericProps","useSpriteProps","updateSpriteProps","useGraphicsProps","updateGraphicsProps","graphics","useAlignedPosition","parentWidth","parentHeight","alignX","alignY","useTilingSpriteProps","updateTilingSpriteProps","useFilterProps","updateFilterProps","filter","useEvent","callback","PointerContextActionType","cleanName","name","textureLoaded","loadedResources","isTouchEvent","usePointerContext","offset","setOffset","reducer","onInteractionMove","pointerContext","triggerUpdatePosition","multiplier","retina","updateMousePosition","offsetX","offsetY","updateTouchPosition","touch","clientX","clientY","StartOver","EndOver","updatePosition","isMouseEvent","pointerStart","point","onInteractionStart","pointerEnd","onInteractionEnd","pointerOver","pointerCancel","useShapeTextureContext","matrix","usePointsContext","pointMap","pointId","dispatch","useMemo","values","defaultStyle","position","right","margin","isDesktop","PixiCanvas","className","textures","background","overflow","All","filterArea","onUpdate","onAfterRender","onResize","canvasId","speedContext","Increase","Decrease","Play","Pause","useSpeedContext","textureContext","resources","loader","cleanedName","resource","frames","resourceName","count","existingResource","console","useTextureContext","animationContext","initialState","latestFps","fpsHistory","MAX_HISTORY_SIZE","a","useAnimationContext","renderingContext","canvasReference","canvas","setCanvas","renderer","setRenderer","Update","render","Render","reference","document","newRenderer","view","transparent","antialias","useRenderingContext","genericParentContext","containerStyle","setContainerStyle","childrenContainerStyle","setChildrenContainerStyle","parentContext","setParentContext","newStyle","newChildrenStyle","onTouchMove","undefined","onTouchStart","onTouchEnd","onTouchCancel","onPointerEnter","onPointerOver","onPointerDown","onPointerUp","onPointerOut","onPointerCancel","onPointerLeave","onPointerMove","canvasWidth","canvasHeight","PixiDisplayObject","useElement","setX","setY","setWidth","setHeight","transform","setTransform","useParentContext","alpha","angle","buttonMode","cursor","None","interactive","rotation","visible","zIndex","pivotX","pivotY","scaleX","scaleY","skewX","skewY","sortableChildren","SORTABLE_CHILDREN","hitArea","onClick","onMouseDown","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onMouseUpOutside","onPointerTap","onPointerUpOutside","onRemovedFrom","onRightClick","onRightDown","onRightUp","onRightUpOutside","onTap","onTouchEndOutside","onAdded","onRemoved","onChildAdded","callbacks","useDisplayObjectEvents","PixiHtmlContainer","setStyle","active","setActive","display","PixiContainer","container","PixiTexture","onLoad","textureId","loadCallback","PixiRenderTexture","parentRenderContext","parentUpdate","newTexture","PixiSprite","anchorX","anchorY","blendMode","Normal","roundPixels","tint","definition","lastPoint","i","updateGraphics","cap","join","color","holeLastPoint","hole","PixiGraphics","shapes","shape","shapeMap","PixiTilingSprite","tileWidth","setTileWidth","tileHeight","setTileHeight","clampMargin","tileX","tileY","tileScaleX","tileScaleY","uvRespectAnchor","PixiAnimatedSprite","playing","resetOnStop","currentFrame","onAnimationComplete","setFrameId","initialFrame","setInitialFrame","frameCount","setTextures","setCount","textureList","frameList","useFrames","frame","initialTime","duration","isNaN","time","Reset","useFrameAnimation","PixiText","String","isTextureMode","PixiMask","enabled","ShapeTexture","newMatrix","useTransformMatrix","LineStyle","alignment","Butt","Miter","native","shapeTextureContext","FillStyle","Shape","params","styleContext","line","holes","useShapeStyleContext","Rectangle","borderRadius","setParams","shapeType","setShapeType","Circle","radius","Ellipse","Star","innerRadius","noParams","Polygon","pointsContext","Point","setPoint","Arc","startAngle","endAngle","anticlockwise","BezierCurve","xFrom","yFrom","xTo","yTo","controlX","controlY","controlX2","controlY2","QuadraticCurve","ArcCurve","Path","HoleAction","holesReducer","Holes","holeState","updateHoles","addHole","removeHole","PixiFilter","autoFit","resolution","FILTER_RESOLUTION","effects","setEffects","AlphaFilter","BlurFilter","blur","blurX","blurY","quality","repeatEdgePixels","FXAAFilter","FXAA_SEED","noise","seed","ColorMatrixFilter","effectMap","effectData","multiply","updateColorMatrix","BlackAndWhiteEffect","effect","BlackAndWhite","BrightnessEffect","amount","BrowniEffect","Browni","ColorToneEffect","desaturation","toned","lightColor","darkColor","ContrastEffect","DesaturateEffect","Desaturate","GreyScaleEffect","HueEffect","KodachromeEffect","Kodachrome","LsdEffect","Lsd","NegativeEffect","Negative","NightEffect","PolaroidEffect","Polaroid","PredatorEffect","SaturateEffect","SepiaEffect","Sepia","TechnicolorEffect","Technicolor","ToBGREffect","ToBGR","VintageEffect","Vintage"],"mappings":"uLAKAA,IAAkBC,iBAAiB,MAAOC,KAyB3BC,IAvBoD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAyB,IAApBC,gBAAoB,MAAT,GAAS,IACrEC,mBAASD,GAD4D,mBACtFE,EADsF,KAChFC,EADgF,KAe7F,OAZAC,qBAAU,WACJL,GACFM,MAAMN,GAAKO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAE,GAAI,OAAIL,EAAQK,QAEnE,CAACT,IAEJK,qBAAU,WACJJ,GACFG,EAAQH,KAET,CAACA,IAIF,kBAAC,IAAD,CAAmBS,MAAOC,IAASC,SAAU,MAAOC,iBAAe,GAChEV,K,6oFCtBP,ICgBA,ECPA,EFCaW,EAAmBC,kBAVsB,CACpDC,QADoD,EAEpDC,QAFoD,EAGpDC,IAHoD,EAIpDC,WAJoD,EAKpDC,OALoD,EAMpDC,OANoD,EAOpDC,QAAS,KGNEC,EAA0D,CACrEC,OAAQ,IAD6D,IAErEC,EAFqE,EAGrEC,EAHqE,EAIrEC,MAJqE,EAKrEC,OALqE,EAMrEC,IANqE,EAOrEC,KAAM,GAGKC,EAAgBhB,kBAAtB,GCVDiB,EAAgD,CACpDC,OAAQ,wBACRC,WAAY,aACZP,MAHoD,EAIpDC,OAJoD,EAKpDO,SALoD,EAMpDC,MAAO,IAAI,EAAJ,GAGIC,EAAmBtB,kBAAzB,GCLMuB,EAAsBvB,kBALkB,CACnDwB,UAAW,wBACXC,WAAY,0BCIDC,EAAoB1B,kBANgB,CAC/C2B,aAAc,wBACdC,aAAc,wBACdC,SAAU,0BCECC,EAAkB9B,kBALqB,CAClD+B,UAAW,wBACXC,YAAa,0BCOFC,EAAgC,CAC3CC,MAAO,GAGIC,EAAenC,kBAbkB,CAC5CkC,MAD4C,EAE5CE,KAAM,wBACNC,MAAO,wBACPC,SAAU,wBACVC,SAAU,wBACVC,SAAU,0BCNCC,EAAiBzC,kBAAvB,ICAM0C,EAAiB,kBAAwC,CAAEhC,EAAF,EAAQC,EAAR,EAAcgC,MAAM,ICA7EC,EAAgB,kBAAuC,CAClEC,aAAc,wBACdC,aAAc,0BCIHC,EAAgB/C,kBANmB,CAC9CgD,OAD8C,GAE9CC,SAAU,wBACVC,YAAa,0BXHFC,EAAW,SAACC,GACvB,OAAOA,EAAP,WAeF,SAAYC,GACVA,oBACAA,oBACAA,4BAHF,CAAYA,MAAZ,KCPA,SAAYC,GACVA,4BACAA,gBACAA,gBACAA,0BACAA,0BACAA,oCANF,CAAYA,MAAZ,KWRO,ICOP,ECJA,ECQA,ECJA,ECFA,ECPA,EAuCA,EAOA,EAwDA,EAkGA,ECpMA,ECJA,EREaC,EAAmB,SAACC,GAC/B,QAAWA,EAAX,WCMF,SAAYC,GACVA,oBACAA,wBACAA,oBACAA,oBACAA,0BACAA,gBACAA,cACAA,gBACAA,gBACAA,oBACAA,sCACAA,gBACAA,cAbF,CAAYA,MAAZ,KCJA,SAAYC,GACVA,wBACAA,cAFF,CAAYA,MAAZ,KCQA,SAAYC,GACVA,2BACAA,qBAFF,CAAYA,MAAZ,KCJA,SAAYC,GACVA,uBACAA,uBAFF,CAAYA,MAAZ,KCFA,SAAYC,GACVA,2BACAA,2BACAA,qBACAA,mBACAA,iBALF,CAAYA,MAAZ,KCPA,SAAYC,GACVA,cACAA,oBACAA,cACAA,6BACAA,cACAA,oBACAA,sBACAA,cACAA,cACAA,wBACAA,cACAA,+BACAA,gBACAA,cACAA,cACAA,mBACAA,2BACAA,cACAA,sBACAA,yBACAA,yBACAA,yBACAA,yBACAA,wBACAA,yBACAA,wBACAA,8BACAA,8BACAA,8BACAA,8BACAA,6BACAA,+BACAA,yCACAA,yCACAA,mBACAA,qBApCF,CAAYA,MAAZ,KAuCA,SAAYC,GACVA,mBACAA,+BACAA,2BACAA,iBAJF,CAAYA,MAAZ,KAOA,SAAYC,GACVA,gBACAA,gBACAA,0BACAA,kBACAA,4BACAA,cACAA,kBACAA,kBACAA,sBACAA,kBACAA,kBACAA,gBACAA,gBACAA,oBACAA,QACAA,QACAA,kBACAA,gBACAA,kBACAA,sCACAA,0BACAA,oBAtBF,CAAYA,MAAZ,KAwDA,SAAYC,GACVA,YACAA,sBACAA,sBACAA,oBACAA,UACAA,kBACAA,gBACAA,cACAA,oBACAA,0BACAA,gBACAA,gBACAA,kBACAA,0BACAA,gBACAA,YACAA,YACAA,wBACAA,wBACAA,0BACAA,oBACAA,YACAA,cACAA,sBACAA,kBACAA,wBACAA,gBACAA,cACAA,gBACAA,YACAA,kBACAA,sBACAA,gBACAA,kBACAA,gBACAA,cACAA,cACAA,kBACAA,gBACAA,cACAA,kBACAA,4BACAA,kBACAA,oBACAA,cACAA,kBACAA,cACAA,gBACAA,cACAA,gBACAA,kBACAA,kBACAA,oBACAA,UACAA,UACAA,UACAA,UACAA,UACAA,UACAA,UACAA,UACAA,UACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,gBACAA,gBACAA,gBACAA,gBACAA,oBACAA,aACAA,aACAA,sBACAA,YACAA,kBACAA,sBACAA,wBArFF,CAAYA,MAAZ,KAkGA,SAAYC,GACVA,iBACAA,qBAFF,CAAYA,MAAZ,KCpMA,SAAYC,GACVA,gBACAA,wBACAA,wBACAA,sBACAA,wBACAA,oBACAA,kCACAA,gCACAA,4BACAA,4BACAA,0BACAA,4BACAA,0BACAA,wBACAA,sCACAA,4BACAA,0BACAA,wBACAA,oBACAA,kCACAA,YACAA,4BACAA,sBACAA,oCACAA,wBACAA,0BACAA,gBACAA,oBACAA,0BA7BF,CAAYA,MAAZ,KCJA,SAAYC,GACVA,iBACAA,uBACAA,qBACAA,6BACAA,+BACAA,uBACAA,+BACAA,yBACAA,qBACAA,uBACAA,0BACAA,sBACAA,8BACAA,8BACAA,kBACAA,0BACAA,gCACAA,4BACAA,oBACAA,wBACAA,8BACAA,0BACAA,gCACAA,wBACAA,8BACAA,8BACAA,0BACAA,sBACAA,wBACAA,0BACAA,4BACAA,kBAhCF,CAAYA,MAAZ,KAmCO,IChBP,EAMA,EAMA,EAgBA,EAiIA,EChLA,EAMA,EAKA,EASA,EAMA,EAMA,EAKA,EFFaC,EAAgB,IAAIC,IAAwB,CACvD,CAACF,EAAD,IAAiBG,IADsC,KAEvD,CAACH,EAAD,OAAoBG,IAFmC,SAGvD,CAACH,EAAD,MAAmBG,IAHoC,OAIvD,CAACH,EAAD,UAAuBG,IAJgC,YAKvD,CAACH,EAAD,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","file":"static/js/2.03a5ca9b.chunk.js","sourcesContent":["import React, { ReactText, useEffect, useState } from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nconst CodeViewer: React.FC<{src?: string, children?: ReactText}> = ({ src, children = '' }) => {\n  const [code, setCode] = useState(children);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src).then(response => response.text()).then(text => setCode(text));\n    }\n  }, [src]);\n\n  useEffect(() => {\n    if (children) {\n      setCode(children);\n    }\n  }, [children]);\n\n  return (\n    // @ts-ignore\n    <SyntaxHighlighter style={darcula} language={'tsx'} showLineNumbers>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeViewer;\n","import { AnimationContextType } from '../types';\nimport React from 'react';\n\nconst defaultAnimationContext: AnimationContextType = {\n  frameId: 0,\n  elapsed: 0,\n  fps: 0,\n  averageFps: 0,\n  minFps: 0,\n  maxFps: 0,\n  history: []\n};\n\nexport const AnimationContext = React.createContext(defaultAnimationContext);\n","import { GenericEventType, GenericType, PropValue } from '../types';\nimport { GraphicsPropsType } from './PixiGraphicsProps';\n\nexport const isSprite = (element: PIXI.DisplayObject): element is PIXI.Sprite => {\n  return element.isSprite;\n};\n\nexport type UpdatableTextureType = {\n  texture?: string;\n};\n\nexport type SpritePropsType = {\n  alignX?: number;\n  alignY?: number;\n  anchorX?: number;\n  anchorY?: number;\n  roundPixels?: boolean;\n};\n\nexport enum SpriteProps {\n  AnchorX = 'anchorX',\n  AnchorY = 'anchorY',\n  RoundPixels = 'roundPixels'\n}\n\nexport type SpritePropsMap = Map<SpriteProps, PropValue>;\n\nexport type PixiSpriteProps = GenericType & GenericEventType & GraphicsPropsType & SpritePropsType & UpdatableTextureType;\n","import { PropValue } from '../types';\nimport { PixiSpriteProps } from './PixiSpriteProps';\n\nexport type TilingSpritePropsType = {\n  clampMargin?: number;\n  tileX?: number;\n  tileY?: number;\n  tileScaleX?: number;\n  tileScaleY?: number;\n  uvRespectAnchor?: boolean;\n};\n\nexport enum TilingSpriteProps {\n  ClampMargin = 'clampMargin',\n  TileX = 'tileX',\n  TileY = 'tileY',\n  TileScaleX = 'tileScaleX',\n  TileScaleY = 'tileScaleY',\n  UvRespectAnchor = 'uvRespectAnchor'\n}\n\nexport type TilingSpritePropsMap = Map<TilingSpriteProps, PropValue>;\n\nexport type PixiTilingSpriteProps = PixiSpriteProps & TilingSpritePropsType;\n","import React from 'react';\nimport { ParentContextType } from '../types';\nimport * as PIXI from 'pixi.js';\n\nexport const defaultParentContext: ParentContextType<PIXI.Container> = {\n  parent: new PIXI.Container(),\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0\n};\n\nexport const ParentContext = React.createContext(defaultParentContext);\n","import * as PIXI from 'pixi.js';\nimport { RenderingContextType } from '../types';\nimport React from 'react';\n\nconst defaultRenderingContext: RenderingContextType = {\n  update: () => null,\n  getTexture: () => undefined,\n  width: 0,\n  height: 0,\n  renderId: 0,\n  stage: new PIXI.Container()\n};\n\nexport const RenderingContext = React.createContext(defaultRenderingContext);\n","import { ShapeTextureType } from '../types';\nimport React from 'react';\n\nconst defaultShapeTextureContext: ShapeTextureType = {\n  setMatrix: () => null,\n  setTexture: () => null\n};\n\nexport const ShapeTextureContext = React.createContext(defaultShapeTextureContext);\n","import { ShapeStyleType } from '../types';\nimport React from 'react';\n\nconst defaultShapeStyleContext: ShapeStyleType = {\n  setFillStyle: () => null,\n  setLineStyle: () => null,\n  setHoles: () => null\n};\n\nexport const ShapeStyleContext = React.createContext(defaultShapeStyleContext);\n","import { GraphicsContextType } from '../types';\nimport React from 'react';\n\nconst defaultGraphicsContext: GraphicsContextType = {\n  drawShape: () => null,\n  removeShape: () => null\n};\n\nexport const GraphicsContext = React.createContext(defaultGraphicsContext);\n","import { SpeedContextType, SpeedState } from '../types';\nimport React from 'react';\n\nconst defaultSpeedContext: SpeedContextType = {\n  speed: 1,\n  play: () => null,\n  pause: () => null,\n  increase: () => null,\n  decrease: () => null,\n  setSpeed: () => null\n};\n\nexport const initialSpeedState: SpeedState = {\n  speed: 1\n};\n\nexport const SpeedContext = React.createContext(defaultSpeedContext);\n","import React from 'react';\nimport { TextureContextType } from '../types';\n\nexport const TextureContext = React.createContext<TextureContextType>({});\n","import React from 'react';\nimport { PointerContextType } from '../types/PointerContextType';\n\nexport const PointerContext = React.createContext<PointerContextType>({ x: 0, y: 0, over: false });\n","import React from 'react';\nimport { EffectContextType } from '../types';\n\nexport const EffectContext = React.createContext<EffectContextType>({\n  updateEffect: () => null,\n  removeEffect: () => null\n});\n","import React from 'react';\nimport { PointsContextType } from '../types';\n\nconst defaultPointsContext: PointsContextType = {\n  points: [],\n  addPoint: () => null,\n  removePoint: () => null\n};\n\nexport const PointsContext = React.createContext(defaultPointsContext);\n","import * as PIXI from 'pixi.js';\nimport { EventListener } from '../types';\nimport { PixiSpriteProps } from './PixiSpriteProps';\n\nexport const isAnimatedSprite = (item: PIXI.Container): item is PIXI.AnimatedSprite => {\n  return !!((item as unknown) as PIXI.AnimatedSprite).textures;\n};\n\nexport type AnimatedSpriteProps = {\n  frames?: string[] | string;\n  playing?: boolean;\n  resetOnStop?: boolean;\n  currentFrame?: number;\n  fps?: number;\n  onAnimationComplete?: EventListener;\n};\n\nexport type PixiAnimatedSpriteProps = PixiSpriteProps & AnimatedSpriteProps;\n","import * as PIXI from 'pixi.js';\nimport { BlendModes, PropValue } from '../types';\n\nexport type AbstractFilterProps = {\n  autoFit?: boolean;\n  blendMode?: BlendModes;\n  enabled?: boolean;\n  padding?: number;\n  resolution?: number;\n};\n\nexport enum FilterProps {\n  AutoFit = 'autoFit',\n  BlendMode = 'blendMode',\n  Enabled = 'enabled',\n  Padding = 'padding',\n  Resolution = 'resolution',\n  Alpha = 'alpha',\n  Blur = 'blur',\n  BlurX = 'blurX',\n  BlurY = 'blurY',\n  Quality = 'quality',\n  RepeatEdgePixels = 'repeatEdgePixels',\n  Noise = 'noise',\n  Seed = 'seed'\n}\n\nexport type FilterPropsMap = Map<FilterProps, PropValue>;\n\nexport type PixiFilterProps<T extends PIXI.Filter> = AbstractFilterProps & {\n  item: T;\n};\n\nexport type BlurFilterProps = AbstractFilterProps & {\n  blur?: number;\n  blurX?: number;\n  blurY?: number;\n  quality?: number;\n  repeatEdgePixels?: boolean;\n};\n\nexport type AlphaFilterProps = AbstractFilterProps & {\n  alpha?: number;\n};\n\nexport type NoiseFilterProps = AbstractFilterProps & {\n  noise?: number;\n  seed?: number;\n};\n\nexport type AllFilterProps = AbstractFilterProps | BlurFilterProps | AlphaFilterProps | NoiseFilterProps;\n","import { BlendModes, GenericEventType, GenericType, PropValue } from '../types';\n\nexport type GraphicsPropsType = {\n  blendMode?: BlendModes;\n  tint?: number;\n};\n\nexport enum GraphicsProps {\n  BlendMode = 'blendMode',\n  Tint = 'tint'\n}\n\nexport type GraphicsPropsMap = Map<GraphicsProps, PropValue>;\n\nexport type PixiGraphicsProps = GenericType & GenericEventType & GraphicsPropsType;\n","export type AnimationContextType = {\n  fps: number;\n  averageFps: number;\n  maxFps: number;\n  minFps: number;\n  frameId: number;\n  elapsed: number;\n  history: number[];\n};\n\nexport type AnimationState = {\n  time: number;\n  frame: number;\n};\n\nexport enum AnimationActionType {\n  Progress,\n  Reset\n}\n\nexport type AnimationAction = {\n  type: AnimationActionType;\n  value?: number;\n};\n","import * as PIXI from 'pixi.js';\n\nexport type RenderingContextType = {\n  update: () => void;\n  width: number;\n  height: number;\n  stage: PIXI.Container;\n  renderId: number;\n  getTexture: <T extends PIXI.DisplayObject>(container: T, width: number, height: number) => PIXI.RenderTexture | undefined;\n};\n\nexport enum RenderingContextAction {\n  Update,\n  Render\n}\n\nexport type RenderingContextState = {\n  width: number;\n  height: number;\n  renderId: number;\n  update: boolean;\n};\n\nexport type RenderAction = {\n  type: RenderingContextAction;\n};\n","export type SpeedContextType = {\n  speed: number;\n  increase: () => void;\n  decrease: () => void;\n  setSpeed: (value: number) => void;\n  pause: () => void;\n  play: () => void;\n};\n\nexport enum SpeedContextAction {\n  Increase,\n  Decrease,\n  Pause,\n  Play,\n  Set\n}\n\nexport type SpeedAction = {\n  type: SpeedContextAction;\n  value?: number;\n};\n\nexport type SpeedState = {\n  speed: number;\n};\n","import { Area } from './GraphicsTypes';\n\nexport enum CursorType {\n  Auto = 'auto',\n  Default = 'default',\n  None = 'none',\n  ContextMenu = 'context-menu',\n  Help = 'help',\n  Pointer = 'pointer',\n  Progress = 'progress',\n  Wait = 'wait',\n  Cell = 'cell',\n  CrossHair = 'crosshair',\n  Text = 'text',\n  VerticalText = 'vertical-text',\n  Alias = 'alias',\n  Copy = 'copy',\n  Move = 'move',\n  NoDrop = 'no-drop',\n  NotAllowed = 'not-allowed',\n  Grab = 'grab',\n  Grabbing = 'grabbing',\n  AllScroll = 'all-scroll',\n  ColResize = 'col-resize',\n  RowResize = 'row-resize',\n  NorthResize = 'n-resize',\n  EastResize = 'e-resize',\n  SouthResize = 's-resize',\n  WestResize = 'w-resize',\n  NorthEastResize = 'ne-resize',\n  NorthWestResize = 'nw-resize',\n  SouthEastResize = 'se-resize',\n  SouthWestResize = 'sw-resize',\n  EastWestResize = 'ew-resize',\n  NorthSouthResize = 'ns-resize',\n  NorthEastSouthWestResize = 'nesw-resize',\n  NorthWestSouthEastResize = 'nwse-resize',\n  ZoomIn = 'zoom-in',\n  ZoomOut = 'zoom-out'\n}\n\nexport enum Overflow {\n  None,\n  Horizontal,\n  Vertical,\n  All\n}\n\nexport enum GenericProps {\n  Alpha = 'alpha',\n  Angle = 'angle', // Rotation in degrees\n  ButtonMode = 'buttonMode',\n  Cursor = 'cursor',\n  Interactive = 'interactive',\n  Name = 'name',\n  PivotX = 'pivotX',\n  PivotY = 'pivotY',\n  Rotation = 'rotation', // Rotation in radians\n  ScaleX = 'scaleX',\n  ScaleY = 'scaleY',\n  SkewX = 'skewX',\n  SkewY = 'skewY',\n  Visible = 'visible',\n  X = 'x',\n  Y = 'y',\n  ZIndex = 'zIndex',\n  Width = 'width',\n  Height = 'height',\n  SortableChildren = 'sortableChildren',\n  FilterArea = 'filterArea',\n  HitArea = 'hitArea'\n}\n\nexport type PropValue = boolean | string | number | Area | undefined;\nexport type GenericPropsMap = Map<GenericProps, PropValue>;\n\nexport type TransformType = {\n  x?: number;\n  y?: number;\n  pivotX?: number;\n  pivotY?: number;\n  scaleX?: number;\n  scaleY?: number;\n  rotation?: number; // Rotation in radians\n  skewX?: number;\n  skewY?: number;\n};\n\nexport type GenericType = TransformType & {\n  alpha?: number;\n  angle?: number; // Rotation in degrees\n  buttonMode?: boolean;\n  cursor?: CursorType;\n  interactive?: boolean;\n  name?: string;\n  visible?: boolean;\n  zIndex?: number;\n  width?: number;\n  height?: number;\n  sortableChildren?: boolean;\n  filterArea?: Area;\n  hitArea?: Area;\n};\n\nexport enum SpecialKeys {\n  Alt = 'Alt',\n  AltGraph = 'AltGraph',\n  CapsLock = 'CapsLock',\n  Control = 'Control',\n  Fn = 'Fn',\n  FnLock = 'FnLock',\n  Hyper = 'Hyper',\n  Meta = 'Meta',\n  NumLock = 'NumLock',\n  ScrollLock = 'ScrollLock',\n  Shift = 'Shift',\n  Super = 'Super',\n  Symbol = 'Symbol',\n  SymbolLock = 'SymbolLock',\n  Enter = 'Enter',\n  Tab = 'Tab',\n  Space = ' ',\n  ArrowDown = 'ArrowDown',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  ArrowUp = 'ArrowUp',\n  End = 'End',\n  Home = 'Home',\n  PageDown = 'PageDown',\n  PageUp = 'PageUp',\n  Backspace = 'Backspace',\n  Clear = 'Clear',\n  Copy = 'Copy',\n  CrSel = 'CrSel',\n  Cut = 'Cut',\n  Delete = 'Delete',\n  EraseEof = 'EraseEof',\n  ExSel = 'ExSel',\n  Insert = 'Insert',\n  Paste = 'Paste',\n  Redo = 'Redo',\n  Undo = 'Undo',\n  Accept = 'Accept',\n  Again = 'Again',\n  Attn = 'Attn',\n  Cancel = 'Cancel',\n  ContextMenu = 'ContextMenu',\n  Escape = 'Escape',\n  Execute = 'Execute',\n  Find = 'Find',\n  Finish = 'Finish',\n  Help = 'Help',\n  Pause = 'Pause',\n  Play = 'Play',\n  Props = 'Props',\n  Select = 'Select',\n  ZoomIn = 'ZoomIn',\n  ZoomOut = 'ZoomOut',\n  F1 = 'F1',\n  F2 = 'F2',\n  F3 = 'F3',\n  F4 = 'F4',\n  F5 = 'F5',\n  F6 = 'F6',\n  F7 = 'F7',\n  F8 = 'F8',\n  F9 = 'F9',\n  F10 = 'F10',\n  F11 = 'F11',\n  F12 = 'F12',\n  F13 = 'F13',\n  F14 = 'F14',\n  F15 = 'F15',\n  F16 = 'F16',\n  F17 = 'F17',\n  F18 = 'F18',\n  F19 = 'F19',\n  F20 = 'F20',\n  Soft1 = 'Soft1',\n  Soft2 = 'Soft2',\n  Soft3 = 'Soft3',\n  Soft4 = 'Soft4',\n  Decimal = 'Decimal',\n  Key11 = '11',\n  Key12 = '12',\n  Multiply = 'Multiply',\n  Add = 'Add',\n  Divide = 'Divide',\n  Subtract = 'Subtract',\n  Separator = 'Separator'\n}\n\nexport type Key =\n  | string\n  | {\n      key: string;\n      alt?: boolean;\n      control?: boolean;\n      shift?: boolean;\n    };\n\n\nexport enum KeyboardActionType {\n  Set,\n  Reset\n}\n\nexport type KeyboardAction = {\n  type: KeyboardActionType;\n  value: boolean;\n  index: number;\n};\n","import { GenericEventType } from './GenericEventTypes';\n\nexport type EventListener = (...args: any[]) => void;\n\nexport type EventsType = GenericEventType;\n\nexport enum Events {\n  Click = 'click',\n  MouseDown = 'mousedown',\n  MouseMove = 'mousemove',\n  MouseOut = 'mouseout',\n  MouseOver = 'mouseover',\n  MouseUp = 'mouseup',\n  MouseUpOutside = 'mouseupoutside',\n  PointerCancel = 'pointercancel',\n  PointerDown = 'pointerdown',\n  PointerMove = 'pointermove',\n  PointerOut = 'pointerout',\n  PointerOver = 'pointerover',\n  PointerTap = 'pointertap',\n  PointerUp = 'pointerup',\n  PointerUpOutside = 'pointerupoutside',\n  RemovedFrom = 'removedfrom',\n  RightClick = 'rightclick',\n  RightDown = 'rightdown',\n  RightUp = 'rightup',\n  RightUpOutside = 'rightupoutside',\n  Tap = 'tap',\n  TouchCancel = 'touchcancel',\n  TouchEnd = 'touchend',\n  TouchEndOutside = 'touchendoutside',\n  TouchMove = 'touchmove',\n  TouchStart = 'touchstart',\n  Added = 'added',\n  Removed = 'removed',\n  ChildAdded = 'childAdded'\n}\n","import * as PIXI from 'pixi.js';\n\nexport enum BlendModes {\n  Add,\n  AddNpm,\n  Color,\n  ColorBurn,\n  ColorDodge,\n  Darken,\n  Difference,\n  DstAtop,\n  DstIn,\n  DstOut,\n  DstOver,\n  Erase,\n  Exclusion,\n  HardLight,\n  Hue,\n  Lighten,\n  Luminosity,\n  Multiply,\n  None,\n  Normal,\n  NormalNpm,\n  Overlay,\n  Saturation,\n  Screen,\n  ScreenNpm,\n  SoftLight,\n  SrcAtop,\n  SrcIn,\n  SrcOut,\n  SrcOver,\n  Subtract,\n  Xor\n}\n\nexport const BlendModesMap = new Map<BlendModes, number>([\n  [BlendModes.Add, PIXI.BLEND_MODES.ADD],\n  [BlendModes.AddNpm, PIXI.BLEND_MODES.ADD_NPM],\n  [BlendModes.Color, PIXI.BLEND_MODES.COLOR],\n  [BlendModes.ColorBurn, PIXI.BLEND_MODES.COLOR_BURN],\n  [BlendModes.ColorDodge, PIXI.BLEND_MODES.COLOR_DODGE],\n  [BlendModes.Darken, PIXI.BLEND_MODES.DARKEN],\n  [BlendModes.Difference, PIXI.BLEND_MODES.DIFFERENCE],\n  [BlendModes.DstAtop, PIXI.BLEND_MODES.DST_ATOP],\n  [BlendModes.DstIn, PIXI.BLEND_MODES.DST_IN],\n  [BlendModes.DstOut, PIXI.BLEND_MODES.DST_OUT],\n  [BlendModes.DstOver, PIXI.BLEND_MODES.DST_OVER],\n  [BlendModes.Erase, PIXI.BLEND_MODES.ERASE],\n  [BlendModes.Exclusion, PIXI.BLEND_MODES.EXCLUSION],\n  [BlendModes.HardLight, PIXI.BLEND_MODES.HARD_LIGHT],\n  [BlendModes.Hue, PIXI.BLEND_MODES.HUE],\n  [BlendModes.Lighten, PIXI.BLEND_MODES.LIGHTEN],\n  [BlendModes.Luminosity, PIXI.BLEND_MODES.LUMINOSITY],\n  [BlendModes.Multiply, PIXI.BLEND_MODES.MULTIPLY],\n  [BlendModes.None, PIXI.BLEND_MODES.NONE],\n  [BlendModes.Normal, PIXI.BLEND_MODES.NORMAL],\n  [BlendModes.NormalNpm, PIXI.BLEND_MODES.NORMAL_NPM],\n  [BlendModes.Overlay, PIXI.BLEND_MODES.OVERLAY],\n  [BlendModes.Saturation, PIXI.BLEND_MODES.SATURATION],\n  [BlendModes.Screen, PIXI.BLEND_MODES.SCREEN],\n  [BlendModes.ScreenNpm, PIXI.BLEND_MODES.SCREEN_NPM],\n  [BlendModes.SoftLight, PIXI.BLEND_MODES.SOFT_LIGHT],\n  [BlendModes.SrcAtop, PIXI.BLEND_MODES.SRC_ATOP],\n  [BlendModes.SrcIn, PIXI.BLEND_MODES.SRC_IN],\n  [BlendModes.SrcOut, PIXI.BLEND_MODES.SRC_OUT],\n  [BlendModes.SrcOver, PIXI.BLEND_MODES.SRC_OVER],\n  [BlendModes.Subtract, PIXI.BLEND_MODES.SUBTRACT],\n  [BlendModes.Xor, PIXI.BLEND_MODES.XOR]\n]);\n","import * as PIXI from 'pixi.js';\n\nexport type ShapeTextureType = {\n  texture?: PIXI.Texture;\n  matrix?: PIXI.Matrix;\n  setTexture: (texture?: PIXI.Texture) => void;\n  setMatrix: (matrix?: PIXI.Matrix) => void;\n};\n\nexport type FillDefinition = FillStyleType & TextureStyleType;\nexport type LineDefinition = LineStyleType & TextureStyleType;\n\nexport type ShapeStyleType = {\n  fill?: FillDefinition;\n  line?: LineDefinition;\n  holes?: ShapeType[];\n  setFillStyle: (fill?: FillDefinition) => void;\n  setLineStyle: (line?: LineDefinition) => void;\n  setHoles: (holes?: ShapeType[]) => void;\n};\n\nexport enum LineJoin {\n  Miter = 'miter',\n  Round = 'round',\n  Bevel = 'bevel'\n}\n\nexport enum LineCap {\n  Butt = 'butt',\n  Round = 'round',\n  Square = 'square'\n}\n\nexport enum ShapeAction {\n  UpdateShape,\n  RemoveShape\n}\n\nexport type GraphicsState = {\n  shapes: string[];\n  shapeMap: Map<string, DrawShapeDefinition>;\n};\n\nexport type ShapeActionType = {\n  type: ShapeAction;\n  id: string;\n  definition?: DrawShapeDefinition;\n};\n\nexport enum Shapes {\n  Path,\n  Circle,\n  Ellipse,\n  Polygon,\n  Rect,\n  RoundedRect,\n  Star,\n  Arc,\n  ArcCurve,\n  BezierCurve,\n  QuadraticCurve\n}\n\nexport type ShapeGenericType = {\n  name?: string;\n};\n\nexport type ShapeType = ShapeGenericType & {\n  type: Shapes;\n  params: number[];\n  points?: PIXI.Point[];\n};\n\ntype TextureStyleType = {\n  texture?: PIXI.Texture;\n  matrix?: PIXI.Matrix;\n};\n\nexport type FillStyleType = {\n  alpha?: number;\n  color?: number;\n};\n\nexport type LineStyleType = FillStyleType & {\n  alignment?: number;\n  cap?: LineCap;\n  join?: LineJoin;\n  miterLimit?: number;\n  native?: boolean;\n  width?: number;\n};\n\nexport type DrawShapeDefinition = ShapeType & {\n  id: string;\n  fill?: FillDefinition;\n  line?: LineDefinition;\n  holes?: ShapeType[];\n};\n\nexport type GraphicsContextType = {\n  drawShape: (definition: DrawShapeDefinition) => void;\n  removeShape: (id: string) => void;\n};\n\nexport type Coords = {\n  x: number;\n  y: number;\n};\n\nexport type Area = Coords & {\n  width: number;\n  height: number;\n};\n\nexport type RectangleType = ShapeGenericType &\n  Area & {\n    borderRadius?: number;\n  };\n\nexport type CircleType = ShapeGenericType &\n  Coords & {\n    radius: number;\n  };\n\nexport type QuadraticCurveType = ShapeGenericType & {\n  xFrom?: number;\n  yFrom?: number;\n  xTo: number;\n  yTo: number;\n  controlX: number;\n  controlY: number;\n};\n\nexport type ArcCurveType = QuadraticCurveType & {\n  radius: number\n};\n\nexport type BezierCurveType = QuadraticCurveType & {\n  controlX2: number;\n  controlY2: number;\n};\n\nexport type ArcType = ShapeGenericType &\n  CircleType &\n  Coords & {\n    startAngle: number;\n    endAngle: number;\n    anticlockwise?: boolean;\n  };\n\nexport type EllipseType = ShapeGenericType & Area;\n\nexport type RegularPolygonType = CircleType & {\n  sides?: number;\n  rotation?: number;\n};\n\nexport type StarType = CircleType & {\n  points?: number;\n  innerRadius?: number;\n  rotation?: number;\n};\n\nexport type PointProps = Coords & {\n  id?: string;\n};\n\nexport type PointsContextType = {\n  points: PIXI.Point[];\n  addPoint: (id: string, point: Coords) => void;\n  removePoint: (id: string) => void;\n};\n\nexport type PointsState = {\n  points: string[];\n  pointMap: Map<string, Coords>;\n};\n\nexport enum PointAction {\n  Add,\n  Remove\n}\n\nexport type PointActionType = {\n  type: PointAction;\n  id: string;\n  point?: Coords;\n};\n","import { LineJoin } from './GraphicsTypes';\n\nexport enum TextAlign {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right'\n}\n\nexport enum TextGradient {\n  LinearVertical,\n  LinearHorizontal\n}\n\nexport enum TextBaseline {\n  Alphabetic = 'alphabetic',\n  Top = 'top',\n  Hanging = 'hanging',\n  Middle = 'middle',\n  Ideographic = 'ideographic',\n  Bottom = 'bottom'\n}\n\nexport enum TextWhiteLine {\n  Normal = 'normal',\n  Pre = 'pre',\n  PreLine = 'pre-line'\n}\n\nexport enum FontStyle {\n  Normal = 'normal',\n  Italic = 'italic',\n  Oblique = 'oblique'\n}\n\nexport enum FontVariant {\n  Normal = 'normal',\n  SmallCaps = 'small-caps'\n}\n\nexport enum FontWeight {\n  Normal = 'Normal',\n  Bold = 'Bold',\n  Bolder = 'Bolder',\n  Lighter = 'Lighter',\n  W100 = '100',\n  W200 = '200',\n  W300 = '300',\n  W400 = '400',\n  W500 = '500',\n  W600 = '600',\n  W700 = '700',\n  W800 = '800',\n  W900 = '900'\n}\n\nexport type TextStyle = {\n  align?: TextAlign;\n  breakWords?: boolean;\n  dropShadow?: boolean;\n  dropShadowAlpha?: number;\n  dropShadowAngle?: number;\n  dropShadowBlur?: number;\n  dropShadowColor?: string;\n  dropShadowDistance?: number;\n  fill?: string;\n  fillGradientType?: TextGradient;\n  fillGradientStops?: string[];\n  fontFamily?: string;\n  fontSize?: number;\n  fontStyle?: FontStyle;\n  fontVariant?: FontVariant;\n  fontWeight?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  lineJoin?: LineJoin;\n  miterLimit?: number;\n  padding?: number;\n  stroke?: string;\n  strokeThickness?: number;\n  textBaseline?: TextBaseline;\n  trim?: boolean;\n  whiteSpace?: TextWhiteLine;\n  wordWrap?: boolean;\n  wordWrapWidth?: number;\n  leading?: number;\n};\n\nexport const defaultTextStyle: TextStyle = {\n  align: TextAlign.Left,\n  breakWords: false,\n  dropShadow: false,\n  dropShadowAlpha: 1,\n  dropShadowAngle: Math.PI / 6,\n  dropShadowBlur: 0,\n  dropShadowColor: 'black',\n  dropShadowDistance: 5,\n  fill: 'black',\n  fillGradientType: TextGradient.LinearHorizontal,\n  fillGradientStops: [],\n  fontFamily: 'Arial',\n  fontSize: 26,\n  fontStyle: FontStyle.Normal,\n  fontVariant: FontVariant.Normal,\n  fontWeight: FontWeight.Normal,\n  letterSpacing: 0,\n  lineHeight: 0,\n  lineJoin: LineJoin.Miter,\n  miterLimit: 10,\n  padding: 0,\n  stroke: 'black',\n  strokeThickness: 0,\n  textBaseline: TextBaseline.Alphabetic,\n  trim: false,\n  whiteSpace: TextWhiteLine.Pre,\n  wordWrap: false,\n  wordWrapWidth: 100,\n  leading: 0\n};\n","export enum EffectType {\n  BlackAndWhite,\n  Brightness,\n  Browni,\n  ColorTone,\n  Contrast,\n  Desaturate,\n  GreyScale,\n  Hue,\n  Kodachrome,\n  Lsd,\n  Negative,\n  Night,\n  Polaroid,\n  Predator,\n  Saturate,\n  Sepia,\n  Technicolor,\n  ToBGR,\n  Vintage\n}\n\nexport enum EffectActionType {\n  UpdateEffect,\n  RemoveEffect\n}\n\nexport type EffectValue = {\n  id: string;\n  multiply?: boolean;\n  effect?: EffectType;\n  params?: number[];\n  enabled?: boolean;\n};\n\nexport type EffectAction = {\n  type: EffectActionType;\n  value: EffectValue;\n};\n\nexport type EffectState = {\n  effects: string[];\n  effectMap: Map<string, EffectValue>;\n};\n\nexport type EffectContextType = {\n  updateEffect: (value: EffectValue) => void;\n  removeEffect: (id: string) => void;\n};\n","export type PointerContextType = {\n  x: number;\n  y: number;\n  over: boolean;\n};\n\nexport enum PointerContextActionType {\n  UpdatePosition,\n  StartOver,\n  EndOver\n}\nexport type PointerContextAction = {\n  type: PointerContextActionType;\n  x?: number;\n  y?: number;\n};\n","import * as PIXI from 'pixi.js';\nimport { useCallback, useContext, useEffect, useReducer, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { AnimationContext, ParentContext, RenderingContext, ShapeTextureContext, TextureContext } from '../contexts';\nimport { isAnimatedSprite, isSprite } from '../props';\nimport { AnimationAction, AnimationActionType, AnimationState, Key, KeyboardAction, KeyboardActionType } from '../types';\n\nexport const useId = (id?: string) => {\n  const [state, setState] = useState(v4());\n\n  useEffect(() => {\n    setState(id ? id : v4());\n  }, [id]);\n\n  return state;\n};\n\nexport const useElement = <T extends PIXI.Container>(item: T) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const [element] = useState(item);\n\n  useEffect(() => {\n    return () => {\n      element.destroy();\n    };\n  }, [element]);\n\n  useEffect(() => {\n    element.setParent(parent);\n    update();\n  }, [element, parent, update]);\n\n  return element;\n};\n\nexport const useRelativePosition = <T extends PIXI.Sprite>(item?: T) => {\n  const [left, setLeft] = useState(0);\n  const [top, setTop] = useState(0);\n  const [anchor, setAnchor] = useState(new PIXI.Point(0, 0));\n\n  useEffect(() => {\n    if (item && item.anchor) {\n      setAnchor(item.anchor);\n    } else {\n      setAnchor(new PIXI.Point(0, 0));\n    }\n  }, [item]);\n\n  useEffect(() => {\n    setLeft(-anchor.x);\n    setTop(-anchor.y);\n  }, [anchor.x, anchor.y]);\n\n  return [left, top];\n};\n\nconst updateKeyboardPressList = (list: boolean[], action: KeyboardAction): boolean[] => {\n  switch (action.type) {\n    case KeyboardActionType.Reset:\n      return new Array(action.index).fill(action.value);\n    case KeyboardActionType.Set:\n      list[action.index] = action.value;\n      return [...list];\n  }\n};\n\nexport const useKeyboard = (...keys: Key[]) => {\n  const [keyList, setKeyList] = useState<Key[]>([]);\n  const [keyPressList, updateKeyPressList] = useReducer(updateKeyboardPressList, []);\n\n  const reset = useCallback(() => {\n    updateKeyPressList({ type: KeyboardActionType.Reset, index: keyList.length, value: false });\n  }, [keyList]);\n\n  useEffect(() => {\n    if (JSON.stringify(keys) !== JSON.stringify(keyList)) {\n      setKeyList(keys);\n    }\n  }, [keys, keyList]);\n\n  useEffect(() => {\n    reset();\n  }, [keyList, reset]);\n\n  const onKeyUpdate = useCallback(\n    (event: KeyboardEvent, updateValue: boolean) => {\n      keyList.forEach((key, index) => {\n        if (typeof key === 'string') {\n          if (event.key === key) {\n            updateKeyPressList({ type: KeyboardActionType.Set, index, value: updateValue });\n            event.preventDefault();\n          }\n        } else {\n          const keyValid = event.key === key.key;\n          const altValid = key.alt === undefined ? true : key.alt === event.altKey;\n          const controlValid = key.control === undefined ? true : key.control === event.ctrlKey;\n          const shiftValid = key.shift === undefined ? true : key.shift === event.shiftKey;\n\n          if (keyValid && altValid && controlValid && shiftValid) {\n            updateKeyPressList({ type: KeyboardActionType.Set, index, value: updateValue });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    [keyList]\n  );\n\n  const onKeyDown = useCallback((event: KeyboardEvent) => onKeyUpdate(event, true), [onKeyUpdate]);\n  const onKeyUp = useCallback((event: KeyboardEvent) => onKeyUpdate(event, false), [onKeyUpdate]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    window.addEventListener('keyup', onKeyUp);\n    window.addEventListener('blur', reset);\n\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('keyup', onKeyUp);\n      window.removeEventListener('blur', reset);\n    };\n  }, [onKeyDown, onKeyUp, reset]);\n\n  return keyPressList;\n};\n\nexport const useFilter = <T extends PIXI.Filter>(item: T) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const [element] = useState(item);\n\n  useEffect(() => {\n    if (parent && !parent.filters) {\n      parent.filters = [];\n    }\n    if (parent && parent.filters.indexOf(element) < 0) {\n      parent.filters.push(element);\n      update();\n    }\n    return () => {\n      const index = parent.filters.indexOf(element);\n      if (index >= 0) {\n        parent.filters.splice(index, 1);\n        update();\n      }\n    };\n  }, [element, parent, update]);\n\n  return element;\n};\n\nexport const useLoadedTexture = (textureName?: string) => {\n  const context = useContext(TextureContext);\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>(\n    typeof textureName === 'string' && context[textureName] instanceof PIXI.Texture ? (context[textureName] as PIXI.Texture) : undefined\n  );\n\n  useEffect(() => {\n    if (typeof textureName === 'string' && context[textureName] instanceof PIXI.Texture) {\n      const loadedTexture = context[textureName] as PIXI.Texture;\n\n      if (loadedTexture && loadedTexture !== texture) {\n        setTexture(loadedTexture);\n      }\n    }\n  }, [texture, context, textureName]);\n\n  return texture;\n};\n\nexport const useTexture = <T extends PIXI.Sprite>(sprite: T, textureName?: string) => {\n  const { update } = useContext(RenderingContext);\n  const texture = useLoadedTexture(textureName);\n\n  useEffect(() => {\n    if (texture) {\n      const currentScale = sprite.scale.clone();\n      sprite.texture = texture;\n      sprite.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [texture, sprite, update]);\n};\n\nexport const useFrames = <T extends PIXI.AnimatedSprite>(sprite: T, frames?: string[] | string): number => {\n  const context = useContext(TextureContext);\n  const { update } = useContext(RenderingContext);\n  const [textures, setTextures] = useState<PIXI.Texture[]>([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    if (frames) {\n      const textureList: PIXI.Texture[] = [];\n      let frameList: string[] = [];\n\n      if (Array.isArray(frames)) {\n        frameList = frames;\n      } else if (Array.isArray(context[frames])) {\n        frameList = context[frames] as string[];\n      }\n      frameList.forEach((frameName) => {\n        const loadedTexture = context[frameName];\n\n        if (loadedTexture instanceof PIXI.Texture) {\n          textureList.push(loadedTexture);\n        }\n      });\n\n      setTextures(textureList);\n    }\n  }, [context, frames]);\n\n  useEffect(() => {\n    if (textures && textures.length > 0) {\n      const currentScale = sprite.scale.clone();\n      sprite.textures = textures;\n      sprite.texture = textures[0];\n      sprite.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [textures, sprite, update]);\n\n  useEffect(() => {\n    setCount(sprite.textures.length);\n  }, [sprite.textures]);\n\n  return count;\n};\n\nexport const useTextureUpdate = (texture?: PIXI.Texture) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const { setTexture } = useContext(ShapeTextureContext);\n\n  useEffect(() => {\n    if (texture) {\n      if (isSprite(parent)) {\n        const currentScale = parent.scale.clone();\n        if (isAnimatedSprite(parent)) {\n          const emptyIndex = parent.textures.indexOf(PIXI.Texture.EMPTY);\n          if (emptyIndex >= 0) {\n            parent.textures = [texture];\n          } else {\n            parent.textures = [...parent.textures, texture];\n          }\n        }\n        parent.texture = texture;\n        parent.scale.copyFrom(currentScale);\n        update();\n      } else {\n        setTexture(texture);\n      }\n    }\n  }, [parent, texture, update, setTexture]);\n};\n\nexport const useFrameAnimation = (initialFrame: number, frameCount: number, fps: number, playing: boolean): number => {\n  const { frameId, elapsed } = useContext(AnimationContext);\n\n  const reducer = useCallback(\n    (state: AnimationState, action: AnimationAction): AnimationState => {\n      let time, frame;\n      const initialTime = initialFrame * (1000 / fps);\n      const duration = (1000 / fps) * frameCount;\n      if (isNaN(state.time) || isNaN(state.frame)) {\n        action.type = AnimationActionType.Reset;\n      }\n      switch (action.type) {\n        case AnimationActionType.Progress:\n          time = (state.time + (action.value || 0)) % duration;\n          frame = Math.floor((time / 1000) * fps) % frameCount;\n          return { time, frame };\n        case AnimationActionType.Reset:\n          if (state.time !== initialTime) {\n            return {\n              frame: initialFrame,\n              time: initialTime\n            };\n          } else {\n            return state;\n          }\n        default:\n          return state;\n      }\n    },\n    [initialFrame, fps, frameCount]\n  );\n\n  const [{ frame }, dispatch] = useReducer(reducer, { time: initialFrame * (1000 / fps), frame: initialFrame });\n\n  useEffect(() => {\n    if (playing) {\n      dispatch({ type: AnimationActionType.Progress, value: elapsed });\n    } else {\n      dispatch({ type: AnimationActionType.Reset });\n    }\n  }, [frameId, elapsed, playing, dispatch]);\n\n  return frame;\n};\n","import * as PIXI from 'pixi.js';\nimport { useContext, useEffect, useState } from 'react';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport {\n  AllFilterProps,\n  FilterProps,\n  FilterPropsMap,\n  GraphicsProps,\n  GraphicsPropsMap,\n  GraphicsPropsType,\n  SpriteProps,\n  SpritePropsMap,\n  SpritePropsType,\n  TilingSpriteProps,\n  TilingSpritePropsMap,\n  TilingSpritePropsType\n} from '../props';\nimport {\n  BlendModes,\n  BlendModesMap,\n  Events,\n  GenericEventType,\n  GenericProps,\n  GenericPropsMap,\n  GenericType,\n  PropValue,\n  Area\n} from '../types';\n\nconst propsToMap = <S extends { [K in T]?: PropValue }, T extends keyof S>(props: S) => {\n  const map = new Map<T, PropValue>();\n\n  Object.keys(props).forEach((key: string) => {\n    const prop = key as T;\n    map.set(prop, props[prop] as PropValue);\n  });\n\n  return map;\n};\n\nconst getMapUpdate = <S extends { [K in T]?: PropValue }, T extends keyof S>(state: Map<T, PropValue>, props: S) => {\n  const propMap = propsToMap(props);\n  const updatedMap = new Map<T, PropValue>();\n\n  state.forEach((value, key) => {\n    const newValue = propMap.get(key) as PropValue;\n    if (value !== newValue) {\n      state.set(key, newValue);\n      updatedMap.set(key as T, newValue);\n    }\n  });\n\n  return updatedMap;\n};\n\nconst updateGenericProps = <T extends PIXI.Container>(item: T, updatedProperties?: GenericPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    let rectangle;\n    switch (key) {\n      case GenericProps.Alpha:\n        item.alpha = value as number;\n        break;\n      case GenericProps.Angle:\n        item.angle = value as number;\n        break;\n      case GenericProps.ButtonMode:\n        item.buttonMode = value as boolean;\n        break;\n      case GenericProps.Cursor:\n        item.cursor = value as string;\n        break;\n      case GenericProps.Height:\n        item.height = (value as number) || item.height;\n        break;\n      case GenericProps.Interactive:\n        item.interactive = value as boolean;\n        break;\n      case GenericProps.Name:\n        item.name = value as string;\n        break;\n      case GenericProps.PivotX:\n        item.pivot.x = value as number;\n        break;\n      case GenericProps.PivotY:\n        item.pivot.y = value as number;\n        break;\n      case GenericProps.Rotation:\n        item.rotation = value as number;\n        break;\n      case GenericProps.ScaleX:\n        item.scale.x = value as number;\n        break;\n      case GenericProps.ScaleY:\n        item.scale.y = value as number;\n        break;\n      case GenericProps.SkewX:\n        item.skew.x = value as number;\n        break;\n      case GenericProps.SkewY:\n        item.skew.y = value as number;\n        break;\n      case GenericProps.SortableChildren:\n        item.sortableChildren = value as boolean;\n        break;\n      case GenericProps.Visible:\n        item.visible = value as boolean;\n        break;\n      case GenericProps.Width:\n        item.width = (value as number) || item.width;\n        break;\n      case GenericProps.X:\n        item.x = value as number;\n        break;\n      case GenericProps.Y:\n        item.y = value as number;\n        break;\n      case GenericProps.ZIndex:\n        item.zIndex = value as number;\n        break;\n      case GenericProps.FilterArea:\n        if (value) {\n          rectangle = value as Area;\n          item.filterArea = new PIXI.Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          item.filterArea = null;\n        }\n        break;\n      case GenericProps.HitArea:\n        if (value) {\n          rectangle = value as Area;\n          item.hitArea = new PIXI.Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          item.hitArea = null;\n        }\n        break;\n    }\n  });\n};\n\nconst updateSpriteProps = <T extends PIXI.Sprite>(item: T, updatedProperties?: SpritePropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case SpriteProps.AnchorX:\n        if (value) {\n          item.anchor.x = value as number;\n        }\n        break;\n      case SpriteProps.AnchorY:\n        if (value) {\n          item.anchor.y = value as number;\n        }\n        break;\n      case SpriteProps.RoundPixels:\n        item.roundPixels = value as boolean;\n        break;\n    }\n  });\n};\n\nconst updateGraphicsProps = <T extends PIXI.Sprite | PIXI.Graphics>(item: T, updatedProperties?: GraphicsPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case GraphicsProps.BlendMode:\n        item.blendMode = BlendModesMap.get(value as BlendModes) || 0;\n        break;\n      case GraphicsProps.Tint:\n        item.tint = value as number;\n        break;\n    }\n  });\n};\n\nconst updateTilingSpriteProps = <T extends PIXI.TilingSprite>(item: T, updatedProperties?: TilingSpritePropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case TilingSpriteProps.ClampMargin:\n        item.clampMargin = value as number;\n        break;\n      case TilingSpriteProps.TileScaleX:\n        item.tileScale.x = value as number;\n        break;\n      case TilingSpriteProps.TileScaleY:\n        item.tileScale.y = value as number;\n        break;\n      case TilingSpriteProps.TileX:\n        item.tilePosition.x = (value as number) % item.texture.width;\n        break;\n      case TilingSpriteProps.TileY:\n        item.tilePosition.y = (value as number) % item.texture.height;\n        break;\n      case TilingSpriteProps.UvRespectAnchor:\n        item.uvRespectAnchor = value as boolean;\n        break;\n    }\n  });\n};\n\nconst updateFilterProps = <T extends PIXI.Filter>(item: T, updatedProperties?: FilterPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case FilterProps.AutoFit:\n        item.autoFit = value as boolean;\n        break;\n      case FilterProps.BlendMode:\n        item.blendMode = BlendModesMap.get(value as BlendModes) || 0;\n        break;\n      case FilterProps.Enabled:\n        item.enabled = value as boolean;\n        break;\n      case FilterProps.Padding:\n        item.padding = value as number;\n        break;\n      case FilterProps.Resolution:\n        item.resolution = value as number;\n        break;\n      case FilterProps.Alpha:\n        ((item as unknown) as PIXI.filters.AlphaFilter).alpha = value as number;\n        break;\n      case FilterProps.Blur:\n        ((item as unknown) as PIXI.filters.BlurFilter).blur = value as number;\n        break;\n      case FilterProps.BlurX:\n        ((item as unknown) as PIXI.filters.BlurFilter).blurX = value as number;\n        break;\n      case FilterProps.BlurY:\n        ((item as unknown) as PIXI.filters.BlurFilter).blurY = value as number;\n        break;\n      case FilterProps.Quality:\n        ((item as unknown) as PIXI.filters.BlurFilter).quality = value as number;\n        break;\n      case FilterProps.RepeatEdgePixels:\n        ((item as unknown) as PIXI.filters.BlurFilter).repeatEdgePixels = value as boolean;\n        break;\n      case FilterProps.Noise:\n        ((item as unknown) as PIXI.filters.NoiseFilter).noise = value as number;\n        break;\n      case FilterProps.Seed:\n        ((item as unknown) as PIXI.filters.NoiseFilter).seed = value as number;\n        break;\n    }\n  });\n};\n\nconst useUpdatedProps = <S extends { [K in T]?: PropValue }, T extends keyof S>(props: S) => {\n  const [state, setState] = useState<Map<T, PropValue>>(propsToMap(props));\n  const [updatedProperties, setUpdatedProperties] = useState(state);\n\n  useEffect(() => {\n    const updatedMap = getMapUpdate(state, props);\n\n    if (updatedMap.size > 0) {\n      setUpdatedProperties(updatedMap);\n      setState(propsToMap(props));\n    }\n  }, [props, state]);\n\n  return updatedProperties;\n};\n\nexport const useGenericProps = <T extends PIXI.Container>(item: T, props: GenericType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateGenericProps(item, updatedProperties as GenericPropsMap);\n    update();\n  }, [updatedProperties, update, item]);\n};\n\nexport const useSpriteProps = <T extends PIXI.Sprite>(sprite: T, props: SpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateSpriteProps(sprite, updatedProperties as SpritePropsMap);\n    update();\n  }, [updatedProperties, update, sprite]);\n};\n\nexport const useGraphicsProps = <T extends PIXI.Sprite | PIXI.Graphics>(graphics: T, props: GraphicsPropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateGraphicsProps(graphics, updatedProperties as GraphicsPropsMap);\n    update();\n  }, [updatedProperties, update, graphics]);\n};\n\nexport const useTransformMatrix = (\n  x = 0,\n  y = 0,\n  pivotX = 0,\n  pivotY = 0,\n  scaleX = 1,\n  scaleY = 1,\n  rotation = 0, // Rotation in radians\n  skewX = 0,\n  skewY = 0\n) => {\n  const [matrix, setMatrix] = useState(new PIXI.Matrix());\n\n  useEffect(() => {\n    const newMatrix = new PIXI.Matrix();\n\n    newMatrix.setTransform(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY);\n\n    setMatrix(newMatrix);\n  }, [x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY]);\n\n  return matrix;\n};\n\nexport const useAlignedPosition = <T extends PIXI.Sprite>(sprite: T, props: GenericType & SpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const { width: parentWidth, height: parentHeight } = useContext(ParentContext);\n  const { x = 0, y = 0, alignX, alignY } = props;\n\n  useEffect(() => {\n    if (alignX) {\n      sprite.x = parentWidth * alignX + x;\n      sprite.anchor.x = alignX;\n    } else {\n      sprite.x = x;\n    }\n    update();\n  }, [update, sprite, parentWidth, x, alignX]);\n\n  useEffect(() => {\n    if (alignY) {\n      sprite.y = parentHeight * alignY + y;\n      sprite.anchor.y = alignY;\n    } else {\n      sprite.y = y;\n    }\n    update();\n  }, [update, sprite, parentHeight, y, alignY]);\n};\n\nexport const useTilingSpriteProps = <T extends PIXI.TilingSprite>(sprite: T, props: TilingSpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateTilingSpriteProps(sprite, updatedProperties as TilingSpritePropsMap);\n    update();\n  }, [updatedProperties, update, sprite]);\n};\n\nexport const useFilterProps = <T extends PIXI.Filter>(filter: T, props: AllFilterProps) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateFilterProps(filter, updatedProperties as FilterPropsMap);\n    update();\n  }, [updatedProperties, update, filter]);\n};\n\nexport const useEvent = <T extends PIXI.Container>(item: T, event: Events, callback?: EventListener) => {\n  useEffect(() => {\n    if (callback) {\n      item?.addListener(event, callback);\n    } else {\n      item?.removeListener(event);\n    }\n    return () => {\n      item?.removeListener(event);\n    };\n  }, [callback, item, event]);\n};\n\nexport const useDisplayObjectEvents = <T extends PIXI.Container>(item: T, callbacks: GenericEventType) => {\n  const {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  } = callbacks;\n\n  useEffect(() => {\n    return () => {\n      item.removeAllListeners();\n    };\n  }, [item]);\n\n  useEvent(item, Events.Click, onClick);\n  useEvent(item, Events.MouseDown, onMouseDown);\n  useEvent(item, Events.MouseMove, onMouseMove);\n  useEvent(item, Events.MouseOut, onMouseOut);\n  useEvent(item, Events.MouseOver, onMouseOver);\n  useEvent(item, Events.MouseUp, onMouseUp);\n  useEvent(item, Events.MouseUpOutside, onMouseUpOutside);\n  useEvent(item, Events.PointerCancel, onPointerCancel);\n  useEvent(item, Events.PointerDown, onPointerDown);\n  useEvent(item, Events.PointerMove, onPointerMove);\n  useEvent(item, Events.PointerOut, onPointerOut);\n  useEvent(item, Events.PointerOver, onPointerOver);\n  useEvent(item, Events.PointerTap, onPointerTap);\n  useEvent(item, Events.PointerUp, onPointerUp);\n  useEvent(item, Events.PointerUpOutside, onPointerUpOutside);\n  useEvent(item, Events.RemovedFrom, onRemovedFrom);\n  useEvent(item, Events.RightClick, onRightClick);\n  useEvent(item, Events.RightDown, onRightDown);\n  useEvent(item, Events.RightUp, onRightUp);\n  useEvent(item, Events.RightUpOutside, onRightUpOutside);\n  useEvent(item, Events.Tap, onTap);\n  useEvent(item, Events.TouchCancel, onTouchCancel);\n  useEvent(item, Events.TouchEnd, onTouchEnd);\n  useEvent(item, Events.TouchEndOutside, onTouchEndOutside);\n  useEvent(item, Events.TouchMove, onTouchMove);\n  useEvent(item, Events.TouchStart, onTouchStart);\n  useEvent(item, Events.Added, onAdded);\n  useEvent(item, Events.Removed, onRemoved);\n  useEvent(item, Events.ChildAdded, onChildAdded);\n};\n","import { SyntheticEvent, useCallback, useContext, useEffect, useMemo, useReducer, useState } from 'react';\nimport {\n  SpeedAction,\n  SpeedContextType,\n  SpeedState,\n  SpeedContextAction,\n  RenderingContextType,\n  AnimationContextType,\n  ParentContextType,\n  RenderingContextAction,\n  RenderingContextState,\n  RenderAction,\n  LoadResourceType,\n  TextureContextType,\n  ShapeTextureType,\n  ShapeStyleType,\n  LineDefinition,\n  FillDefinition,\n  PointsState,\n  PointActionType,\n  PointAction,\n  Coords,\n  PointsContextType, ShapeType\n} from '../types';\nimport { initialSpeedState, ParentContext, AnimationContext } from '../contexts';\nimport * as PIXI from 'pixi.js';\nimport { PointerContextAction, PointerContextActionType, PointerContextType } from '../types/PointerContextType';\nimport { useRelativePosition } from './genericHooks';\n\nconst MAX_HISTORY_SIZE = 120;\n\nexport const useSpeedContext = (): SpeedContextType => {\n  const reducer = useCallback((state: SpeedState, action: SpeedAction): SpeedState => {\n    switch (action.type) {\n      case SpeedContextAction.Increase:\n        return { speed: state.speed > 0 ? state.speed * 2 : 1 };\n      case SpeedContextAction.Decrease:\n        return { speed: state.speed / 2 };\n      case SpeedContextAction.Pause:\n        return { speed: 0 };\n      case SpeedContextAction.Play:\n        return { speed: 1 };\n      case SpeedContextAction.Set:\n        return { speed: action.value && action.value > 0 ? action.value : state.speed };\n      default:\n        return state;\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, initialSpeedState);\n\n  const increase = useCallback(() => dispatch({ type: SpeedContextAction.Increase }), [dispatch]);\n  const decrease = useCallback(() => dispatch({ type: SpeedContextAction.Decrease }), [dispatch]);\n  const play = useCallback(() => dispatch({ type: SpeedContextAction.Play }), [dispatch]);\n  const pause = useCallback(() => dispatch({ type: SpeedContextAction.Pause }), [dispatch]);\n  const setSpeed = useCallback((value: number) => dispatch({ type: SpeedContextAction.Set, value }), [dispatch]);\n\n  return { ...state, increase, decrease, play, pause, setSpeed };\n};\n\nexport const useAnimationContext = (speed: number): AnimationContextType => {\n  const initialState = useContext(AnimationContext);\n  const reducer = useCallback(\n    (state: AnimationContextType) => {\n      const { frameId, history } = state;\n\n      if (speed > 0) {\n        const latestFps = Math.round(PIXI.Ticker.shared.FPS);\n        const fpsHistory = [latestFps, ...history.slice(0, MAX_HISTORY_SIZE - 1)];\n\n        return {\n          frameId: frameId + 1,\n          elapsed: PIXI.Ticker.shared.deltaMS * speed,\n          fps: latestFps,\n          history: fpsHistory,\n          averageFps: Math.round(fpsHistory.reduce((a, b) => a + b, 0) / fpsHistory.length),\n          minFps: Math.min(...fpsHistory),\n          maxFps: Math.max(...fpsHistory)\n        };\n      } else {\n        return state;\n      }\n    },\n    [speed]\n  );\n  const [context, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    PIXI.Ticker.shared.add(dispatch);\n\n    return () => {\n      PIXI.Ticker.shared.remove(dispatch);\n    };\n  }, [dispatch]);\n\n  return context;\n};\n\nexport const useRenderingContext = (canvasReference: string, frameId: number, background?: number): RenderingContextType => {\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | undefined>(undefined);\n  const [stage] = useState<PIXI.Container>(new PIXI.Container());\n  const [renderer, setRenderer] = useState<PIXI.Renderer | undefined>();\n\n  const reducer = useCallback(\n    (state: RenderingContextState, action: RenderAction): RenderingContextState => {\n      let renderId, width, height, update;\n      switch (action.type) {\n        case RenderingContextAction.Update:\n          return { ...state, update: true };\n        case RenderingContextAction.Render:\n        default:\n          if (canvas && renderer) {\n            update = state.update;\n            width = state.width;\n            height = state.height;\n            renderId = state.renderId;\n            if (width !== canvas.width || height !== canvas.height) {\n              width = canvas.width;\n              height = canvas.height;\n\n              renderer.resize(width, height);\n\n              update = true;\n            }\n\n            if (stage && update) {\n              renderer.render(stage);\n\n              update = false;\n              renderId++;\n            }\n            return { update, width, height, renderId };\n          }\n          return state;\n      }\n    },\n    [renderer, canvas, stage]\n  );\n\n  const [state, dispatch] = useReducer(reducer, { height: 0, width: 0, renderId: 0, update: true });\n\n  const update = useCallback(() => dispatch({ type: RenderingContextAction.Update }), []);\n\n  const render = useCallback(() => dispatch({ type: RenderingContextAction.Render }), []);\n\n  const getTexture = useCallback(\n    <T extends PIXI.DisplayObject>(container: T, width: number, height: number): PIXI.RenderTexture | undefined => {\n      if (renderer) {\n        return renderer.generateTexture(container, PIXI.SCALE_MODES.LINEAR, 1, new PIXI.Rectangle(0, 0, width, height));\n      }\n      return undefined;\n    },\n    [renderer]\n  );\n\n  useEffect(() => {\n    const reference = document.getElementById(canvasReference) as HTMLCanvasElement;\n\n    if (!reference && renderer) {\n      // Force release of WebGL context\n      renderer.gl.getExtension('WEBGL_lose_context')?.loseContext();\n      renderer.destroy();\n      setRenderer(undefined);\n    } else if (reference && !renderer) {\n      const newRenderer = new PIXI.Renderer({\n        view: reference,\n        transparent: true,\n        width: reference.width,\n        height: reference.height,\n        antialias: true\n      });\n      setCanvas(reference);\n      setRenderer(newRenderer);\n    }\n  }, [canvasReference, renderer, frameId]);\n\n  useEffect(() => {\n    render();\n  }, [frameId, render]);\n\n  useEffect(() => {\n    if (renderer) {\n      renderer.transparent = !!background;\n      if (background) {\n        renderer.backgroundColor = background;\n      }\n    }\n  }, [renderer, background])\n\n  return {\n    update,\n    stage,\n    width: state.width,\n    height: state.height,\n    renderId: state.renderId,\n    getTexture\n  };\n};\n\nexport const useParentContext = <T extends PIXI.Container>(parent: T): ParentContextType<T> => {\n  const parentContext = useContext(ParentContext);\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [width, setWidth] = useState(parentContext.width);\n  const [height, setHeight] = useState(parentContext.height);\n  const [left, top] = useRelativePosition((parent as unknown) as PIXI.Sprite | undefined);\n  const [transform, setTransform] = useState<number[] | undefined>();\n\n  useEffect(() => {\n    if (parent) {\n      if (parent.width) {\n        setWidth(parent.width);\n      } else {\n        setWidth(parentContext.width);\n      }\n      if (parent.height) {\n        setHeight(parent.height);\n      } else {\n        setHeight(parentContext.height);\n      }\n    }\n  }, [parent, parent.width, parent.height, parentContext.width, parentContext.height]);\n\n  useEffect(() => {\n    setX(parent.worldTransform.tx);\n    setY(parent.worldTransform.ty);\n    setTransform([\n      parent.worldTransform.a,\n      parent.worldTransform.b,\n      parent.worldTransform.c,\n      parent.worldTransform.d,\n      parent.worldTransform.tx,\n      parent.worldTransform.ty\n    ]);\n  }, [\n    parent.worldTransform.a,\n    parent.worldTransform.b,\n    parent.worldTransform.c,\n    parent.worldTransform.d,\n    parent.worldTransform.tx,\n    parent.worldTransform.ty\n  ]);\n\n  return {\n    parent,\n    x,\n    y,\n    width,\n    height,\n    transform,\n    left: left * width,\n    top: top * height\n  };\n};\n\nconst cleanName = (name: string) => name.replace(/(?:(\\.\\w+?$)|(_image$))/, '');\n\nconst textureLoaded = new Map<string, string>();\n\nlet loadedResources: TextureContextType = {};\n\nexport const useTextureContext = (resources: LoadResourceType) => {\n  const [loader] = useState(new PIXI.Loader());\n  const reducer = useCallback((state: TextureContextType, action: TextureContextType): TextureContextType => {\n    loadedResources = { ...loadedResources, ...state, ...action };\n    return loadedResources;\n  }, []);\n  const [context, dispatch] = useReducer(reducer, loadedResources);\n\n  const callback = useCallback(\n    (loader: PIXI.Loader, resource: PIXI.LoaderResource) => {\n      const resources: TextureContextType = {};\n      const cleanedName = cleanName(resource.name);\n\n      if (resource.texture && !loadedResources[cleanedName]) {\n        resources[cleanedName] = resource.texture;\n      } else if (resource.textures) {\n        const frames: string[] = [];\n        Object.keys(resource.textures).forEach((name) => {\n          const texture = resource.textures ? resource.textures[name] : undefined;\n          if (texture) {\n            const resourceName = cleanName(name);\n            resources[resourceName] = texture;\n            frames.push(resourceName);\n          }\n        });\n        resources[cleanedName] = frames;\n      }\n\n      dispatch(resources);\n\n      return loader;\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    loader.onLoad.add(callback);\n    return () => {\n      loader.onLoad.detach(callback);\n    };\n  }, [loader, callback]);\n\n  useEffect(() => {\n    let count = 0;\n    Object.keys(resources).forEach((key) => {\n      const existingResource = textureLoaded.get(key);\n      if (!existingResource) {\n        loader.add(key, resources[key]);\n        textureLoaded.set(key, resources[key]);\n        count++;\n      } else if (existingResource !== resources[key]) {\n        console.warn(\n          `Attempt of overriding existing resource ${key} from ${existingResource}\n          to ${resources[key]}. Please use a unique name for your resource.`\n        );\n      }\n    });\n    if (count) {\n      loader.load();\n    }\n  }, [resources, loader]);\n\n  return context;\n};\n\nconst isTouchEvent = (event: Event): event is TouchEvent => {\n  return !!(event as TouchEvent)?.touches;\n};\nconst isMouseEvent = (event: Event): event is MouseEvent => {\n  return !isTouchEvent(event);\n};\n\nexport const usePointerContext = (\n  retina: boolean,\n  width: number,\n  height: number,\n  onInteractionStart?: (point: Coords) => void,\n  onInteractionEnd?: (point: Coords) => void,\n  onInteractionMove?: (point: Coords) => void\n) => {\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n  const reducer = useCallback(\n    (state: PointerContextType, action: PointerContextAction): PointerContextType => {\n      switch (action.type) {\n        case PointerContextActionType.StartOver:\n          if (!state.over) {\n            return { ...state, over: true };\n          } else {\n            return state;\n          }\n        case PointerContextActionType.EndOver:\n          if (state.over) {\n            return { ...state, over: false };\n          } else {\n            return state;\n          }\n        case PointerContextActionType.UpdatePosition:\n          if (state.over && action.x && action.y && (action.x !== state.x || action.y !== state.y)) {\n            if (onInteractionMove) {\n              onInteractionMove({ x: action.x, y: action.y });\n            }\n            return { x: action.x, y: action.y, over: true };\n          } else {\n            return state;\n          }\n      }\n    },\n    [onInteractionMove]\n  );\n  const [pointerContext, update] = useReducer(reducer, { x: 0, y: 0, over: false });\n  const triggerUpdatePosition = useCallback(\n    (x: number, y: number) => {\n      const multiplier = retina ? 2 : 1;\n      update({ type: PointerContextActionType.UpdatePosition, x: x * multiplier, y: y * multiplier });\n    },\n    [retina]\n  );\n  const updateMousePosition = useCallback(\n    (event: MouseEvent) => {\n      const { offsetX: x, offsetY: y } = event;\n\n      triggerUpdatePosition(x, y);\n\n      return { x, y };\n    },\n    [triggerUpdatePosition]\n  );\n  const updateTouchPosition = useCallback(\n    (event: TouchEvent) => {\n      const touch = event.touches.length > 0 ? event.touches[0] : event.changedTouches[0];\n      if (touch) {\n        const { clientX, clientY } = touch;\n        const x = clientX - offset.x;\n        const y = clientY - offset.y;\n\n        if (x >= 0 && x < width && y >= 0 && y < height) {\n          update({ type: PointerContextActionType.StartOver });\n          triggerUpdatePosition(x, y);\n        } else {\n          update({ type: PointerContextActionType.EndOver });\n        }\n\n        return { x, y };\n      }\n      return null;\n    },\n    [offset, width, height, triggerUpdatePosition]\n  );\n  const updatePosition = useCallback(\n    (event: SyntheticEvent) => {\n      if (isTouchEvent(event.nativeEvent)) {\n        return updateTouchPosition(event.nativeEvent);\n      } else if (isMouseEvent(event.nativeEvent)) {\n        return updateMousePosition(event.nativeEvent);\n      }\n      return null;\n    },\n    [updateMousePosition, updateTouchPosition]\n  );\n  const pointerStart = useCallback(\n    (event: SyntheticEvent) => {\n      const { x, y } = (event.nativeEvent.target as HTMLCanvasElement).getBoundingClientRect();\n      setOffset({ x, y });\n      const point = updatePosition(event);\n\n      if (point && onInteractionStart) {\n        onInteractionStart(point);\n      }\n    },\n    [updatePosition, onInteractionStart]\n  );\n  const pointerEnd = useCallback(\n    (event: SyntheticEvent) => {\n      const point = updatePosition(event);\n\n      if (point && onInteractionEnd) {\n        onInteractionEnd(point);\n      }\n    },\n    [updatePosition, onInteractionEnd]\n  );\n\n  const pointerOver = useCallback(() => update({ type: PointerContextActionType.StartOver }), []);\n  const pointerCancel = useCallback(() => update({ type: PointerContextActionType.EndOver }), []);\n\n  return { pointerContext, updatePosition, pointerStart, pointerOver, pointerEnd, pointerCancel };\n};\n\nexport const useShapeTextureContext = (): ShapeTextureType => {\n  const [matrix, setMatrix] = useState<PIXI.Matrix | undefined>();\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>();\n\n  return {\n    texture,\n    matrix: texture ? matrix : undefined,\n    setMatrix,\n    setTexture\n  };\n};\n\nexport const useShapeStyleContext = (): ShapeStyleType => {\n  const [line, setLineStyle] = useState<LineDefinition | undefined>();\n  const [fill, setFillStyle] = useState<FillDefinition | undefined>();\n  const [holes, setHoles] = useState<ShapeType[] | undefined>()\n\n  return { line, fill, holes, setLineStyle, setFillStyle, setHoles };\n};\n\nexport const usePointsContext = (): PointsContextType => {\n  const reducer = useCallback((state: PointsState, action: PointActionType): PointsState => {\n    switch (action.type) {\n      case PointAction.Remove:\n        state.pointMap.delete(action.id);\n        return {\n          pointMap: state.pointMap,\n          points: state.points.filter((pointId) => pointId !== action.id)\n        };\n      case PointAction.Add:\n        if (action.point) {\n          state.pointMap.set(action.id, action.point);\n          if (state.points.indexOf(action.id) < 0) {\n            return {\n              points: [...state.points, action.id],\n              pointMap: state.pointMap\n            };\n          } else {\n            return {\n              points: [...state.points],\n              pointMap: state.pointMap\n            };\n          }\n        } else {\n          return state;\n        }\n    }\n  }, []);\n  const [state, dispatch] = useReducer(reducer, {\n    points: [],\n    pointMap: new Map()\n  });\n\n  const points = useMemo(() => {\n    const values: PIXI.Point[] = [];\n    state.points.forEach((pointId) => {\n      const point = state.pointMap.get(pointId);\n      if (point) {\n        values.push(new PIXI.Point(point.x, point.y));\n      }\n    });\n\n    return values;\n  }, [state]);\n  const addPoint = useCallback((id: string, point: Coords) => dispatch({ type: PointAction.Add, id, point }), []);\n  const removePoint = useCallback((id: string) => dispatch({ type: PointAction.Remove, id }), []);\n\n  return { points, addPoint, removePoint };\n};\n","import React, { useCallback, useContext, useEffect, useMemo, useReducer } from 'react';\nimport { GraphicsContext, ShapeStyleContext } from '../../contexts';\nimport { DrawShapeDefinition, ShapeType } from '../../types';\n\nenum HoleAction {\n  Add,\n  Remove\n}\n\ntype HoleActionType = {\n  type: HoleAction;\n  id: string;\n  shape?: ShapeType;\n};\n\ntype Hole = {\n  id: string;\n  definition: ShapeType;\n};\n\nconst holesReducer = (state: Hole[], action: HoleActionType) => {\n  switch (action.type) {\n    case HoleAction.Remove:\n      return state.filter((hole) => hole.id !== action.id);\n    case HoleAction.Add:\n      if (action.shape) {\n        return [\n          ...state,\n          {\n            id: action.id,\n            definition: action.shape\n          }\n        ];\n      } else {\n        return state;\n      }\n  }\n};\n\nconst Holes: React.FC = ({ children }) => {\n  const [holeState, updateHoles] = useReducer(holesReducer, []);\n  const { setHoles } = useContext(ShapeStyleContext);\n  const holes = useMemo(() => holeState.map((hole) => hole.definition), [holeState]);\n\n  const addHole = useCallback(\n    ({ id, type, params, points }: DrawShapeDefinition) => updateHoles({ type: HoleAction.Add, id, shape: { type, params, points } }),\n    []\n  );\n  const removeHole = useCallback((id: string) => updateHoles({ type: HoleAction.Remove, id }), []);\n\n  useEffect(() => {\n    setHoles(holes);\n  }, [holes, setHoles]);\n\n  return <GraphicsContext.Provider value={{ drawShape: addHole, removeShape: removeHole }}>{children}</GraphicsContext.Provider>;\n};\n\nexport default Holes;\n","import * as PIXI from 'pixi.js';\nimport React, { CSSProperties, useContext, useEffect, useState } from 'react';\nimport { PixiCanvasProps } from '../props';\nimport AutoSizer, { Size } from 'react-virtualized-auto-sizer';\nimport { useId, useAnimationContext, useRenderingContext, useSpeedContext, useTextureContext, usePointerContext } from '../hooks';\nimport { SpeedContext, AnimationContext, RenderingContext, ParentContext, TextureContext, PointerContext } from '../contexts';\nimport { Overflow, ParentContextType } from '../types';\n\nconst defaultStyle: CSSProperties = {\n  position: 'relative',\n  left: 0,\n  right: 0,\n  margin: 0,\n  padding: 0,\n  width: '100%',\n  height: '100%'\n};\n\nconst isDesktop = !PIXI.utils.isMobile.any;\n\nconst PixiCanvas: React.FC<PixiCanvasProps> = ({\n  id,\n  className,\n  width,\n  height,\n  retina = false,\n  textures = {},\n  speed = 1,\n  background,\n  overflow = Overflow.All,\n  filterArea,\n  onUpdate,\n  onAfterRender,\n  onResize,\n  onInteractionStart,\n  onInteractionEnd,\n  onInteractionMove,\n  children\n}) => {\n  const canvasId = useId(id);\n\n  const speedContext = useSpeedContext();\n  const textureContext = useTextureContext(textures);\n  const animationContext = useAnimationContext(speedContext.speed);\n  const renderingContext = useRenderingContext(canvasId, animationContext.frameId, background);\n  const genericParentContext = useContext(ParentContext);\n  const [containerStyle, setContainerStyle] = useState<CSSProperties>(defaultStyle);\n  const [childrenContainerStyle, setChildrenContainerStyle] = useState<CSSProperties>(defaultStyle);\n\n  const { setSpeed } = speedContext;\n\n  const { pointerContext, pointerStart, pointerEnd, pointerCancel, pointerOver, updatePosition } = usePointerContext(\n    retina,\n    renderingContext.width,\n    renderingContext.height,\n    onInteractionStart,\n    onInteractionEnd,\n    onInteractionMove\n  );\n\n  const [parentContext, setParentContext] = useState<ParentContextType<PIXI.Container>>({\n    ...genericParentContext,\n    parent: renderingContext.stage,\n    width: renderingContext.width,\n    height: renderingContext.height\n  });\n\n  useEffect(() => {\n    setParentContext({\n      ...genericParentContext,\n      parent: renderingContext.stage,\n      width: renderingContext.width,\n      height: renderingContext.height\n    });\n  }, [renderingContext.stage, renderingContext.width, renderingContext.height, genericParentContext]);\n\n  useEffect(() => {\n    const newStyle = { ...defaultStyle };\n    const newChildrenStyle = { ...defaultStyle };\n\n    switch (overflow) {\n      case Overflow.Horizontal:\n        newChildrenStyle.overflowY = 'hidden';\n        break;\n      case Overflow.Vertical:\n        newChildrenStyle.overflowX = 'hidden';\n        break;\n      case Overflow.None:\n        newChildrenStyle.overflow = 'hidden';\n    }\n\n    newChildrenStyle.position = 'absolute';\n    newStyle.width = width || '100%';\n    newStyle.height = height || '100%';\n\n    setContainerStyle(newStyle);\n    setChildrenContainerStyle(newChildrenStyle);\n  }, [width, height, overflow]);\n\n  useEffect(() => {\n    if (filterArea) {\n      renderingContext.stage.filterArea = new PIXI.Rectangle(filterArea.x, filterArea.y, filterArea.width, filterArea.height);\n    } else {\n      renderingContext.stage.filterArea = (null as unknown) as PIXI.Rectangle;\n    }\n  }, [renderingContext.stage, filterArea]);\n\n  useEffect(() => {\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  }, [animationContext.frameId, onUpdate]);\n\n  useEffect(() => {\n    if (typeof onAfterRender === 'function') {\n      onAfterRender();\n    }\n  }, [renderingContext.renderId, onAfterRender]);\n\n  useEffect(() => {\n    if (typeof onResize === 'function') {\n      onResize({\n        width: renderingContext.width,\n        height: renderingContext.height\n      });\n    }\n  }, [renderingContext.width, renderingContext.height, onResize]);\n\n  useEffect(() => {\n    setSpeed(speed);\n  }, [speed, setSpeed]);\n\n  return (\n    <TextureContext.Provider value={textureContext}>\n      <SpeedContext.Provider value={speedContext}>\n        <RenderingContext.Provider value={renderingContext}>\n          <AnimationContext.Provider value={animationContext}>\n            <PointerContext.Provider value={pointerContext}>\n              {renderingContext.stage && (\n                <ParentContext.Provider value={parentContext}>\n                  <div\n                    className={'pixi-root'}\n                    style={containerStyle}\n                    onTouchMove={isDesktop ? undefined : updatePosition}\n                    onTouchStart={isDesktop ? undefined : pointerStart}\n                    onTouchEnd={isDesktop ? undefined : pointerEnd}\n                    onTouchCancel={isDesktop ? undefined : pointerCancel}\n                    onPointerEnter={isDesktop ? pointerOver : undefined}\n                    onPointerOver={isDesktop ? pointerOver : undefined}\n                    onPointerDown={isDesktop ? pointerStart : undefined}\n                    onPointerUp={isDesktop ? pointerEnd : undefined}\n                    onPointerOut={isDesktop ? pointerCancel : undefined}\n                    onPointerCancel={isDesktop ? pointerCancel : undefined}\n                    onPointerLeave={isDesktop ? pointerCancel : undefined}\n                    onPointerMove={isDesktop ? updatePosition : undefined}\n                  >\n                    <AutoSizer>\n                      {({ width, height }: Size) => {\n                        const multiplier = retina ? 2 : 1;\n                        const canvasWidth = width * multiplier;\n                        const canvasHeight = height * multiplier;\n\n                        return (\n                          <canvas\n                            id={canvasId}\n                            className={className}\n                            width={canvasWidth}\n                            height={canvasHeight}\n                            style={{ ...defaultStyle, width, height }}\n                          />\n                        );\n                      }}\n                    </AutoSizer>\n                    <div className={'pixi-children-root'} style={childrenContainerStyle}>\n                      {children}\n                    </div>\n                  </div>\n                </ParentContext.Provider>\n              )}\n            </PointerContext.Provider>\n          </AnimationContext.Provider>\n        </RenderingContext.Provider>\n      </SpeedContext.Provider>\n    </TextureContext.Provider>\n  );\n};\n\nexport default PixiCanvas;\n","import * as PIXI from 'pixi.js';\nimport React, { PropsWithChildren, useContext, useEffect } from 'react';\nimport { AnimationContext, ParentContext, RenderingContext } from '../contexts';\nimport { useDisplayObjectEvents, useId, useParentContext, useGenericProps, useElement } from '../hooks';\nimport { PixiDisplayObjectProps } from '../props';\nimport { CursorType } from '../types';\n\nconst PixiDisplayObject: React.FC<PixiDisplayObjectProps<PIXI.Container>> = <T extends PIXI.Container>(\n  props: PropsWithChildren<PixiDisplayObjectProps<T>>\n) => {\n  const { item, children, onUpdate, onAfterRender } = props;\n  const { frameId } = useContext(AnimationContext);\n  const { renderId, update } = useContext(RenderingContext);\n  const element = useElement(item);\n  const parentContext = useParentContext(element);\n  const {\n    alpha = 1,\n    angle = 0,\n    buttonMode = false,\n    cursor = CursorType.None,\n    interactive = false,\n    name,\n    rotation = 0,\n    visible = true,\n    x = 0,\n    y = 0,\n    zIndex = element.parent?.children.length || 0,\n    pivotX = 0,\n    pivotY = 0,\n    scaleX = 1,\n    scaleY = 1,\n    skewX = 0,\n    skewY = 0,\n    width,\n    height,\n    sortableChildren = PIXI.settings.SORTABLE_CHILDREN,\n    hitArea,\n    filterArea\n  } = props;\n  const {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  } = props;\n\n  const id = useId(name);\n\n  useDisplayObjectEvents(element, {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  });\n\n  useGenericProps(element, {\n    alpha,\n    angle,\n    buttonMode,\n    cursor,\n    height,\n    interactive,\n    name: id,\n    pivotX,\n    pivotY,\n    rotation,\n    scaleX,\n    scaleY,\n    skewX,\n    skewY,\n    sortableChildren,\n    visible,\n    width,\n    x,\n    y,\n    zIndex,\n    hitArea,\n    filterArea\n  });\n\n  useEffect(() => {\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  }, [frameId, onUpdate]);\n\n  useEffect(() => {\n    if (typeof onAfterRender === 'function') {\n      onAfterRender();\n    }\n  }, [renderId, onAfterRender]);\n\n  useEffect(() => {\n    return () => {\n      update();\n    };\n  }, [update]);\n\n  return <ParentContext.Provider value={parentContext}>{children}</ParentContext.Provider>;\n};\n\nexport default PixiDisplayObject;\n","import React, { CSSProperties, useContext, useEffect, useState } from 'react';\nimport { ParentContext } from '../contexts';\nimport { PixiHtmlContainerProps } from '../props/PixiHtmlContainerProps';\nimport { Overflow } from '../types';\n\nconst PixiHtmlContainer: React.FC<PixiHtmlContainerProps> = ({ id, overflow = Overflow.All, children }) => {\n  const { left, top, transform, width, height, parent } = useContext(ParentContext);\n  const [style, setStyle] = useState<CSSProperties>({});\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (transform) {\n      const newStyle: CSSProperties = {\n        display: 'inline-block',\n        position: 'absolute',\n        transform: `matrix(${transform.join(',')})`,\n        width,\n        height,\n        top,\n        left\n      };\n\n      switch (overflow) {\n        case Overflow.Horizontal:\n          newStyle.overflowY = 'hidden';\n          break;\n        case Overflow.Vertical:\n          newStyle.overflowX = 'hidden';\n          break;\n        case Overflow.None:\n          newStyle.overflow = 'hidden';\n      }\n\n      setStyle(newStyle);\n    }\n  }, [transform, width, height, left, top, overflow]);\n\n  useEffect(() => {\n    setActive(!!transform && !!parent.parent && width > 1 && height > 1);\n  }, [transform, width, height, parent.parent]);\n\n  return (\n    active ? (\n      <div id={id} className={parent.name} style={style}>\n        {children}\n      </div>\n    ) : null\n  );\n};\n\nexport default PixiHtmlContainer;\n","import React, { useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { PixiContainerProps } from '../props';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiContainer: React.FC<PixiContainerProps> = (props) => {\n  const [container] = useState(new PIXI.Container());\n\n  return <PixiDisplayObject item={container} {...props} />;\n};\n\nexport default PixiContainer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useId, useTextureUpdate } from '../hooks';\nimport { PixiTextureProps } from '../props';\n\nconst PixiTexture: React.FC<PixiTextureProps> = ({ name, src, onLoad }) => {\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>();\n  const textureId = useId(name);\n\n  const loadCallback = useCallback((loadedTexture: PIXI.Texture) => {\n    setTexture(loadedTexture);\n    if (onLoad) {\n      onLoad();\n    }\n  }, [onLoad])\n\n  useEffect(() => {\n    if (src) {\n      PIXI.Texture.fromURL(src).then(loadCallback);\n    }\n  }, [src, loadCallback]);\n\n  useEffect(() => {\n    texture?.textureCacheIds.splice(0);\n    texture?.textureCacheIds.push(textureId);\n  }, [texture, textureId]);\n\n  useTextureUpdate(texture);\n\n  return null;\n};\n\nexport default PixiTexture;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { defaultParentContext, ParentContext, RenderingContext } from '../contexts';\nimport { useId, useTextureUpdate } from '../hooks';\nimport { PixiRenderTextureProps } from '../props';\nimport { Overflow } from '../types';\nimport PixiHtmlContainer from './PixiHtmlContainer';\n\nconst PixiRenderTexture: React.FC<PixiRenderTextureProps> = ({ name, width, height, children }) => {\n  const parentRenderContext = useContext(RenderingContext);\n  const textureId = useId(name);\n  const [stage] = useState(new PIXI.Container());\n  const [parentContext, setParentContext] = useState(defaultParentContext);\n  const [texture, setTexture] = useState<PIXI.RenderTexture | undefined>();\n  const [state, setState] = useState(true);\n  const { getTexture, update: parentUpdate, renderId } = parentRenderContext;\n\n  const update = useCallback(() => setState(true), []);\n\n  useEffect(() => {\n    setParentContext({\n      ...defaultParentContext,\n      parent: stage,\n      width,\n      height\n    });\n    setState(true);\n  }, [width, height, stage, textureId]);\n\n  useEffect(() => {\n    if (state) {\n      const newTexture = getTexture(stage, width, height);\n      newTexture?.textureCacheIds.push(textureId);\n      setTexture(newTexture);\n      setState(false);\n      parentUpdate();\n    }\n  }, [state, stage, parentUpdate, getTexture, width, height, textureId]);\n\n  useTextureUpdate(texture);\n\n  return (\n    <PixiHtmlContainer overflow={Overflow.None}>\n      <RenderingContext.Provider\n        value={{\n          stage,\n          width,\n          height,\n          renderId,\n          update,\n          getTexture\n        }}\n      >\n        <ParentContext.Provider value={parentContext}>{children}</ParentContext.Provider>\n      </RenderingContext.Provider>\n    </PixiHtmlContainer>\n  );\n};\n\nexport default PixiRenderTexture;\n","import React, { useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useSpriteProps, useTexture, useAlignedPosition, useGraphicsProps } from '../hooks';\nimport { PixiSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiSprite: React.FC<PixiSpriteProps> = (props) => {\n  const [sprite] = useState(new PIXI.Sprite());\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n\n  useTexture(sprite, props.texture);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined} />;\n};\n\nexport default PixiSprite;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useReducer, useState } from 'react';\nimport { GraphicsContext, RenderingContext } from '../contexts';\nimport { useGraphicsProps } from '../hooks';\nimport { PixiGraphicsProps } from '../props';\nimport {\n  BlendModes,\n  DrawShapeDefinition,\n  GraphicsState,\n  LineCap,\n  LineJoin,\n  ShapeAction,\n  ShapeActionType,\n  Shapes,\n  ShapeType\n} from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst drawShape = (definition: ShapeType, graphics: PIXI.Graphics, point?: PIXI.Point) => {\n  let lastPoint = point;\n\n  switch (definition.type) {\n    case Shapes.Path:\n      if (definition.points && definition.points.length > 1) {\n        if (!lastPoint || lastPoint.x !== definition.points[0].x || lastPoint.y !== definition.points[0].y) {\n          graphics.moveTo(definition.points[0].x, definition.points[0].y);\n        }\n        for (let i = 1; i < definition.points.length; i++) {\n          graphics.lineTo(definition.points[i].x, definition.points[i].y);\n        }\n        lastPoint = definition.points[definition.points.length - 1];\n      }\n      break;\n    case Shapes.Circle:\n      graphics.drawCircle(definition.params[0], definition.params[1], definition.params[2]);\n      break;\n    case Shapes.Arc:\n      graphics.arc(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4],\n        !!definition.params[5]\n      );\n      break;\n    case Shapes.BezierCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.bezierCurveTo(\n        definition.params[4],\n        definition.params[5],\n        definition.params[6],\n        definition.params[7],\n        definition.params[2],\n        definition.params[3]\n      );\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.ArcCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.arcTo(definition.params[4], definition.params[5], definition.params[2], definition.params[3], definition.params[6]);\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.QuadraticCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.quadraticCurveTo(definition.params[4], definition.params[5], definition.params[2], definition.params[3]);\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Ellipse:\n      graphics.drawEllipse(definition.params[0], definition.params[1], definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Rect:\n      graphics.drawRect(definition.params[0], definition.params[1], definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Polygon:\n      if (definition.points) {\n        graphics.drawPolygon(definition.points);\n      }\n      break;\n    case Shapes.RoundedRect:\n      graphics.drawRoundedRect(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4]\n      );\n      break;\n    case Shapes.Star:\n      graphics.drawStar(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4],\n        definition.params[5]\n      );\n      break;\n  }\n\n  return lastPoint;\n};\n\nconst updateGraphics = (graphics: PIXI.Graphics, state: GraphicsState) => {\n  let lastPoint: PIXI.Point | undefined;\n  graphics.clear();\n\n  state.shapes.forEach((shapeId) => {\n    const definition = state.shapeMap.get(shapeId);\n    let cap, join;\n\n    if (definition) {\n      if (definition.line) {\n        if (definition.line.texture) {\n          switch (definition.line.cap) {\n            case LineCap.Butt:\n              cap = PIXI.LINE_CAP.BUTT;\n              break;\n            case LineCap.Round:\n              cap = PIXI.LINE_CAP.ROUND;\n              break;\n            case LineCap.Square:\n              cap = PIXI.LINE_CAP.SQUARE;\n              break;\n          }\n\n          switch (definition.line.join) {\n            case LineJoin.Bevel:\n              join = PIXI.LINE_JOIN.BEVEL;\n              break;\n            case LineJoin.Miter:\n              join = PIXI.LINE_JOIN.MITER;\n              break;\n            case LineJoin.Round:\n              join = PIXI.LINE_JOIN.ROUND;\n              break;\n          }\n          graphics.lineTextureStyle({ ...definition.line, cap, join });\n        } else {\n          graphics.lineStyle(\n            definition.line.width,\n            definition.line.color,\n            definition.line.alpha,\n            definition.line.alignment,\n            definition.line.native\n          );\n        }\n      } else if (!lastPoint) {\n        graphics.lineStyle(0);\n      }\n      if (definition.fill) {\n        if (definition.fill.texture) {\n          graphics.beginTextureFill({\n            texture: definition.fill.texture,\n            matrix: definition.fill.matrix,\n            color: definition.fill.color,\n            alpha: definition.fill.alpha\n          });\n        } else {\n          graphics.beginFill(definition.fill.color, definition.fill.alpha);\n        }\n      }\n\n      lastPoint = drawShape(definition, graphics, lastPoint);\n\n      if (definition.holes && definition.holes.length > 0) {\n        let holeLastPoint: PIXI.Point | undefined;\n\n        graphics.beginHole();\n        definition.holes.forEach((hole) => {\n          holeLastPoint = drawShape(hole, graphics, holeLastPoint);\n        });\n        graphics.endHole();\n      }\n\n      if (definition.fill) {\n        graphics.endFill();\n      }\n    }\n  });\n};\n\nconst PixiGraphics: React.FC<PixiGraphicsProps> = (props) => {\n  const [graphics] = useState(new PIXI.Graphics());\n  const { blendMode = BlendModes.Normal, tint = 0xffffff } = props;\n  const { update } = useContext(RenderingContext);\n\n  const reducer = useCallback((state: GraphicsState, action: ShapeActionType): GraphicsState => {\n    switch (action.type) {\n      case ShapeAction.RemoveShape:\n        state.shapeMap.delete(action.id);\n        return {\n          shapes: state.shapes.filter((shape) => shape !== action.id),\n          shapeMap: state.shapeMap\n        };\n      case ShapeAction.UpdateShape:\n        if (action.definition) {\n          state.shapeMap.set(action.id, action.definition);\n          if (state.shapes.indexOf(action.id) < 0) {\n            return {\n              shapes: [...state.shapes, action.id],\n              shapeMap: state.shapeMap\n            };\n          } else {\n            return { ...state };\n          }\n        } else {\n          return state;\n        }\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, { shapes: [], shapeMap: new Map() });\n\n  const drawShape = useCallback(\n    (definition: DrawShapeDefinition) => dispatch({ type: ShapeAction.UpdateShape, id: definition.id, definition }),\n    []\n  );\n\n  const removeShape = useCallback((id: string) => dispatch({ type: ShapeAction.RemoveShape, id }), []);\n\n  useGraphicsProps(graphics, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    updateGraphics(graphics, state);\n    update();\n  }, [graphics, state, update]);\n\n  return (\n    <GraphicsContext.Provider value={{ drawShape, removeShape }}>\n      <PixiDisplayObject item={graphics} {...props} />\n    </GraphicsContext.Provider>\n  );\n};\n\nexport default PixiGraphics;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext } from '../contexts';\nimport { useGraphicsProps, useSpriteProps, useTexture, useTilingSpriteProps, useAlignedPosition } from '../hooks';\nimport { PixiTilingSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiTilingSprite: React.FC<PixiTilingSpriteProps> = (props) => {\n  const { width, height } = useContext(ParentContext);\n  const [tileWidth, setTileWidth] = useState(props.width || width);\n  const [tileHeight, setTileHeight] = useState(props.height || height);\n  const [sprite] = useState(new PIXI.TilingSprite(PIXI.Texture.EMPTY, tileWidth, tileHeight));\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { clampMargin = 0.5, tileX = 0, tileY = 0, tileScaleX = 1, tileScaleY = 1, uvRespectAnchor = false } = props;\n\n  useTexture(sprite, props.texture);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    setTileWidth(props.width || width);\n  }, [width, props.width]);\n\n  useEffect(() => {\n    setTileHeight(props.height || height);\n  }, [height, props.height]);\n\n  useTilingSpriteProps(sprite, {\n    clampMargin,\n    tileScaleX,\n    tileScaleY,\n    tileX,\n    tileY,\n    uvRespectAnchor\n  });\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} width={tileWidth} height={tileHeight} x={undefined} y={undefined} />;\n};\n\nexport default PixiTilingSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { RenderingContext } from '../contexts';\nimport { useFrames, useSpriteProps, useTexture, useFrameAnimation, useAlignedPosition, useGraphicsProps } from '../hooks';\nimport { PixiAnimatedSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiAnimatedSprite: React.FC<PixiAnimatedSpriteProps> = (props) => {\n  const [sprite] = useState(new PIXI.AnimatedSprite([PIXI.Texture.EMPTY], false));\n  const { update } = useContext(RenderingContext);\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { playing = false, resetOnStop = true, currentFrame = 0, fps = 60, onAnimationComplete } = props;\n  const [frameId, setFrameId] = useState(currentFrame);\n  const [initialFrame, setInitialFrame] = useState(0);\n\n  useTexture(sprite, props.texture);\n\n  const frameCount = useFrames(sprite, props.frames);\n  const frame = useFrameAnimation(initialFrame, frameCount, fps, playing);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    if (currentFrame < frameCount) {\n      setInitialFrame(currentFrame);\n    } else if (currentFrame > 0) {\n      setInitialFrame(currentFrame - 1);\n    }\n  }, [currentFrame, frameCount]);\n\n  useEffect(() => {\n    if (!playing && resetOnStop) {\n      setFrameId(initialFrame);\n    }\n  }, [playing, resetOnStop, initialFrame]);\n\n  useEffect(() => {\n    if (!isNaN(frameId)) {\n      sprite.gotoAndStop(frameId);\n      update();\n    }\n  }, [frameId, sprite, update]);\n\n  useEffect(() => {\n    if (playing && !isNaN(frame)) {\n      if (frame === frameCount - 1 && onAnimationComplete && frameCount > 0) {\n        onAnimationComplete();\n      }\n      setFrameId(frame);\n    }\n  }, [frame, frameCount, playing, onAnimationComplete]);\n\n  useAlignedPosition(sprite, props);\n\n  return <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined} />;\n};\n\nexport default PixiAnimatedSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport { useGraphicsProps, useSpriteProps, useTextureUpdate, useAlignedPosition } from '../hooks';\nimport { isAnimatedSprite, isSprite, PixiTextProps } from '../props';\nimport { BlendModes, defaultTextStyle } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiText: React.FC<PixiTextProps> = (props) => {\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { style = defaultTextStyle, children = '' } = props;\n  const { update } = useContext(RenderingContext);\n  const { parent } = useContext(ParentContext);\n  const [sprite] = useState(new PIXI.Text(String(children), style));\n  const [state, setState] = useState(false);\n  const [texture, setTexture] = useState(sprite.texture);\n  const [isTextureMode] = useState(isSprite(parent) || isAnimatedSprite(parent));\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    sprite.text = children ? String(children) : '';\n    sprite.updateText(true);\n    update();\n    setState(true);\n  }, [children, sprite, update]);\n\n  useEffect(() => {\n    sprite.style = style;\n    sprite.updateText(true);\n    update();\n    setState(true);\n  }, [style, sprite, update]);\n\n  useEffect(() => {\n    if (state) {\n      setTexture(sprite.texture);\n    }\n  }, [state, sprite]);\n\n  useTextureUpdate(texture);\n\n  useAlignedPosition(sprite, props);\n\n  return isTextureMode ? null : (\n    <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined}>\n      {null /* Avoiding passing down the tree the child text */}\n    </PixiDisplayObject>\n  );\n};\n\nexport default PixiText;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport { useTexture } from '../hooks';\nimport { useRelativePosition } from '../hooks/genericHooks';\nimport { PixiMaskProps } from '../props';\n\nconst PixiMask: React.FC<PixiMaskProps> = ({ texture, enabled = true, children }) => {\n  const [sprite] = useState(new PIXI.Sprite());\n  const parentContext = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const { parent } = parentContext;\n  const [left, top] = useRelativePosition((parent as unknown) as PIXI.Sprite | undefined);\n\n  useTexture(sprite, texture);\n\n  useEffect(() => {\n    if (enabled) {\n      parent.mask = sprite;\n      parent.addChild(sprite);\n      update();\n    }\n\n    return () => {\n      parent.removeChild(sprite);\n      parent.mask = null;\n      update();\n    };\n  }, [sprite, parent, enabled, update]);\n\n  useEffect(() => {\n    sprite.anchor.set(-left, -top);\n  }, [sprite, left, top]);\n\n  return <ParentContext.Provider value={{ ...parentContext, parent: sprite }}>{children}</ParentContext.Provider>;\n};\n\nexport default PixiMask;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeTextureContext } from '../../contexts';\nimport { useLoadedTexture, useTransformMatrix } from '../../hooks';\nimport { PixiTextureProps, UpdatableTextureType } from '../../props';\nimport { TransformType } from '../../types';\nimport PixiTexture from '../PixiTexture';\n\nconst ShapeTexture: React.FC<PixiTextureProps & TransformType & UpdatableTextureType> = ({\n  name,\n  src,\n  onLoad,\n  texture,\n  x,\n  y,\n  pivotX,\n  pivotY,\n  scaleX,\n  scaleY,\n  rotation,\n  skewX,\n  skewY\n}) => {\n  const { setTexture, setMatrix } = useContext(ShapeTextureContext);\n\n  const loadedTexture = useLoadedTexture(texture);\n  const matrix = useTransformMatrix(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY);\n\n  useEffect(() => {\n    setTexture(loadedTexture);\n\n    return () => {\n      setTexture(undefined);\n    }\n  }, [loadedTexture, setTexture]);\n\n  useEffect(() => {\n    setMatrix(matrix);\n\n    return () => {\n      setMatrix(undefined);\n    }\n  }, [matrix, setMatrix]);\n\n  return <PixiTexture name={name} src={src} onLoad={onLoad} />;\n};\n\nexport default ShapeTexture;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeStyleContext, ShapeTextureContext } from '../../contexts';\nimport { useShapeTextureContext } from '../../hooks';\nimport { LineCap, LineJoin, LineStyleType } from '../../types';\n\nconst LineStyle: React.FC<LineStyleType> = ({\n  alpha = 1,\n  color = 0x000000,\n  alignment = 0.5,\n  width = 1,\n  cap = LineCap.Butt,\n  join = LineJoin.Miter,\n  miterLimit = 10,\n  native = false,\n  children\n}) => {\n  const shapeTextureContext = useShapeTextureContext();\n  const { texture, matrix } = shapeTextureContext;\n  const { setLineStyle } = useContext(ShapeStyleContext);\n\n  useEffect(() => {\n    setLineStyle({ alpha, color, texture, matrix, alignment, width, cap, join, miterLimit, native });\n\n    return () => {\n      setLineStyle(undefined);\n    };\n  }, [alpha, color, texture, matrix, alignment, width, cap, join, miterLimit, native, setLineStyle]);\n\n  return <ShapeTextureContext.Provider value={shapeTextureContext}>{children}</ShapeTextureContext.Provider>;\n};\n\nexport default LineStyle;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeStyleContext, ShapeTextureContext } from '../../contexts';\nimport { useShapeTextureContext } from '../../hooks';\nimport { FillStyleType } from '../../types';\n\nconst FillStyle: React.FC<FillStyleType> = ({ alpha = 1, color = 0xffffff, children }) => {\n  const shapeTextureContext = useShapeTextureContext();\n  const { texture, matrix } = shapeTextureContext;\n  const { setFillStyle } = useContext(ShapeStyleContext);\n\n  useEffect(() => {\n    setFillStyle({\n      alpha, color, texture, matrix\n    });\n\n    return () => {\n      setFillStyle(undefined);\n    };\n  }, [alpha, color, texture, matrix, setFillStyle]);\n\n  return <ShapeTextureContext.Provider value={shapeTextureContext}>{children}</ShapeTextureContext.Provider>;\n};\n\nexport default FillStyle;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeStyleContext, GraphicsContext } from '../../contexts';\nimport { useId, useShapeStyleContext } from '../../hooks';\nimport { ShapeType } from '../../types';\n\nconst Shape: React.FC<ShapeType> = ({ name, type, params, points, children }) => {\n  const styleContext = useShapeStyleContext();\n  const { drawShape, removeShape } = useContext(GraphicsContext);\n  const { fill, line, holes } = styleContext;\n  const id = useId(name);\n\n  useEffect(() => {\n    drawShape({ id, type, params, points, fill, line, holes });\n  }, [id, type, params, fill, line, points, holes, drawShape]);\n\n  useEffect(() => {\n    return () => {\n      removeShape(id);\n    };\n  }, [id, removeShape]);\n\n  return <ShapeStyleContext.Provider value={styleContext}>{children}</ShapeStyleContext.Provider>;\n};\n\nexport default Shape;\n","import React, { useEffect, useState } from 'react';\nimport { RectangleType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Rectangle: React.FC<RectangleType> = ({ name, x, y, width, height, borderRadius = 0, children }) => {\n  const [params, setParams] = useState([x, y, width, height]);\n  const [shapeType, setShapeType] = useState(Shapes.Rect);\n\n  useEffect(() => {\n    if (borderRadius > 0) {\n      setShapeType(Shapes.RoundedRect);\n      setParams([x, y, width, height, borderRadius]);\n    } else {\n      setShapeType(Shapes.Rect);\n      setParams([x, y, width, height]);\n    }\n  }, [borderRadius, x, y, width, height]);\n\n  return (\n    <Shape name={name} type={shapeType} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Rectangle;\n","import React, { useEffect, useState } from 'react';\nimport { CircleType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Circle: React.FC<CircleType> = ({ name, x, y, radius, children }) => {\n  const [params, setParams] = useState([x, y, radius]);\n\n  useEffect(() => {\n    setParams([x, y, radius]);\n  }, [x, y, radius]);\n\n  return (\n    <Shape name={name} type={Shapes.Circle} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Circle;\n","import React, { useEffect, useState } from 'react';\nimport { EllipseType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Ellipse: React.FC<EllipseType> = ({ name, x, y, width, height, children }) => {\n  const [params, setParams] = useState([x, y, width, height]);\n\n  useEffect(() => {\n    setParams([x, y, width, height]);\n  }, [x, y, width, height]);\n\n  return (\n    <Shape name={name} type={Shapes.Ellipse} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Ellipse;\n","import React, { useEffect, useState } from 'react';\nimport { StarType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Star: React.FC<StarType> = ({ name, x, y, radius, innerRadius, points = 5, rotation = 0, children }) => {\n  const [params, setParams] = useState([x, y, points, radius, innerRadius || radius / 2, rotation]);\n\n  useEffect(() => {\n    setParams([x, y, points, radius, innerRadius || radius / 2, rotation]);\n  }, [x, y, points, radius, innerRadius, rotation]);\n\n  return (\n    <Shape name={name} type={Shapes.Star} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Star;\n","import React from 'react';\nimport { usePointsContext } from '../../hooks';\nimport { PointsContext } from '../../contexts';\nimport { ShapeGenericType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst noParams: number[] = [];\n\nconst Polygon: React.FC<ShapeGenericType> = ({ name, children }) => {\n  const pointsContext = usePointsContext();\n  const { points } = pointsContext;\n\n  return (\n    <PointsContext.Provider value={pointsContext}>\n      <Shape name={name} type={Shapes.Polygon} params={noParams} points={points}>\n        {children}\n      </Shape>\n    </PointsContext.Provider>\n  );\n};\n\nexport default Polygon;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { PointsContext } from '../../contexts';\nimport { useId } from '../../hooks';\nimport { Coords, PointProps } from '../../types';\n\nconst Point: React.FC<PointProps> = ({ id, x, y }) => {\n  const pointId = useId(id);\n  const { addPoint, removePoint } = useContext(PointsContext);\n  const [point, setPoint] = useState<Coords>({ x, y });\n\n  useEffect(() => {\n    setPoint({ x, y });\n  }, [x, y]);\n\n  useEffect(() => {\n    addPoint(pointId, point);\n  }, [point, pointId, addPoint]);\n\n  useEffect(() => {\n    return () => {\n      removePoint(pointId);\n    };\n  }, [pointId, removePoint]);\n\n  return null;\n};\n\nexport default Point;\n","import React, { useEffect, useState } from 'react';\nimport { ArcType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Arc: React.FC<ArcType> = ({ name, x, y, radius, startAngle, endAngle, anticlockwise = false, children }) => {\n  const [params, setParams] = useState([x, y, radius, startAngle, endAngle, anticlockwise ? 1 : 0]);\n\n  useEffect(() => {\n    setParams([x, y, radius, startAngle, endAngle, anticlockwise ? 1 : 0]);\n  }, [x, y, radius, startAngle, endAngle, anticlockwise]);\n\n  return (\n    <Shape name={name} type={Shapes.Arc} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default Arc;\n","import React, { useEffect, useState } from 'react';\nimport { BezierCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst BezierCurve: React.FC<BezierCurveType> = ({\n  name,\n  xFrom = 0,\n  yFrom = 0,\n  xTo,\n  yTo,\n  controlX,\n  controlY,\n  controlX2,\n  controlY2,\n  children\n}) => {\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n\n  return (\n    <Shape name={name} type={Shapes.BezierCurve} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default BezierCurve;\n","import React, { useEffect, useState } from 'react';\nimport { QuadraticCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst QuadraticCurve: React.FC<QuadraticCurveType> = ({ name, xFrom = 0, yFrom = 0, xTo, yTo, controlX, controlY, children }) => {\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY]);\n\n  return (\n    <Shape name={name} type={Shapes.QuadraticCurve} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default QuadraticCurve;\n","import React, { useEffect, useState } from 'react';\nimport { ArcCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst ArcCurve: React.FC<ArcCurveType> = ({ name, radius, xFrom = 0, yFrom = 0, xTo, yTo, controlX, controlY, children }) => {\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n\n  return (\n    <Shape name={name} type={Shapes.ArcCurve} params={params}>\n      {children}\n    </Shape>\n  );\n};\n\nexport default ArcCurve;\n","import React from 'react';\nimport { usePointsContext } from '../../hooks';\nimport { PointsContext } from '../../contexts';\nimport { ShapeGenericType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst noParams: number[] = [];\n\nconst Path: React.FC<ShapeGenericType> = ({ name, children }) => {\n  const pointsContext = usePointsContext();\n  const { points } = pointsContext;\n\n  return (\n    <PointsContext.Provider value={pointsContext}>\n      <Shape name={name} type={Shapes.Path} params={noParams} points={points}>\n        {children}\n      </Shape>\n    </PointsContext.Provider>\n  );\n};\n\nexport default Path;\n","import React, { PropsWithChildren, ReactNode, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useFilterProps } from '../hooks';\nimport { PixiFilterProps } from '../props';\nimport { BlendModes } from '../types';\n\nconst PixiFilter: React.FC<PixiFilterProps<PIXI.Filter>> = <T extends PIXI.Filter>(props: PropsWithChildren<PixiFilterProps<T>>) => {\n  const {\n    item,\n    blendMode = BlendModes.Normal,\n    autoFit = true,\n    enabled = true,\n    padding = 0,\n    resolution = PIXI.settings.FILTER_RESOLUTION,\n    children\n  } = props;\n\n  const [effects, setEffects] = useState<ReactNode[]>([]);\n\n  useFilterProps(item, {\n    autoFit,\n    blendMode,\n    enabled,\n    padding,\n    resolution\n  });\n\n  useEffect(() => {\n    if (children) {\n      if (Array.isArray(children)) {\n        setEffects(children);\n      } else {\n        setEffects([children]);\n      }\n    } else {\n      setEffects([]);\n    }\n  }, [children]);\n\n  return React.createElement(React.Fragment, null, ...effects);\n};\n\nexport default PixiFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { AlphaFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst AlphaFilter: React.FC<AlphaFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.AlphaFilter());\n  const { alpha = 1 } = props;\n\n  useFilterProps(filter, {\n    alpha\n  });\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default AlphaFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { BlurFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst BlurFilter: React.FC<BlurFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.BlurFilter());\n  const { blur = 2, blurX = 2, blurY = 2, quality = 1, repeatEdgePixels = false } = props;\n\n  useFilterProps(filter, {\n    blur,\n    blurX,\n    blurY,\n    quality,\n    repeatEdgePixels\n  });\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default BlurFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter } from '../hooks';\nimport { AbstractFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst FXAAFilter: React.FC<AbstractFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.FXAAFilter());\n\n  return <PixiFilter item={filter} {...props} />;\n};\n\nexport default FXAAFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport PixiFilter from './PixiFilter';\nimport { NoiseFilterProps } from '../props';\n\nconst FXAA_SEED = Math.random();\n\nconst FXAAFilter: React.FC<NoiseFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.NoiseFilter());\n  const { noise = 0.5, seed = FXAA_SEED } = props;\n\n  useFilterProps(filter, {\n    noise,\n    seed\n  });\n\n  return <PixiFilter item={filter} {...props} enabled={undefined} />;\n};\n\nexport default FXAAFilter;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useReducer } from 'react';\nimport { useFilter, useFilterProps } from '../hooks';\nimport { AlphaFilterProps } from '../props';\nimport { EffectContext, RenderingContext } from '../contexts';\nimport PixiFilter from './PixiFilter';\nimport { EffectAction, EffectActionType, EffectState, EffectType, EffectValue } from '../types';\n\nconst updateColorMatrix = (filter: PIXI.filters.ColorMatrixFilter, state: EffectState) => {\n  filter.reset();\n  state.effects.forEach((id) => {\n    const effectData = state.effectMap.get(id);\n\n    if (effectData) {\n      const { params = [], multiply = true, enabled = true } = effectData;\n\n      if (!enabled) return;\n\n      switch (effectData.effect) {\n        case EffectType.BlackAndWhite:\n          filter.blackAndWhite(multiply);\n          break;\n        case EffectType.Brightness:\n          filter.brightness(params[0], multiply);\n          break;\n        case EffectType.Browni:\n          filter.browni(multiply);\n          break;\n        case EffectType.ColorTone:\n          filter.colorTone(params[0], params[1], params[2], params[3], multiply);\n          break;\n        case EffectType.Contrast:\n          filter.contrast(params[0], multiply);\n          break;\n        case EffectType.Desaturate:\n          filter.desaturate();\n          break;\n        case EffectType.GreyScale:\n          filter.greyscale(params[0], multiply);\n          break;\n        case EffectType.Hue:\n          filter.hue(params[0], multiply);\n          break;\n        case EffectType.Kodachrome:\n          filter.kodachrome(multiply);\n          break;\n        case EffectType.Lsd:\n          filter.lsd(multiply);\n          break;\n        case EffectType.Negative:\n          filter.negative(multiply);\n          break;\n        case EffectType.Night:\n          filter.night(params[0], multiply);\n          break;\n        case EffectType.Polaroid:\n          filter.polaroid(multiply);\n          break;\n        case EffectType.Predator:\n          filter.predator(params[0], multiply);\n          break;\n        case EffectType.Saturate:\n          filter.saturate(params[0], multiply);\n          break;\n        case EffectType.Sepia:\n          filter.sepia(multiply);\n          break;\n        case EffectType.Technicolor:\n          filter.technicolor(multiply);\n          break;\n        case EffectType.ToBGR:\n          filter.toBGR(multiply);\n          break;\n        case EffectType.Vintage:\n          filter.vintage(multiply);\n          break;\n      }\n    }\n  });\n};\n\nconst ColorMatrixFilter: React.FC<AlphaFilterProps> = (props) => {\n  const filter = useFilter(new PIXI.filters.ColorMatrixFilter());\n  const { update } = useContext(RenderingContext);\n  const { alpha = 1, children } = props;\n\n  const reducer = useCallback((state: EffectState, action: EffectAction): EffectState => {\n    const { id } = action.value;\n    let index, effects;\n\n    switch (action.type) {\n      case EffectActionType.UpdateEffect:\n        effects = [...state.effects];\n        if (action.value.effect !== undefined) {\n          index = state.effects.indexOf(id);\n          state.effectMap.set(id, action.value);\n\n          if (index < 0) {\n            effects.push(id);\n          }\n          return {\n            ...state,\n            effects\n          };\n        } else {\n          return state;\n        }\n      case EffectActionType.RemoveEffect:\n        index = state.effects.indexOf(id);\n        if (index >= 0) {\n          effects = [...state.effects];\n          effects.splice(index, 1);\n          state.effectMap.delete(id);\n          return {\n            ...state,\n            effects\n          };\n        } else {\n          return state;\n        }\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, {\n    effects: [],\n    effectMap: new Map()\n  });\n\n  const updateEffect = useCallback((value: EffectValue) => {\n    dispatch({ type: EffectActionType.UpdateEffect, value });\n  }, []);\n  const removeEffect = useCallback((id: string) => {\n    dispatch({\n      type: EffectActionType.RemoveEffect,\n      value: {\n        id\n      }\n    });\n  }, []);\n\n  useFilterProps(filter, {\n    alpha\n  });\n\n  useEffect(() => {\n    updateColorMatrix(filter, state);\n    update();\n  }, [filter, state, update]);\n\n  return (\n    <PixiFilter item={filter} {...props}>\n      <EffectContext.Provider value={{ updateEffect, removeEffect }}>{children}</EffectContext.Provider>\n    </PixiFilter>\n  );\n};\n\nexport default ColorMatrixFilter;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BlackAndWhiteEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.BlackAndWhite\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default BlackAndWhiteEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { BrightnessEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BrightnessEffect: React.FC<BrightnessEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Brightness,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default BrightnessEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BrowniEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Browni\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default BrowniEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { ColorToneProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ColorToneEffect: React.FC<ColorToneProps> = ({ multiply = true, enabled = true, desaturation, toned, lightColor, darkColor }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.ColorTone,\n      params: [desaturation, toned, lightColor, darkColor]\n    });\n  }, [id, multiply, enabled, updateEffect, desaturation, toned, lightColor, darkColor]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default ColorToneEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { ContrastEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ContrastEffect: React.FC<ContrastEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Contrast,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default ContrastEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst DesaturateEffect: React.FC<EffectProps> = ({ enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply: false,\n      enabled,\n      effect: EffectType.Desaturate\n    });\n  }, [id, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default DesaturateEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { GreyScaleEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst GreyScaleEffect: React.FC<GreyScaleEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.GreyScale,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default GreyScaleEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { HueEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst HueEffect: React.FC<HueEffectProps> = ({ multiply = true, enabled = true, rotation = 0 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Hue,\n      params: [rotation]\n    });\n  }, [id, multiply, enabled, updateEffect, rotation]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default HueEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst KodachromeEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Kodachrome\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default KodachromeEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst LsdEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Lsd\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default LsdEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst NegativeEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Negative\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default NegativeEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { NightEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst NightEffect: React.FC<NightEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Night,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default NightEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst PolaroidEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Polaroid\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default PolaroidEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { PredatorEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst PredatorEffect: React.FC<PredatorEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Predator,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default PredatorEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { SaturateEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst SaturateEffect: React.FC<SaturateEffectProps> = ({ multiply = true, enabled = true, amount = 0.5 }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Saturate,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default SaturateEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst SepiaEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Sepia\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default SepiaEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst TechnicolorEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Technicolor\n    });\n\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default TechnicolorEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ToBGREffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.ToBGR\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default ToBGREffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext } from '../../contexts';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst VintageEffect: React.FC<EffectProps> = ({ multiply = true, enabled = true }) => {\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Vintage\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return null;\n};\n\nexport default VintageEffect;\n"],"sourceRoot":""}