{"version":3,"sources":["views/CodeViewer.tsx","../../src/contexts/AnimationContext.ts","../../src/props/PixiSpriteProps.ts","../../src/props/PixiTilingSpriteProps.ts","../../src/contexts/ParentContext.ts","../../src/contexts/RenderingContext.ts","../../src/contexts/ShapeTextureContext.ts","../../src/contexts/ShapeStyleContext.ts","../../src/contexts/GraphicsContext.ts","../../src/contexts/SpeedContext.ts","../../src/contexts/TextureContext.ts","../../src/contexts/PointerContext.ts","../../src/contexts/EffectContext.ts","../../src/contexts/PointsContext.ts","../../src/contexts/ImpactContext.ts","../../src/contexts/PropsContext.ts","../../src/props/PixiAnimatedSpriteProps.ts","../../src/props/PixiFilterProps.ts","../../src/props/PixiGraphicsProps.ts","../../src/types/AnimationContextTypes.ts","../../src/types/RenderingContextTypes.ts","../../src/types/SpeedContextTypes.ts","../../src/types/GenericTypes.ts","../../src/types/EventTypes.ts","../../src/types/BlendModesTypes.ts","../../src/types/GraphicsTypes.ts","../../src/types/TextStyleTypes.ts","../../src/types/EffectTypes.ts","../../src/types/ImpactContextType.tsx","../../src/types/PointerContextType.ts","../../src/hooks/genericHooks.ts","../../src/hooks/propHooks.ts","../../src/hooks/contextHooks.ts","../../src/components/shapes/Holes.tsx","../../src/components/PixiCanvas.tsx","../../src/components/PixiDisplayObject.tsx","../../src/components/PixiHtmlContainer.tsx","../../src/components/PixiContainer.tsx","../../src/components/PixiTexture.tsx","../../src/components/PixiRenderTexture.tsx","../../src/components/PixiSprite.tsx","../../src/components/PixiGraphics.tsx","../../src/components/PixiTilingSprite.tsx","../../src/components/PixiAnimatedSprite.tsx","../../src/components/PixiText.tsx","../../src/components/PixiMask.tsx","../../src/components/shapes/ShapeTexture.tsx","../../src/components/shapes/LineStyle.tsx","../../src/components/shapes/FillStyle.tsx","../../src/components/shapes/Shape.tsx","../../src/components/shapes/Rectangle.tsx","../../src/components/shapes/Circle.tsx","../../src/components/shapes/Ellipse.tsx","../../src/components/shapes/Star.tsx","../../src/components/shapes/Polygon.tsx","../../src/components/shapes/Point.tsx","../../src/components/shapes/Arc.tsx","../../src/components/shapes/BezierCurve.tsx","../../src/components/shapes/QuadraticCurve.tsx","../../src/components/shapes/ArcCurve.tsx","../../src/components/shapes/Path.tsx","../../src/filters/PixiFilter.tsx","../../src/filters/AlphaFilter.tsx","../../src/filters/BlurFilter.tsx","../../src/filters/FXAAFilter.tsx","../../src/filters/NoiseFilter.tsx","../../src/filters/ColorMatrixFilter.tsx","../../src/filters/effects/BlackAndWhiteEffect.tsx","../../src/filters/effects/BrightnessEffect.tsx","../../src/filters/effects/BrowniEffect.tsx","../../src/filters/effects/ColorToneEffect.tsx","../../src/filters/effects/ContrastEffect.tsx","../../src/filters/effects/DesaturateEffect.tsx","../../src/filters/effects/GreyScaleEffect.tsx","../../src/filters/effects/HueEffect.tsx","../../src/filters/effects/KodachromeEffect.tsx","../../src/filters/effects/LsdEffect.tsx","../../src/filters/effects/NegativeEffect.tsx","../../src/filters/effects/NightEffect.tsx","../../src/filters/effects/PolaroidEffect.tsx","../../src/filters/effects/PredatorEffect.tsx","../../src/filters/effects/SaturateEffect.tsx","../../src/filters/effects/SepiaEffect.tsx","../../src/filters/effects/TechnicolorEffect.tsx","../../src/filters/effects/ToBGREffect.tsx","../../src/filters/effects/VintageEffect.tsx"],"names":["SyntaxHighlighter","registerLanguage","tsx","CodeViewer","src","children","useState","code","setCode","useEffect","fetch","then","response","text","style","darcula","language","showLineNumbers","AnimationContext","React","frameId","elapsed","fps","averageFps","minFps","maxFps","history","defaultParentContext","parent","x","y","width","height","top","left","ParentContext","defaultRenderingContext","update","getTexture","renderId","stage","RenderingContext","ShapeTextureContext","setMatrix","setTexture","ShapeStyleContext","setFillStyle","setLineStyle","setHoles","GraphicsContext","drawShape","removeShape","initialSpeedState","speed","SpeedContext","play","pause","increase","decrease","setSpeed","TextureContext","textures","resources","PointerContext","over","selected","EffectContext","updateEffect","removeEffect","PointsContext","points","addPoint","removePoint","ImpactContext","items","updateItem","removeItem","PropsContext","properties","updateProperties","isSprite","element","SpriteProps","TilingSpriteProps","isAnimatedSprite","item","FilterProps","GraphicsProps","AnimationActionType","RenderingContextAction","SpeedContextAction","CursorType","Overflow","GenericProps","SpecialKeys","KeyboardActionType","Events","BlendModes","BlendModesMap","Map","PIXI","LineJoin","LineCap","ShapeAction","Shapes","PointAction","TextAlign","TextGradient","TextBaseline","TextWhiteLine","FontStyle","FontVariant","FontWeight","defaultTextStyle","align","breakWords","dropShadow","dropShadowAlpha","dropShadowAngle","Math","dropShadowBlur","dropShadowColor","dropShadowDistance","fill","fillGradientType","fillGradientStops","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","letterSpacing","lineHeight","lineJoin","miterLimit","padding","stroke","strokeThickness","textBaseline","trim","whiteSpace","wordWrap","wordWrapWidth","leading","EffectType","EffectActionType","ImpactAction","useId","id","v4","state","setState","useElement","useContext","useRelativePosition","setLeft","setTop","anchor","setAnchor","updateKeyboardPressList","list","action","Array","useKeyboard","keys","keyList","setKeyList","useReducer","keyPressList","updateKeyPressList","reset","useCallback","type","index","value","JSON","onKeyUpdate","key","event","updateValue","keyValid","altValid","controlValid","shiftValid","onKeyDown","onKeyUp","window","useFilter","useLoadedTexture","textureName","context","texture","loadedTexture","useTexture","currentScale","sprite","useTextureUpdate","emptyIndex","isPointIncluded","area","isImpact","item1","item2","checkItem","isChildOf","className","filter","name","area1","progressTimer","currentTime","useAnimatedEffect","effect","frameRate","time","updateTime","frame","updateFrameId","progressFrame","dependencies","useAnimatedProgress","duration","loop","timeLine","updateTimeLine","position","progressTimeLine","propsToMap","map","Object","props","useUpdatedProps","updatedProperties","setUpdatedProperties","updatedMap","propMap","newValue","getMapUpdate","useGenericProps","rectangle","updateGenericProps","useSpriteProps","updateSpriteProps","useGraphicsProps","updateGraphicsProps","graphics","useAlignedPosition","parentWidth","parentHeight","alignX","alignY","useTilingSpriteProps","updateTilingSpriteProps","useFilterProps","updateFilterProps","useEvent","callback","PointerContextActionType","cleanName","textureLoaded","loadedResources","isTouchEvent","usePointerContext","retina","offset","setOffset","reducer","pointerContext","triggerUpdatePosition","multiplier","updateMousePosition","offsetX","offsetY","updateTouchPosition","touch","clientX","clientY","StartOver","EndOver","updatePosition","isMouseEvent","pointerStart","StartInteraction","pointerEnd","EndInteraction","pointerOver","pointerCancel","useShapeTextureContext","matrix","usePointsContext","pointMap","pointId","dispatch","useMemo","values","point","impactReducer","impact","usePropsContext","defaultStyle","right","margin","isDesktop","PixiCanvas","background","overflow","All","filterArea","onUpdate","onAfterRender","onResize","onAllTexturesLoaded","onLoadProgress","onInteractionUpdate","onMouseDown","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onPointerCancel","onPointerDown","onPointerMove","onPointerOut","onPointerOver","onPointerUp","onTouchCancel","onTouchEnd","onTouchMove","onTouchStart","canvasId","impactContext","useImpactContext","speedContext","Increase","Decrease","Play","Pause","useSpeedContext","textureContext","textureResource","loaderResource","cleanedName","resource","frames","resourceName","count","existingResource","console","useTextureContext","animationContext","initialState","latestFps","fpsHistory","MAX_HISTORY_SIZE","a","useAnimationContext","renderingContext","canvasReference","canvas","setCanvas","renderer","setRenderer","Update","render","Render","reference","document","newRenderer","view","transparent","antialias","useRenderingContext","genericParentContext","containerStyle","setContainerStyle","childrenContainerStyle","setChildrenContainerStyle","parentContext","setParentContext","newStyle","newChildrenStyle","allTextureLoaderHandler","loadProgressHandler","loader","onMouseMoveHandler","onMouseDownHandler","onMouseOutHandler","onMouseOverHandler","onMouseUpHandler","onPointerCancelHandler","onPointerDownHandler","onPointerMoveHandler","onPointerOutHandler","onPointerOverHandler","onPointerUpHandler","onTouchCancelHandler","onTouchEndHandler","onTouchMoveHandler","onTouchStartHandler","canvasWidth","canvasHeight","PixiDisplayObject","impactArea","impactClassName","impactFilter","onImpact","detectImpacts","setX","setY","setWidth","setHeight","transform","setTransform","useParentContext","alpha","angle","buttonMode","cursor","None","interactive","rotation","visible","zIndex","pivotX","pivotY","scaleX","scaleY","skewX","skewY","sortableChildren","SORTABLE_CHILDREN","hitArea","onClick","onMouseUpOutside","onPointerTap","onPointerUpOutside","onRemovedFrom","onRightClick","onRightDown","onRightUp","onRightUpOutside","onTap","onTouchEndOutside","onAdded","onRemoved","onChildAdded","callbacks","useDisplayObjectEvents","setArea","setFilter","setClassName","impactItem","setImpactItem","impactsDetected","setImpactsDetected","impacts","impactRectangle","detectionArea","useImpactDetection","PixiHtmlContainer","propsContext","setStyle","active","setActive","display","PixiContainer","container","PixiTexture","onLoad","textureId","loadCallback","PixiRenderTexture","parentRenderContext","parentUpdate","newTexture","PixiSprite","anchorX","anchorY","blendMode","Normal","roundPixels","tint","undefined","definition","lastPoint","i","updateGraphics","cap","join","color","holeLastPoint","hole","PixiGraphics","shapes","shape","shapeMap","PixiTilingSprite","tileWidth","setTileWidth","tileHeight","setTileHeight","clampMargin","tileX","tileY","tileScaleX","tileScaleY","uvRespectAnchor","PixiAnimatedSprite","playing","resetOnStop","currentFrame","onAnimationComplete","setFrameId","initialFrame","setInitialFrame","frameCount","setTextures","setCount","textureList","frameList","useFrames","initialTime","isNaN","Reset","useFrameAnimation","PixiText","String","isTextureMode","PixiMask","enabled","ShapeTexture","newMatrix","useTransformMatrix","LineStyle","alignment","Butt","Miter","native","shapeTextureContext","FillStyle","Shape","params","styleContext","line","holes","useShapeStyleContext","Rectangle","borderRadius","setParams","shapeType","setShapeType","Circle","radius","Ellipse","Star","innerRadius","noParams","Polygon","pointsContext","Point","setPoint","Arc","startAngle","endAngle","anticlockwise","BezierCurve","xFrom","yFrom","xTo","yTo","controlX","controlY","controlX2","controlY2","QuadraticCurve","ArcCurve","Path","HoleAction","holesReducer","Holes","holeState","updateHoles","addHole","removeHole","PixiFilter","autoFit","resolution","FILTER_RESOLUTION","effects","setEffects","AlphaFilter","BlurFilter","blur","blurX","blurY","quality","repeatEdgePixels","FXAAFilter","FXAA_SEED","noise","seed","ColorMatrixFilter","effectMap","effectData","multiply","updateColorMatrix","BlackAndWhiteEffect","BlackAndWhite","BrightnessEffect","amount","BrowniEffect","Browni","ColorToneEffect","desaturation","toned","lightColor","darkColor","ContrastEffect","DesaturateEffect","Desaturate","GreyScaleEffect","HueEffect","KodachromeEffect","Kodachrome","LsdEffect","Lsd","NegativeEffect","Negative","NightEffect","PolaroidEffect","Polaroid","PredatorEffect","SaturateEffect","SepiaEffect","Sepia","TechnicolorEffect","Technicolor","ToBGREffect","ToBGR","VintageEffect","Vintage"],"mappings":"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KAwDA,SAAYC,GACVA,YACAA,sBACAA,sBACAA,oBACAA,UACAA,kBACAA,gBACAA,cACAA,oBACAA,0BACAA,gBACAA,gBACAA,kBACAA,0BACAA,gBACAA,YACAA,YACAA,wBACAA,wBACAA,0BACAA,oBACAA,YACAA,cACAA,sBACAA,kBACAA,wBACAA,gBACAA,cACAA,gBACAA,YACAA,kBACAA,sBACAA,gBACAA,kBACAA,gBACAA,cACAA,cACAA,kBACAA,gBACAA,cACAA,kBACAA,4BACAA,kBACAA,oBACAA,cACAA,kBACAA,cACAA,gBACAA,cACAA,gBACAA,kBACAA,kBACAA,oBACAA,UACAA,UACAA,UACAA,UACAA,UACAA,UACAA,UACAA,UACAA,UACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,YACAA,gBACAA,gBACAA,gBACAA,gBACAA,oBACAA,aACAA,aACAA,sBACAA,YACAA,kBACAA,sBACAA,wBArFF,CAAYA,MAAZ,KAiGA,SAAYC,GACVA,iBACAA,qBAFF,CAAYA,MAAZ,KCnMA,SAAYC,GACVA,gBACAA,wBACAA,wBACAA,sBACAA,wBACAA,oBACAA,kCACAA,gCACAA,4BACAA,4BACAA,0BACAA,4BACAA,0BACAA,wBACAA,sCACAA,4BACAA,0BACAA,wBACAA,oBACAA,kCACAA,YACAA,4BACAA,sBACAA,oCACAA,wBACAA,0BACAA,gBACAA,oBACAA,0BA7BF,CAAYA,MAAZ,KCJA,SAAYC,GACVA,iBACAA,uBACAA,qBACAA,6BACAA,+BACAA,uBACAA,+BACAA,yBACAA,qBACAA,uBACAA,0BACAA,sBACAA,8BACAA,8BACAA,kBACAA,0BACAA,gCACAA,4BACAA,oBACAA,wBACAA,8BACAA,0BACAA,gCACAA,wBACAA,8BACAA,8BACAA,0BACAA,sBACAA,wBACAA,0BACAA,4BACAA,kBAhCF,CAAYA,MAAZ,KAmCO,IChBP,EAMA,EAMA,EAgBA,EAiIA,EChLA,EAMA,EAKA,EASA,EAMA,EAMA,EAKA,EFFaC,GAAgB,IAAIC,I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","file":"static/js/2.cd0a05a0.chunk.js","sourcesContent":["import React, { ReactText, useEffect, useState } from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nconst CodeViewer: React.FC<{src?: string, children?: ReactText}> = ({ src, children = '' }) => {\n  const [code, setCode] = useState(children);\n\n  useEffect(() => {\n    if (src) {\n      fetch(src).then(response => response.text()).then(text => setCode(text));\n    }\n  }, [src]);\n\n  useEffect(() => {\n    if (children) {\n      setCode(children);\n    }\n  }, [children]);\n\n  return (\n    // @ts-ignore\n    <SyntaxHighlighter style={darcula} language={'tsx'} showLineNumbers>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeViewer;\n","import { AnimationContextType } from '../types';\nimport React from 'react';\n\nconst defaultAnimationContext: AnimationContextType = {\n  frameId: 0,\n  elapsed: 0,\n  fps: 0,\n  averageFps: 0,\n  minFps: 0,\n  maxFps: 0,\n  history: []\n};\n\nexport const AnimationContext = React.createContext(defaultAnimationContext);\n","import { GenericEventType, GenericType, ImpactType, PropValue } from '../types';\nimport { GraphicsPropsType } from './PixiGraphicsProps';\n\nexport const isSprite = (element: PIXI.DisplayObject): element is PIXI.Sprite => {\n  return element.isSprite;\n};\n\nexport type UpdatableTextureType = {\n  texture?: string;\n};\n\nexport type SpritePropsType = {\n  alignX?: number;\n  alignY?: number;\n  anchorX?: number;\n  anchorY?: number;\n  roundPixels?: boolean;\n};\n\nexport enum SpriteProps {\n  AnchorX = 'anchorX',\n  AnchorY = 'anchorY',\n  RoundPixels = 'roundPixels'\n}\n\nexport type SpritePropsMap = Map<SpriteProps, PropValue>;\n\nexport type PixiSpriteProps = GenericType & GenericEventType & GraphicsPropsType & ImpactType & SpritePropsType & UpdatableTextureType;\n","import { PropValue } from '../types';\nimport { PixiSpriteProps } from './PixiSpriteProps';\n\nexport type TilingSpritePropsType = {\n  clampMargin?: number;\n  tileX?: number;\n  tileY?: number;\n  tileScaleX?: number;\n  tileScaleY?: number;\n  uvRespectAnchor?: boolean;\n};\n\nexport enum TilingSpriteProps {\n  ClampMargin = 'clampMargin',\n  TileX = 'tileX',\n  TileY = 'tileY',\n  TileScaleX = 'tileScaleX',\n  TileScaleY = 'tileScaleY',\n  UvRespectAnchor = 'uvRespectAnchor'\n}\n\nexport type TilingSpritePropsMap = Map<TilingSpriteProps, PropValue>;\n\nexport type PixiTilingSpriteProps = PixiSpriteProps & TilingSpritePropsType;\n","import React from 'react';\nimport { ParentContextType } from '../types';\nimport * as PIXI from 'pixi.js';\n\nexport const defaultParentContext: ParentContextType<PIXI.Container> = {\n  parent: new PIXI.Container(),\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0\n};\n\nexport const ParentContext = React.createContext(defaultParentContext);\n","import * as PIXI from 'pixi.js';\nimport { RenderingContextType } from '../types';\nimport React from 'react';\n\nconst defaultRenderingContext: RenderingContextType = {\n  update: () => null,\n  getTexture: () => undefined,\n  width: 0,\n  height: 0,\n  renderId: 0,\n  stage: new PIXI.Container()\n};\n\nexport const RenderingContext = React.createContext(defaultRenderingContext);\n","import { ShapeTextureType } from '../types';\nimport React from 'react';\n\nconst defaultShapeTextureContext: ShapeTextureType = {\n  setMatrix: () => null,\n  setTexture: () => null\n};\n\nexport const ShapeTextureContext = React.createContext(defaultShapeTextureContext);\n","import { ShapeStyleType } from '../types';\nimport React from 'react';\n\nconst defaultShapeStyleContext: ShapeStyleType = {\n  setFillStyle: () => null,\n  setLineStyle: () => null,\n  setHoles: () => null\n};\n\nexport const ShapeStyleContext = React.createContext(defaultShapeStyleContext);\n","import { GraphicsContextType } from '../types';\nimport React from 'react';\n\nconst defaultGraphicsContext: GraphicsContextType = {\n  drawShape: () => null,\n  removeShape: () => null\n};\n\nexport const GraphicsContext = React.createContext(defaultGraphicsContext);\n","import { SpeedContextType, SpeedState } from '../types';\nimport React from 'react';\n\nconst defaultSpeedContext: SpeedContextType = {\n  speed: 1,\n  play: () => null,\n  pause: () => null,\n  increase: () => null,\n  decrease: () => null,\n  setSpeed: () => null\n};\n\nexport const initialSpeedState: SpeedState = {\n  speed: 1\n};\n\nexport const SpeedContext = React.createContext(defaultSpeedContext);\n","import React from 'react';\nimport { TextureContextType } from '../types';\n\nexport const TextureContext = React.createContext<TextureContextType>({ textures: {}, resources: {} });\n","import React from 'react';\nimport { PointerContextType } from '../types';\n\nexport const PointerContext = React.createContext<PointerContextType>({ x: 0, y: 0, over: false, selected: false });\n","import React from 'react';\nimport { EffectContextType } from '../types';\n\nexport const EffectContext = React.createContext<EffectContextType>({\n  updateEffect: () => null,\n  removeEffect: () => null\n});\n","import React from 'react';\nimport { PointsContextType } from '../types';\n\nconst defaultPointsContext: PointsContextType = {\n  points: [],\n  addPoint: () => null,\n  removePoint: () => null\n};\n\nexport const PointsContext = React.createContext(defaultPointsContext);\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { ImpactContextType } from '../types';\n\nconst defaultImpactContext: ImpactContextType<PIXI.Container> = {\n  items: [],\n  updateItem: () => null,\n  removeItem: () => null\n};\n\nexport const ImpactContext = React.createContext<ImpactContextType<PIXI.Container>>(defaultImpactContext);\n","import React from 'react';\nimport { PixiProps, PropsContextType } from '../types';\n\nconst defaultPropsContext: PropsContextType<PixiProps> = {\n  properties: {},\n  updateProperties: () => null\n};\n\nexport const PropsContext = React.createContext(defaultPropsContext);\n","import * as PIXI from 'pixi.js';\nimport { EventListener } from '../types';\nimport { PixiSpriteProps } from './PixiSpriteProps';\n\nexport const isAnimatedSprite = (item: PIXI.Container): item is PIXI.AnimatedSprite => {\n  return !!((item as unknown) as PIXI.AnimatedSprite).textures;\n};\n\nexport type AnimatedSpriteProps = {\n  frames?: string[] | string;\n  playing?: boolean;\n  resetOnStop?: boolean;\n  currentFrame?: number;\n  fps?: number;\n  onAnimationComplete?: EventListener;\n};\n\nexport type PixiAnimatedSpriteProps = PixiSpriteProps & AnimatedSpriteProps;\n","import * as PIXI from 'pixi.js';\nimport { BlendModes, PropValue } from '../types';\n\nexport type AbstractFilterProps = {\n  autoFit?: boolean;\n  blendMode?: BlendModes;\n  enabled?: boolean;\n  padding?: number;\n  resolution?: number;\n};\n\nexport enum FilterProps {\n  AutoFit = 'autoFit',\n  BlendMode = 'blendMode',\n  Enabled = 'enabled',\n  Padding = 'padding',\n  Resolution = 'resolution',\n  Alpha = 'alpha',\n  Blur = 'blur',\n  BlurX = 'blurX',\n  BlurY = 'blurY',\n  Quality = 'quality',\n  RepeatEdgePixels = 'repeatEdgePixels',\n  Noise = 'noise',\n  Seed = 'seed'\n}\n\nexport type FilterPropsMap = Map<FilterProps, PropValue>;\n\nexport type PixiFilterProps<T extends PIXI.Filter> = AbstractFilterProps & {\n  item: T;\n};\n\nexport type BlurFilterProps = AbstractFilterProps & {\n  blur?: number;\n  blurX?: number;\n  blurY?: number;\n  quality?: number;\n  repeatEdgePixels?: boolean;\n};\n\nexport type AlphaFilterProps = AbstractFilterProps & {\n  alpha?: number;\n};\n\nexport type NoiseFilterProps = AbstractFilterProps & {\n  noise?: number;\n  seed?: number;\n};\n\nexport type AllFilterProps = AbstractFilterProps | BlurFilterProps | AlphaFilterProps | NoiseFilterProps;\n","import { BlendModes, GenericEventType, GenericType, ImpactType, PropValue } from '../types';\n\nexport type GraphicsPropsType = {\n  blendMode?: BlendModes;\n  tint?: number;\n};\n\nexport enum GraphicsProps {\n  BlendMode = 'blendMode',\n  Tint = 'tint'\n}\n\nexport type GraphicsPropsMap = Map<GraphicsProps, PropValue>;\n\nexport type PixiGraphicsProps = GenericType & GenericEventType & ImpactType & GraphicsPropsType;\n","export type AnimationContextType = {\n  fps: number;\n  averageFps: number;\n  maxFps: number;\n  minFps: number;\n  frameId: number;\n  elapsed: number;\n  history: number[];\n};\n\nexport type AnimationState = {\n  time: number;\n  frame: number;\n};\n\nexport enum AnimationActionType {\n  Progress,\n  Reset\n}\n\nexport type AnimationAction = {\n  type: AnimationActionType;\n  value?: number;\n};\n","import * as PIXI from 'pixi.js';\n\nexport type RenderingContextType = {\n  update: () => void;\n  width: number;\n  height: number;\n  stage: PIXI.Container;\n  renderId: number;\n  getTexture: <T extends PIXI.DisplayObject>(container: T, width: number, height: number) => PIXI.RenderTexture | undefined;\n};\n\nexport enum RenderingContextAction {\n  Update,\n  Render\n}\n\nexport type RenderingContextState = {\n  width: number;\n  height: number;\n  renderId: number;\n  update: boolean;\n};\n\nexport type RenderAction = {\n  type: RenderingContextAction;\n};\n","export type SpeedContextType = {\n  speed: number;\n  increase: () => void;\n  decrease: () => void;\n  setSpeed: (value: number) => void;\n  pause: () => void;\n  play: () => void;\n};\n\nexport enum SpeedContextAction {\n  Increase,\n  Decrease,\n  Pause,\n  Play,\n  Set\n}\n\nexport type SpeedAction = {\n  type: SpeedContextAction;\n  value?: number;\n};\n\nexport type SpeedState = {\n  speed: number;\n};\n","import { Area } from './GraphicsTypes';\n\nexport enum CursorType {\n  Auto = 'auto',\n  Default = 'default',\n  None = 'none',\n  ContextMenu = 'context-menu',\n  Help = 'help',\n  Pointer = 'pointer',\n  Progress = 'progress',\n  Wait = 'wait',\n  Cell = 'cell',\n  CrossHair = 'crosshair',\n  Text = 'text',\n  VerticalText = 'vertical-text',\n  Alias = 'alias',\n  Copy = 'copy',\n  Move = 'move',\n  NoDrop = 'no-drop',\n  NotAllowed = 'not-allowed',\n  Grab = 'grab',\n  Grabbing = 'grabbing',\n  AllScroll = 'all-scroll',\n  ColResize = 'col-resize',\n  RowResize = 'row-resize',\n  NorthResize = 'n-resize',\n  EastResize = 'e-resize',\n  SouthResize = 's-resize',\n  WestResize = 'w-resize',\n  NorthEastResize = 'ne-resize',\n  NorthWestResize = 'nw-resize',\n  SouthEastResize = 'se-resize',\n  SouthWestResize = 'sw-resize',\n  EastWestResize = 'ew-resize',\n  NorthSouthResize = 'ns-resize',\n  NorthEastSouthWestResize = 'nesw-resize',\n  NorthWestSouthEastResize = 'nwse-resize',\n  ZoomIn = 'zoom-in',\n  ZoomOut = 'zoom-out'\n}\n\nexport enum Overflow {\n  None,\n  Horizontal,\n  Vertical,\n  All\n}\n\nexport enum GenericProps {\n  Alpha = 'alpha',\n  Angle = 'angle', // Rotation in degrees\n  ButtonMode = 'buttonMode',\n  Cursor = 'cursor',\n  Interactive = 'interactive',\n  Name = 'name',\n  PivotX = 'pivotX',\n  PivotY = 'pivotY',\n  Rotation = 'rotation', // Rotation in radians\n  ScaleX = 'scaleX',\n  ScaleY = 'scaleY',\n  SkewX = 'skewX',\n  SkewY = 'skewY',\n  Visible = 'visible',\n  X = 'x',\n  Y = 'y',\n  ZIndex = 'zIndex',\n  Width = 'width',\n  Height = 'height',\n  SortableChildren = 'sortableChildren',\n  FilterArea = 'filterArea',\n  HitArea = 'hitArea'\n}\n\nexport type PropValue = boolean | string | string[] | number | Area | undefined;\nexport type GenericPropsMap = Map<GenericProps, PropValue>;\n\nexport type TransformType = {\n  x?: number;\n  y?: number;\n  pivotX?: number;\n  pivotY?: number;\n  scaleX?: number;\n  scaleY?: number;\n  rotation?: number; // Rotation in radians\n  skewX?: number;\n  skewY?: number;\n};\n\nexport type GenericType = TransformType & {\n  alpha?: number;\n  angle?: number; // Rotation in degrees\n  buttonMode?: boolean;\n  cursor?: CursorType;\n  interactive?: boolean;\n  name?: string;\n  visible?: boolean;\n  zIndex?: number;\n  width?: number;\n  height?: number;\n  sortableChildren?: boolean;\n  filterArea?: Area;\n  hitArea?: Area;\n};\n\nexport enum SpecialKeys {\n  Alt = 'Alt',\n  AltGraph = 'AltGraph',\n  CapsLock = 'CapsLock',\n  Control = 'Control',\n  Fn = 'Fn',\n  FnLock = 'FnLock',\n  Hyper = 'Hyper',\n  Meta = 'Meta',\n  NumLock = 'NumLock',\n  ScrollLock = 'ScrollLock',\n  Shift = 'Shift',\n  Super = 'Super',\n  Symbol = 'Symbol',\n  SymbolLock = 'SymbolLock',\n  Enter = 'Enter',\n  Tab = 'Tab',\n  Space = ' ',\n  ArrowDown = 'ArrowDown',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  ArrowUp = 'ArrowUp',\n  End = 'End',\n  Home = 'Home',\n  PageDown = 'PageDown',\n  PageUp = 'PageUp',\n  Backspace = 'Backspace',\n  Clear = 'Clear',\n  Copy = 'Copy',\n  CrSel = 'CrSel',\n  Cut = 'Cut',\n  Delete = 'Delete',\n  EraseEof = 'EraseEof',\n  ExSel = 'ExSel',\n  Insert = 'Insert',\n  Paste = 'Paste',\n  Redo = 'Redo',\n  Undo = 'Undo',\n  Accept = 'Accept',\n  Again = 'Again',\n  Attn = 'Attn',\n  Cancel = 'Cancel',\n  ContextMenu = 'ContextMenu',\n  Escape = 'Escape',\n  Execute = 'Execute',\n  Find = 'Find',\n  Finish = 'Finish',\n  Help = 'Help',\n  Pause = 'Pause',\n  Play = 'Play',\n  Props = 'Props',\n  Select = 'Select',\n  ZoomIn = 'ZoomIn',\n  ZoomOut = 'ZoomOut',\n  F1 = 'F1',\n  F2 = 'F2',\n  F3 = 'F3',\n  F4 = 'F4',\n  F5 = 'F5',\n  F6 = 'F6',\n  F7 = 'F7',\n  F8 = 'F8',\n  F9 = 'F9',\n  F10 = 'F10',\n  F11 = 'F11',\n  F12 = 'F12',\n  F13 = 'F13',\n  F14 = 'F14',\n  F15 = 'F15',\n  F16 = 'F16',\n  F17 = 'F17',\n  F18 = 'F18',\n  F19 = 'F19',\n  F20 = 'F20',\n  Soft1 = 'Soft1',\n  Soft2 = 'Soft2',\n  Soft3 = 'Soft3',\n  Soft4 = 'Soft4',\n  Decimal = 'Decimal',\n  Key11 = '11',\n  Key12 = '12',\n  Multiply = 'Multiply',\n  Add = 'Add',\n  Divide = 'Divide',\n  Subtract = 'Subtract',\n  Separator = 'Separator'\n}\n\nexport type Key =\n  | string\n  | {\n      key: string;\n      alt?: boolean;\n      control?: boolean;\n      shift?: boolean;\n    };\n\nexport enum KeyboardActionType {\n  Set,\n  Reset\n}\n\nexport type KeyboardAction = {\n  type: KeyboardActionType;\n  value: boolean;\n  index: number;\n};\n","import { GenericEventType } from './GenericEventTypes';\n\nexport type EventListener = (...args: any[]) => void;\n\nexport type EventsType = GenericEventType;\n\nexport enum Events {\n  Click = 'click',\n  MouseDown = 'mousedown',\n  MouseMove = 'mousemove',\n  MouseOut = 'mouseout',\n  MouseOver = 'mouseover',\n  MouseUp = 'mouseup',\n  MouseUpOutside = 'mouseupoutside',\n  PointerCancel = 'pointercancel',\n  PointerDown = 'pointerdown',\n  PointerMove = 'pointermove',\n  PointerOut = 'pointerout',\n  PointerOver = 'pointerover',\n  PointerTap = 'pointertap',\n  PointerUp = 'pointerup',\n  PointerUpOutside = 'pointerupoutside',\n  RemovedFrom = 'removedfrom',\n  RightClick = 'rightclick',\n  RightDown = 'rightdown',\n  RightUp = 'rightup',\n  RightUpOutside = 'rightupoutside',\n  Tap = 'tap',\n  TouchCancel = 'touchcancel',\n  TouchEnd = 'touchend',\n  TouchEndOutside = 'touchendoutside',\n  TouchMove = 'touchmove',\n  TouchStart = 'touchstart',\n  Added = 'added',\n  Removed = 'removed',\n  ChildAdded = 'childAdded'\n}\n","import * as PIXI from 'pixi.js';\n\nexport enum BlendModes {\n  Add,\n  AddNpm,\n  Color,\n  ColorBurn,\n  ColorDodge,\n  Darken,\n  Difference,\n  DstAtop,\n  DstIn,\n  DstOut,\n  DstOver,\n  Erase,\n  Exclusion,\n  HardLight,\n  Hue,\n  Lighten,\n  Luminosity,\n  Multiply,\n  None,\n  Normal,\n  NormalNpm,\n  Overlay,\n  Saturation,\n  Screen,\n  ScreenNpm,\n  SoftLight,\n  SrcAtop,\n  SrcIn,\n  SrcOut,\n  SrcOver,\n  Subtract,\n  Xor\n}\n\nexport const BlendModesMap = new Map<BlendModes, number>([\n  [BlendModes.Add, PIXI.BLEND_MODES.ADD],\n  [BlendModes.AddNpm, PIXI.BLEND_MODES.ADD_NPM],\n  [BlendModes.Color, PIXI.BLEND_MODES.COLOR],\n  [BlendModes.ColorBurn, PIXI.BLEND_MODES.COLOR_BURN],\n  [BlendModes.ColorDodge, PIXI.BLEND_MODES.COLOR_DODGE],\n  [BlendModes.Darken, PIXI.BLEND_MODES.DARKEN],\n  [BlendModes.Difference, PIXI.BLEND_MODES.DIFFERENCE],\n  [BlendModes.DstAtop, PIXI.BLEND_MODES.DST_ATOP],\n  [BlendModes.DstIn, PIXI.BLEND_MODES.DST_IN],\n  [BlendModes.DstOut, PIXI.BLEND_MODES.DST_OUT],\n  [BlendModes.DstOver, PIXI.BLEND_MODES.DST_OVER],\n  [BlendModes.Erase, PIXI.BLEND_MODES.ERASE],\n  [BlendModes.Exclusion, PIXI.BLEND_MODES.EXCLUSION],\n  [BlendModes.HardLight, PIXI.BLEND_MODES.HARD_LIGHT],\n  [BlendModes.Hue, PIXI.BLEND_MODES.HUE],\n  [BlendModes.Lighten, PIXI.BLEND_MODES.LIGHTEN],\n  [BlendModes.Luminosity, PIXI.BLEND_MODES.LUMINOSITY],\n  [BlendModes.Multiply, PIXI.BLEND_MODES.MULTIPLY],\n  [BlendModes.None, PIXI.BLEND_MODES.NONE],\n  [BlendModes.Normal, PIXI.BLEND_MODES.NORMAL],\n  [BlendModes.NormalNpm, PIXI.BLEND_MODES.NORMAL_NPM],\n  [BlendModes.Overlay, PIXI.BLEND_MODES.OVERLAY],\n  [BlendModes.Saturation, PIXI.BLEND_MODES.SATURATION],\n  [BlendModes.Screen, PIXI.BLEND_MODES.SCREEN],\n  [BlendModes.ScreenNpm, PIXI.BLEND_MODES.SCREEN_NPM],\n  [BlendModes.SoftLight, PIXI.BLEND_MODES.SOFT_LIGHT],\n  [BlendModes.SrcAtop, PIXI.BLEND_MODES.SRC_ATOP],\n  [BlendModes.SrcIn, PIXI.BLEND_MODES.SRC_IN],\n  [BlendModes.SrcOut, PIXI.BLEND_MODES.SRC_OUT],\n  [BlendModes.SrcOver, PIXI.BLEND_MODES.SRC_OVER],\n  [BlendModes.Subtract, PIXI.BLEND_MODES.SUBTRACT],\n  [BlendModes.Xor, PIXI.BLEND_MODES.XOR]\n]);\n","import * as PIXI from 'pixi.js';\n\nexport type ShapeTextureType = {\n  texture?: PIXI.Texture;\n  matrix?: PIXI.Matrix;\n  setTexture: (texture?: PIXI.Texture) => void;\n  setMatrix: (matrix?: PIXI.Matrix) => void;\n};\n\nexport type FillDefinition = FillStyleType & TextureStyleType;\nexport type LineDefinition = LineStyleType & TextureStyleType;\n\nexport type ShapeStyleType = {\n  fill?: FillDefinition;\n  line?: LineDefinition;\n  holes?: ShapeType[];\n  setFillStyle: (fill?: FillDefinition) => void;\n  setLineStyle: (line?: LineDefinition) => void;\n  setHoles: (holes?: ShapeType[]) => void;\n};\n\nexport enum LineJoin {\n  Miter = 'miter',\n  Round = 'round',\n  Bevel = 'bevel'\n}\n\nexport enum LineCap {\n  Butt = 'butt',\n  Round = 'round',\n  Square = 'square'\n}\n\nexport enum ShapeAction {\n  UpdateShape,\n  RemoveShape\n}\n\nexport type GraphicsState = {\n  shapes: string[];\n  shapeMap: Map<string, DrawShapeDefinition>;\n};\n\nexport type ShapeActionType = {\n  type: ShapeAction;\n  id: string;\n  definition?: DrawShapeDefinition;\n};\n\nexport enum Shapes {\n  Path,\n  Circle,\n  Ellipse,\n  Polygon,\n  Rect,\n  RoundedRect,\n  Star,\n  Arc,\n  ArcCurve,\n  BezierCurve,\n  QuadraticCurve\n}\n\nexport type ShapeGenericType = {\n  name?: string;\n};\n\nexport type ShapeType = ShapeGenericType & {\n  type: Shapes;\n  params: number[];\n  points?: PIXI.Point[];\n};\n\ntype TextureStyleType = {\n  texture?: PIXI.Texture;\n  matrix?: PIXI.Matrix;\n};\n\nexport type FillStyleType = {\n  alpha?: number;\n  color?: number;\n};\n\nexport type LineStyleType = FillStyleType & {\n  alignment?: number;\n  cap?: LineCap;\n  join?: LineJoin;\n  miterLimit?: number;\n  native?: boolean;\n  width?: number;\n};\n\nexport type DrawShapeDefinition = ShapeType & {\n  id: string;\n  fill?: FillDefinition;\n  line?: LineDefinition;\n  holes?: ShapeType[];\n};\n\nexport type GraphicsContextType = {\n  drawShape: (definition: DrawShapeDefinition) => void;\n  removeShape: (id: string) => void;\n};\n\nexport type Coords = {\n  x: number;\n  y: number;\n};\n\nexport type Area = Coords & {\n  width: number;\n  height: number;\n};\n\nexport type RectangleType = ShapeGenericType &\n  Area & {\n    borderRadius?: number;\n  };\n\nexport type CircleType = ShapeGenericType &\n  Coords & {\n    radius: number;\n  };\n\nexport type QuadraticCurveType = ShapeGenericType & {\n  xFrom?: number;\n  yFrom?: number;\n  xTo: number;\n  yTo: number;\n  controlX: number;\n  controlY: number;\n};\n\nexport type ArcCurveType = QuadraticCurveType & {\n  radius: number\n};\n\nexport type BezierCurveType = QuadraticCurveType & {\n  controlX2: number;\n  controlY2: number;\n};\n\nexport type ArcType = ShapeGenericType &\n  CircleType &\n  Coords & {\n    startAngle: number;\n    endAngle: number;\n    anticlockwise?: boolean;\n  };\n\nexport type EllipseType = ShapeGenericType & Area;\n\nexport type RegularPolygonType = CircleType & {\n  sides?: number;\n  rotation?: number;\n};\n\nexport type StarType = CircleType & {\n  points?: number;\n  innerRadius?: number;\n  rotation?: number;\n};\n\nexport type PointProps = Coords & {\n  id?: string;\n};\n\nexport type PointsContextType = {\n  points: PIXI.Point[];\n  addPoint: (id: string, point: Coords) => void;\n  removePoint: (id: string) => void;\n};\n\nexport type PointsState = {\n  points: string[];\n  pointMap: Map<string, Coords>;\n};\n\nexport enum PointAction {\n  Add,\n  Remove\n}\n\nexport type PointActionType = {\n  type: PointAction;\n  id: string;\n  point?: Coords;\n};\n","import { LineJoin } from './GraphicsTypes';\n\nexport enum TextAlign {\n  Left = 'left',\n  Center = 'center',\n  Right = 'right'\n}\n\nexport enum TextGradient {\n  LinearVertical,\n  LinearHorizontal\n}\n\nexport enum TextBaseline {\n  Alphabetic = 'alphabetic',\n  Top = 'top',\n  Hanging = 'hanging',\n  Middle = 'middle',\n  Ideographic = 'ideographic',\n  Bottom = 'bottom'\n}\n\nexport enum TextWhiteLine {\n  Normal = 'normal',\n  Pre = 'pre',\n  PreLine = 'pre-line'\n}\n\nexport enum FontStyle {\n  Normal = 'normal',\n  Italic = 'italic',\n  Oblique = 'oblique'\n}\n\nexport enum FontVariant {\n  Normal = 'normal',\n  SmallCaps = 'small-caps'\n}\n\nexport enum FontWeight {\n  Normal = 'Normal',\n  Bold = 'Bold',\n  Bolder = 'Bolder',\n  Lighter = 'Lighter',\n  W100 = '100',\n  W200 = '200',\n  W300 = '300',\n  W400 = '400',\n  W500 = '500',\n  W600 = '600',\n  W700 = '700',\n  W800 = '800',\n  W900 = '900'\n}\n\nexport type TextStyle = {\n  align?: TextAlign;\n  breakWords?: boolean;\n  dropShadow?: boolean;\n  dropShadowAlpha?: number;\n  dropShadowAngle?: number;\n  dropShadowBlur?: number;\n  dropShadowColor?: string;\n  dropShadowDistance?: number;\n  fill?: string;\n  fillGradientType?: TextGradient;\n  fillGradientStops?: string[];\n  fontFamily?: string;\n  fontSize?: number;\n  fontStyle?: FontStyle;\n  fontVariant?: FontVariant;\n  fontWeight?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  lineJoin?: LineJoin;\n  miterLimit?: number;\n  padding?: number;\n  stroke?: string;\n  strokeThickness?: number;\n  textBaseline?: TextBaseline;\n  trim?: boolean;\n  whiteSpace?: TextWhiteLine;\n  wordWrap?: boolean;\n  wordWrapWidth?: number;\n  leading?: number;\n};\n\nexport const defaultTextStyle: TextStyle = {\n  align: TextAlign.Left,\n  breakWords: false,\n  dropShadow: false,\n  dropShadowAlpha: 1,\n  dropShadowAngle: Math.PI / 6,\n  dropShadowBlur: 0,\n  dropShadowColor: 'black',\n  dropShadowDistance: 5,\n  fill: 'black',\n  fillGradientType: TextGradient.LinearHorizontal,\n  fillGradientStops: [],\n  fontFamily: 'Arial',\n  fontSize: 26,\n  fontStyle: FontStyle.Normal,\n  fontVariant: FontVariant.Normal,\n  fontWeight: FontWeight.Normal,\n  letterSpacing: 0,\n  lineHeight: 0,\n  lineJoin: LineJoin.Miter,\n  miterLimit: 10,\n  padding: 0,\n  stroke: 'black',\n  strokeThickness: 0,\n  textBaseline: TextBaseline.Alphabetic,\n  trim: false,\n  whiteSpace: TextWhiteLine.Pre,\n  wordWrap: false,\n  wordWrapWidth: 100,\n  leading: 0\n};\n","export enum EffectType {\n  BlackAndWhite,\n  Brightness,\n  Browni,\n  ColorTone,\n  Contrast,\n  Desaturate,\n  GreyScale,\n  Hue,\n  Kodachrome,\n  Lsd,\n  Negative,\n  Night,\n  Polaroid,\n  Predator,\n  Saturate,\n  Sepia,\n  Technicolor,\n  ToBGR,\n  Vintage\n}\n\nexport enum EffectActionType {\n  UpdateEffect,\n  RemoveEffect\n}\n\nexport type EffectValue = {\n  id: string;\n  multiply?: boolean;\n  effect?: EffectType;\n  params?: number[];\n  enabled?: boolean;\n};\n\nexport type EffectAction = {\n  type: EffectActionType;\n  value: EffectValue;\n};\n\nexport type EffectState = {\n  effects: string[];\n  effectMap: Map<string, EffectValue>;\n};\n\nexport type EffectContextType = {\n  updateEffect: (value: EffectValue) => void;\n  removeEffect: (id: string) => void;\n};\n","import PIXI from 'pixi.js';\nimport { Area } from './GraphicsTypes';\n\nexport type ImpactContextItem<T extends PIXI.Container> = {\n  item: T;\n  area: Area;\n  className: string;\n  filter: string[];\n};\n\nexport type ImpactType = {\n  impactArea?: Area;\n  impactClassName?: string;\n  impactFilter?: string[];\n  onImpact?: (impacts: string[]) => void;\n  detectImpacts?: boolean;\n};\n\nexport type ImpactContextType<T extends PIXI.Container> = {\n  items: ImpactContextItem<T>[],\n  updateItem: (item: ImpactContextItem<T>) => void,\n  removeItem: (item: ImpactContextItem<T>) => void\n};\n\nexport enum ImpactAction {\n  Update, Remove\n}\n\nexport type ImpactActionType<T extends PIXI.Container> = {\n  type: ImpactAction,\n  item: ImpactContextItem<T>\n}\n","export type PointerContextType = {\n  x: number;\n  y: number;\n  over: boolean;\n  selected: boolean;\n};\n\nexport enum PointerContextActionType {\n  UpdatePosition,\n  StartOver,\n  EndOver,\n  StartInteraction,\n  EndInteraction\n}\nexport type PointerContextAction = {\n  type: PointerContextActionType;\n  x?: number;\n  y?: number;\n};\n","import * as PIXI from 'pixi.js';\nimport { DependencyList, EffectCallback, useCallback, useContext, useEffect, useMemo, useReducer, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { AnimationContext, ImpactContext, ParentContext, RenderingContext, ShapeTextureContext, TextureContext } from '../contexts';\nimport { isAnimatedSprite, isSprite } from '../props';\nimport {\n  AnimationAction,\n  AnimationActionType,\n  AnimationState,\n  Area,\n  ImpactContextItem,\n  Key,\n  KeyboardAction,\n  KeyboardActionType\n} from '../types';\n\nexport const useId = (id?: string) => {\n  const [state, setState] = useState(v4());\n\n  useEffect(() => {\n    setState(id ? id : v4());\n  }, [id]);\n\n  return state;\n};\n\nexport const useElement = <T extends PIXI.Container>(item: T) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const [element] = useState(item);\n\n  useEffect(() => {\n    return () => {\n      element.destroy();\n    };\n  }, [element]);\n\n  useEffect(() => {\n    element.setParent(parent);\n    update();\n  }, [element, parent, update]);\n\n  return element;\n};\n\nexport const useRelativePosition = <T extends PIXI.Sprite>(item?: T) => {\n  const [left, setLeft] = useState(0);\n  const [top, setTop] = useState(0);\n  const [anchor, setAnchor] = useState(new PIXI.Point(0, 0));\n\n  useEffect(() => {\n    if (item && item.anchor) {\n      setAnchor(item.anchor);\n    } else {\n      setAnchor(new PIXI.Point(0, 0));\n    }\n  }, [item]);\n\n  useEffect(() => {\n    setLeft(-anchor.x);\n    setTop(-anchor.y);\n  }, [anchor.x, anchor.y]);\n\n  return [left, top];\n};\n\nconst updateKeyboardPressList = (list: boolean[], action: KeyboardAction): boolean[] => {\n  switch (action.type) {\n    case KeyboardActionType.Reset:\n      return new Array(action.index).fill(action.value);\n    case KeyboardActionType.Set:\n      list[action.index] = action.value;\n      return [...list];\n  }\n};\n\nexport const useKeyboard = (...keys: Key[]) => {\n  const [keyList, setKeyList] = useState<Key[]>([]);\n  const [keyPressList, updateKeyPressList] = useReducer(updateKeyboardPressList, []);\n\n  const reset = useCallback(() => {\n    updateKeyPressList({ type: KeyboardActionType.Reset, index: keyList.length, value: false });\n  }, [keyList]);\n\n  useEffect(() => {\n    if (JSON.stringify(keys) !== JSON.stringify(keyList)) {\n      setKeyList(keys);\n    }\n  }, [keys, keyList]);\n\n  useEffect(() => {\n    reset();\n  }, [keyList, reset]);\n\n  const onKeyUpdate = useCallback(\n    (event: KeyboardEvent, updateValue: boolean) => {\n      keyList.forEach((key, index) => {\n        if (typeof key === 'string') {\n          if (event.key === key) {\n            updateKeyPressList({ type: KeyboardActionType.Set, index, value: updateValue });\n            event.preventDefault();\n          }\n        } else {\n          const keyValid = event.key === key.key;\n          const altValid = key.alt === undefined ? true : key.alt === event.altKey;\n          const controlValid = key.control === undefined ? true : key.control === event.ctrlKey;\n          const shiftValid = key.shift === undefined ? true : key.shift === event.shiftKey;\n\n          if (keyValid && altValid && controlValid && shiftValid) {\n            updateKeyPressList({ type: KeyboardActionType.Set, index, value: updateValue });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    [keyList]\n  );\n\n  const onKeyDown = useCallback((event: KeyboardEvent) => onKeyUpdate(event, true), [onKeyUpdate]);\n  const onKeyUp = useCallback((event: KeyboardEvent) => onKeyUpdate(event, false), [onKeyUpdate]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    window.addEventListener('keyup', onKeyUp);\n    window.addEventListener('blur', reset);\n\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('keyup', onKeyUp);\n      window.removeEventListener('blur', reset);\n    };\n  }, [onKeyDown, onKeyUp, reset]);\n\n  return keyPressList;\n};\n\nexport const useFilter = <T extends PIXI.Filter>(item: T) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const [element] = useState(item);\n\n  useEffect(() => {\n    if (parent && !parent.filters) {\n      parent.filters = [];\n    }\n    if (parent && parent.filters.indexOf(element) < 0) {\n      parent.filters.push(element);\n      update();\n    }\n    return () => {\n      const index = parent.filters.indexOf(element);\n      if (index >= 0) {\n        parent.filters.splice(index, 1);\n        update();\n      }\n    };\n  }, [element, parent, update]);\n\n  return element;\n};\n\nexport const useLoadedTexture = (textureName?: string) => {\n  const { textures: context } = useContext(TextureContext);\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>(\n    typeof textureName === 'string' && context[textureName] instanceof PIXI.Texture ? (context[textureName] as PIXI.Texture) : undefined\n  );\n\n  useEffect(() => {\n    if (typeof textureName === 'string' && context[textureName] instanceof PIXI.Texture) {\n      const loadedTexture = context[textureName] as PIXI.Texture;\n\n      if (loadedTexture && loadedTexture !== texture) {\n        setTexture(loadedTexture);\n      }\n    }\n  }, [texture, context, textureName]);\n\n  return texture;\n};\n\nexport const useTexture = <T extends PIXI.Sprite>(sprite: T, textureName?: string) => {\n  const { update } = useContext(RenderingContext);\n  const texture = useLoadedTexture(textureName);\n\n  useEffect(() => {\n    if (texture) {\n      const currentScale = sprite.scale.clone();\n      sprite.texture = texture;\n      sprite.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [texture, sprite, update]);\n};\n\nexport const useFrames = <T extends PIXI.AnimatedSprite>(sprite: T, frames?: string[] | string): number => {\n  const { textures: context } = useContext(TextureContext);\n  const { update } = useContext(RenderingContext);\n  const [textures, setTextures] = useState<PIXI.Texture[]>([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    if (frames) {\n      const textureList: PIXI.Texture[] = [];\n      let frameList: string[] = [];\n\n      if (Array.isArray(frames)) {\n        frameList = frames;\n      } else if (Array.isArray(context[frames])) {\n        frameList = context[frames] as string[];\n      }\n      frameList.forEach((frameName) => {\n        const loadedTexture = context[frameName];\n\n        if (loadedTexture instanceof PIXI.Texture) {\n          textureList.push(loadedTexture);\n        }\n      });\n\n      setTextures(textureList);\n    }\n  }, [context, frames]);\n\n  useEffect(() => {\n    if (textures && textures.length > 0) {\n      const currentScale = sprite.scale.clone();\n      sprite.textures = textures;\n      sprite.texture = textures[0];\n      sprite.scale.copyFrom(currentScale);\n      update();\n    }\n  }, [textures, sprite, update]);\n\n  useEffect(() => {\n    setCount(sprite.textures.length);\n  }, [sprite.textures]);\n\n  return count;\n};\n\nexport const useTextureUpdate = (texture?: PIXI.Texture) => {\n  const { parent } = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const { setTexture } = useContext(ShapeTextureContext);\n\n  useEffect(() => {\n    if (texture) {\n      if (isSprite(parent)) {\n        const currentScale = parent.scale.clone();\n        if (isAnimatedSprite(parent)) {\n          const emptyIndex = parent.textures.indexOf(PIXI.Texture.EMPTY);\n          if (emptyIndex >= 0) {\n            parent.textures = [texture];\n          } else {\n            parent.textures = [...parent.textures, texture];\n          }\n        }\n        parent.texture = texture;\n        parent.scale.copyFrom(currentScale);\n        update();\n      } else {\n        setTexture(texture);\n      }\n    }\n  }, [parent, texture, update, setTexture]);\n};\n\nexport const useFrameAnimation = (initialFrame: number, frameCount: number, fps: number, playing: boolean): number => {\n  const { frameId, elapsed } = useContext(AnimationContext);\n\n  const reducer = useCallback(\n    (state: AnimationState, action: AnimationAction): AnimationState => {\n      let time, frame;\n      const initialTime = initialFrame * (1000 / fps);\n      const duration = (1000 / fps) * frameCount;\n      if (isNaN(state.time) || isNaN(state.frame)) {\n        action.type = AnimationActionType.Reset;\n      }\n      switch (action.type) {\n        case AnimationActionType.Progress:\n          time = (state.time + (action.value || 0)) % duration;\n          frame = Math.floor((time / 1000) * fps) % frameCount;\n          return { time, frame };\n        case AnimationActionType.Reset:\n          if (state.time !== initialTime) {\n            return {\n              frame: initialFrame,\n              time: initialTime\n            };\n          } else {\n            return state;\n          }\n        default:\n          return state;\n      }\n    },\n    [initialFrame, fps, frameCount]\n  );\n\n  const [{ frame }, dispatch] = useReducer(reducer, { time: initialFrame * (1000 / fps), frame: initialFrame });\n\n  useEffect(() => {\n    if (playing) {\n      dispatch({ type: AnimationActionType.Progress, value: elapsed });\n    } else {\n      dispatch({ type: AnimationActionType.Reset });\n    }\n  }, [frameId, elapsed, playing, dispatch]);\n\n  return frame;\n};\n\nconst isChildOf = <T extends PIXI.Container>(item1: T, item2: T): boolean => {\n  let checkItem = item1;\n\n  while (checkItem) {\n    if (checkItem === item2) {\n      return true;\n    }\n    checkItem = checkItem.parent as T;\n  }\n\n  return false;\n};\n\nconst isPointIncluded = (x: number, y: number, area: Area): boolean =>\n  x >= area.x && x < area.x + area.width && y > area.y && y <= area.y + area.height;\n\nconst isImpactArea = (area1: Area, area2: Area): boolean =>\n  isPointIncluded(area1.x, area1.y, area2) ||\n  isPointIncluded(area1.x, area1.y + area1.height, area2) ||\n  isPointIncluded(area1.x + area1.width, area1.y, area2) ||\n  isPointIncluded(area1.x + area1.width, area1.y + area1.height, area2);\n\nconst isFilteredClass = (className: string, filter: string[]): boolean =>\n  filter.length === 0 || filter.map((name) => name.toLowerCase()).indexOf(className.toLowerCase()) >= 0;\n\nconst isImpact = <T extends PIXI.Container>(item1: ImpactContextItem<T>, item2: ImpactContextItem<T>): boolean =>\n  item1.item !== item2.item &&\n  !isChildOf(item1.item, item2.item) &&\n  isFilteredClass(item1.className, item2.filter) &&\n  isImpactArea(item1.area, item2.area);\n\nexport const useImpactDetection = <T extends PIXI.Container>(\n  item: T,\n  impactArea?: Area,\n  impactClassName?: string,\n  impactFilter?: string[],\n  detectImpacts?: boolean,\n  onImpact?: (impacts: string[]) => void\n) => {\n  const [area, setArea] = useState(impactArea);\n  const [filter, setFilter] = useState<string[]>([]);\n  const [className, setClassName] = useState('');\n  const [impactItem, setImpactItem] = useState<ImpactContextItem<T> | undefined>();\n  const { items, updateItem, removeItem } = useContext(ImpactContext);\n  const [impactsDetected, setImpactsDetected] = useState<string[]>([]);\n  const impacts = useMemo(\n    () => (impactItem ? items.filter((item) => isImpact(item, impactItem)) : []).map((item) => item.className).sort(),\n    [items, impactItem]\n  );\n\n  useEffect(() => {\n    if (detectImpacts) {\n      const impactRectangle = item.getBounds();\n      if (impactRectangle.width > 1 && impactRectangle.height > 1) {\n        const detectionArea: Area = {\n          x: impactRectangle.x + (impactArea ? impactArea.x : 0),\n          y: impactRectangle.y + (impactArea ? impactArea.y : 0),\n          width: impactArea ? impactArea.width : impactRectangle.width,\n          height: impactArea ? impactArea.height : impactRectangle.height\n        };\n\n        setArea(detectionArea);\n      }\n    }\n  }, [\n    item,\n    item.worldTransform.a,\n    item.worldTransform.b,\n    item.worldTransform.c,\n    item.worldTransform.d,\n    item.worldTransform.tx,\n    item.worldTransform.ty,\n    impactArea,\n    detectImpacts\n  ]);\n\n  useEffect(() => {\n    const list = (impactFilter || []).sort();\n\n    if (filter.join() !== list.join()) {\n      setFilter(list);\n    }\n  }, [filter, impactFilter]);\n\n  useEffect(() => {\n    setClassName(impactClassName || item.name);\n  }, [item.name, impactClassName, setClassName]);\n\n  useEffect(() => {\n    if (impacts.join() !== impactsDetected.join()) {\n      setImpactsDetected(impacts);\n    }\n  }, [impacts, impactsDetected]);\n\n  useEffect(() => {\n    if (area && detectImpacts) {\n      setImpactItem({\n        item,\n        filter,\n        className,\n        area\n      });\n    } else {\n      setImpactItem(undefined);\n    }\n  }, [item, area, filter, className, detectImpacts]);\n\n  useEffect(() => {\n    if (impactItem) {\n      updateItem(impactItem);\n    }\n    return () => {\n      if (impactItem) {\n        removeItem(impactItem);\n      }\n    };\n  }, [updateItem, removeItem, impactItem]);\n\n  useEffect(() => {\n    if (onImpact && impactsDetected.length > 0 && detectImpacts) {\n      onImpact(impactsDetected);\n    }\n  }, [onImpact, impactsDetected, detectImpacts]);\n};\n\nconst progressTimer = (currentTime: number, delta: number) => currentTime + delta;\nconst progressFrame = (time: number, frameRate: number) => Math.floor(time / (1000 / frameRate));\nconst progressTimeLine = (time: number, duration: number) => time / duration;\n\nexport const useAnimatedEffect = (effect: EffectCallback, dependencies?: DependencyList, frameRate = 60): void => {\n  const { elapsed, frameId } = useContext(AnimationContext);\n  const [time, updateTime] = useReducer(progressTimer, 0);\n  const [frame, updateFrameId] = useState(0);\n\n  useEffect(() => updateTime(elapsed), [elapsed, frameId]);\n  useEffect(() => updateFrameId(progressFrame(time, frameRate)), [time, frameRate]);\n\n  useEffect(effect, dependencies ? [...dependencies, frame] : [frame]);\n};\n\nexport const useAnimatedProgress = (duration: number, loop = false): number => {\n  const { elapsed, frameId } = useContext(AnimationContext);\n  const [time, updateTime] = useReducer(progressTimer, 0);\n  const [timeLine, updateTimeLine] = useState(0);\n\n  useEffect(() => updateTime(elapsed), [elapsed, frameId]);\n  useEffect(() => {\n    const position = progressTimeLine(time, duration);\n    const value = loop ? position % 1 : Math.min(1, position);\n\n    if (value !== timeLine) {\n      updateTimeLine(value);\n    }\n  }, [time, duration, loop, timeLine]);\n\n  return timeLine;\n};\n","import * as PIXI from 'pixi.js';\nimport { useContext, useEffect, useState } from 'react';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport {\n  AllFilterProps,\n  FilterProps,\n  FilterPropsMap,\n  GraphicsProps,\n  GraphicsPropsMap,\n  GraphicsPropsType,\n  SpriteProps,\n  SpritePropsMap,\n  SpritePropsType,\n  TilingSpriteProps,\n  TilingSpritePropsMap,\n  TilingSpritePropsType\n} from '../props';\nimport { BlendModes, BlendModesMap, Events, GenericEventType, GenericProps, GenericPropsMap, GenericType, Area } from '../types';\nimport { PixiPropsValue } from '../types/PropsContextType';\n\nconst propsToMap = <S extends { [K in string]?: PixiPropsValue }>(props: S) => {\n  const map = new Map<string, PixiPropsValue>();\n\n  Object.keys(props).forEach((key: string) => {\n    map.set(key, props[key] as PixiPropsValue);\n  });\n\n  return map;\n};\n\nconst getMapUpdate = <S extends { [K in string]?: PixiPropsValue }>(state: Map<string, PixiPropsValue>, props: S) => {\n  const propMap = propsToMap(props);\n  const updatedMap = new Map<string, PixiPropsValue>();\n\n  state.forEach((value, key) => {\n    const newValue = propMap.get(key) as PixiPropsValue;\n    if (value !== newValue) {\n      state.set(key, newValue);\n      updatedMap.set(key, newValue);\n    }\n  });\n\n  return updatedMap;\n};\n\nconst updateGenericProps = <T extends PIXI.Container>(item: T, updatedProperties?: GenericPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    let rectangle;\n    switch (key) {\n      case GenericProps.Alpha:\n        item.alpha = value as number;\n        break;\n      case GenericProps.Angle:\n        item.angle = value as number;\n        break;\n      case GenericProps.ButtonMode:\n        item.buttonMode = value as boolean;\n        break;\n      case GenericProps.Cursor:\n        item.cursor = value as string;\n        break;\n      case GenericProps.Height:\n        item.height = (value as number) || item.height;\n        break;\n      case GenericProps.Interactive:\n        item.interactive = value as boolean;\n        break;\n      case GenericProps.Name:\n        item.name = value as string;\n        break;\n      case GenericProps.PivotX:\n        item.pivot.x = value as number;\n        break;\n      case GenericProps.PivotY:\n        item.pivot.y = value as number;\n        break;\n      case GenericProps.Rotation:\n        item.rotation = value as number;\n        break;\n      case GenericProps.ScaleX:\n        item.scale.x = value as number;\n        break;\n      case GenericProps.ScaleY:\n        item.scale.y = value as number;\n        break;\n      case GenericProps.SkewX:\n        item.skew.x = value as number;\n        break;\n      case GenericProps.SkewY:\n        item.skew.y = value as number;\n        break;\n      case GenericProps.SortableChildren:\n        item.sortableChildren = value as boolean;\n        break;\n      case GenericProps.Visible:\n        item.visible = value as boolean;\n        break;\n      case GenericProps.Width:\n        item.width = (value as number) || item.width;\n        break;\n      case GenericProps.X:\n        item.x = value as number;\n        break;\n      case GenericProps.Y:\n        item.y = value as number;\n        break;\n      case GenericProps.ZIndex:\n        item.zIndex = value as number;\n        break;\n      case GenericProps.FilterArea:\n        if (value) {\n          rectangle = value as Area;\n          item.filterArea = new PIXI.Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          item.filterArea = null;\n        }\n        break;\n      case GenericProps.HitArea:\n        if (value) {\n          rectangle = value as Area;\n          item.hitArea = new PIXI.Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          item.hitArea = null;\n        }\n        break;\n    }\n  });\n};\n\nconst updateSpriteProps = <T extends PIXI.Sprite>(item: T, updatedProperties?: SpritePropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case SpriteProps.AnchorX:\n        if (value) {\n          item.anchor.x = value as number;\n        }\n        break;\n      case SpriteProps.AnchorY:\n        if (value) {\n          item.anchor.y = value as number;\n        }\n        break;\n      case SpriteProps.RoundPixels:\n        item.roundPixels = value as boolean;\n        break;\n    }\n  });\n};\n\nconst updateGraphicsProps = <T extends PIXI.Sprite | PIXI.Graphics>(item: T, updatedProperties?: GraphicsPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case GraphicsProps.BlendMode:\n        item.blendMode = BlendModesMap.get(value as BlendModes) || 0;\n        break;\n      case GraphicsProps.Tint:\n        item.tint = value as number;\n        break;\n    }\n  });\n};\n\nconst updateTilingSpriteProps = <T extends PIXI.TilingSprite>(item: T, updatedProperties?: TilingSpritePropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case TilingSpriteProps.ClampMargin:\n        item.clampMargin = value as number;\n        break;\n      case TilingSpriteProps.TileScaleX:\n        item.tileScale.x = value as number;\n        break;\n      case TilingSpriteProps.TileScaleY:\n        item.tileScale.y = value as number;\n        break;\n      case TilingSpriteProps.TileX:\n        item.tilePosition.x = (value as number) % item.texture.width;\n        break;\n      case TilingSpriteProps.TileY:\n        item.tilePosition.y = (value as number) % item.texture.height;\n        break;\n      case TilingSpriteProps.UvRespectAnchor:\n        item.uvRespectAnchor = value as boolean;\n        break;\n    }\n  });\n};\n\nconst updateFilterProps = <T extends PIXI.Filter>(item: T, updatedProperties?: FilterPropsMap) => {\n  updatedProperties?.forEach((value, key) => {\n    switch (key) {\n      case FilterProps.AutoFit:\n        item.autoFit = value as boolean;\n        break;\n      case FilterProps.BlendMode:\n        item.blendMode = BlendModesMap.get(value as BlendModes) || 0;\n        break;\n      case FilterProps.Enabled:\n        item.enabled = value as boolean;\n        break;\n      case FilterProps.Padding:\n        item.padding = value as number;\n        break;\n      case FilterProps.Resolution:\n        item.resolution = value as number;\n        break;\n      case FilterProps.Alpha:\n        ((item as unknown) as PIXI.filters.AlphaFilter).alpha = value as number;\n        break;\n      case FilterProps.Blur:\n        ((item as unknown) as PIXI.filters.BlurFilter).blur = value as number;\n        break;\n      case FilterProps.BlurX:\n        ((item as unknown) as PIXI.filters.BlurFilter).blurX = value as number;\n        break;\n      case FilterProps.BlurY:\n        ((item as unknown) as PIXI.filters.BlurFilter).blurY = value as number;\n        break;\n      case FilterProps.Quality:\n        ((item as unknown) as PIXI.filters.BlurFilter).quality = value as number;\n        break;\n      case FilterProps.RepeatEdgePixels:\n        ((item as unknown) as PIXI.filters.BlurFilter).repeatEdgePixels = value as boolean;\n        break;\n      case FilterProps.Noise:\n        ((item as unknown) as PIXI.filters.NoiseFilter).noise = value as number;\n        break;\n      case FilterProps.Seed:\n        ((item as unknown) as PIXI.filters.NoiseFilter).seed = value as number;\n        break;\n    }\n  });\n};\n\nexport const useUpdatedProps = <S extends { [K in string]?: PixiPropsValue }>(props: S) => {\n  const [state, setState] = useState<Map<string, PixiPropsValue>>(propsToMap(props));\n  const [updatedProperties, setUpdatedProperties] = useState(state);\n\n  useEffect(() => {\n    const updatedMap = getMapUpdate(state, props);\n\n    if (updatedMap.size > 0) {\n      setUpdatedProperties(updatedMap);\n      setState(propsToMap(props));\n    }\n  }, [props, state]);\n\n  return updatedProperties;\n};\n\nexport const useGenericProps = <T extends PIXI.Container>(item: T, props: GenericType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateGenericProps(item, updatedProperties as GenericPropsMap);\n    update();\n  }, [updatedProperties, update, item]);\n};\n\nexport const useSpriteProps = <T extends PIXI.Sprite>(sprite: T, props: SpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateSpriteProps(sprite, updatedProperties as SpritePropsMap);\n    update();\n  }, [updatedProperties, update, sprite]);\n};\n\nexport const useGraphicsProps = <T extends PIXI.Sprite | PIXI.Graphics>(graphics: T, props: GraphicsPropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateGraphicsProps(graphics, updatedProperties as GraphicsPropsMap);\n    update();\n  }, [updatedProperties, update, graphics]);\n};\n\nexport const useTransformMatrix = (\n  x = 0,\n  y = 0,\n  pivotX = 0,\n  pivotY = 0,\n  scaleX = 1,\n  scaleY = 1,\n  rotation = 0, // Rotation in radians\n  skewX = 0,\n  skewY = 0\n) => {\n  const [matrix, setMatrix] = useState(new PIXI.Matrix());\n\n  useEffect(() => {\n    const newMatrix = new PIXI.Matrix();\n\n    newMatrix.setTransform(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY);\n\n    setMatrix(newMatrix);\n  }, [x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY]);\n\n  return matrix;\n};\n\nexport const useAlignedPosition = <T extends PIXI.Sprite>(sprite: T, props: GenericType & SpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const { width: parentWidth, height: parentHeight } = useContext(ParentContext);\n  const { x = 0, y = 0, alignX, alignY } = props;\n\n  useEffect(() => {\n    if (alignX) {\n      sprite.x = parentWidth * alignX + x;\n      sprite.anchor.x = alignX;\n    } else {\n      sprite.x = x;\n    }\n    update();\n  }, [update, sprite, parentWidth, x, alignX]);\n\n  useEffect(() => {\n    if (alignY) {\n      sprite.y = parentHeight * alignY + y;\n      sprite.anchor.y = alignY;\n    } else {\n      sprite.y = y;\n    }\n    update();\n  }, [update, sprite, parentHeight, y, alignY]);\n};\n\nexport const useTilingSpriteProps = <T extends PIXI.TilingSprite>(sprite: T, props: TilingSpritePropsType) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateTilingSpriteProps(sprite, updatedProperties as TilingSpritePropsMap);\n    update();\n  }, [updatedProperties, update, sprite]);\n};\n\nexport const useFilterProps = <T extends PIXI.Filter>(filter: T, props: AllFilterProps) => {\n  const { update } = useContext(RenderingContext);\n  const updatedProperties = useUpdatedProps(props);\n\n  useEffect(() => {\n    updateFilterProps(filter, updatedProperties as FilterPropsMap);\n    update();\n  }, [updatedProperties, update, filter]);\n};\n\nexport const useEvent = <T extends PIXI.Container>(item: T, event: Events, callback?: EventListener) => {\n  useEffect(() => {\n    if (callback) {\n      item?.addListener(event, callback);\n    } else {\n      item?.removeListener(event);\n    }\n    return () => {\n      item?.removeListener(event);\n    };\n  }, [callback, item, event]);\n};\n\nexport const useDisplayObjectEvents = <T extends PIXI.Container>(item: T, callbacks: GenericEventType) => {\n  const {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  } = callbacks;\n\n  useEffect(() => {\n    return () => {\n      item.removeAllListeners();\n    };\n  }, [item]);\n\n  useEvent(item, Events.Click, onClick);\n  useEvent(item, Events.MouseDown, onMouseDown);\n  useEvent(item, Events.MouseMove, onMouseMove);\n  useEvent(item, Events.MouseOut, onMouseOut);\n  useEvent(item, Events.MouseOver, onMouseOver);\n  useEvent(item, Events.MouseUp, onMouseUp);\n  useEvent(item, Events.MouseUpOutside, onMouseUpOutside);\n  useEvent(item, Events.PointerCancel, onPointerCancel);\n  useEvent(item, Events.PointerDown, onPointerDown);\n  useEvent(item, Events.PointerMove, onPointerMove);\n  useEvent(item, Events.PointerOut, onPointerOut);\n  useEvent(item, Events.PointerOver, onPointerOver);\n  useEvent(item, Events.PointerTap, onPointerTap);\n  useEvent(item, Events.PointerUp, onPointerUp);\n  useEvent(item, Events.PointerUpOutside, onPointerUpOutside);\n  useEvent(item, Events.RemovedFrom, onRemovedFrom);\n  useEvent(item, Events.RightClick, onRightClick);\n  useEvent(item, Events.RightDown, onRightDown);\n  useEvent(item, Events.RightUp, onRightUp);\n  useEvent(item, Events.RightUpOutside, onRightUpOutside);\n  useEvent(item, Events.Tap, onTap);\n  useEvent(item, Events.TouchCancel, onTouchCancel);\n  useEvent(item, Events.TouchEnd, onTouchEnd);\n  useEvent(item, Events.TouchEndOutside, onTouchEndOutside);\n  useEvent(item, Events.TouchMove, onTouchMove);\n  useEvent(item, Events.TouchStart, onTouchStart);\n  useEvent(item, Events.Added, onAdded);\n  useEvent(item, Events.Removed, onRemoved);\n  useEvent(item, Events.ChildAdded, onChildAdded);\n};\n","import { Reducer, SyntheticEvent, useCallback, useContext, useEffect, useMemo, useReducer, useState } from 'react';\nimport {\n  SpeedAction,\n  SpeedContextType,\n  SpeedState,\n  SpeedContextAction,\n  RenderingContextType,\n  AnimationContextType,\n  ParentContextType,\n  RenderingContextAction,\n  RenderingContextState,\n  RenderAction,\n  LoadResourceType,\n  TextureContextType,\n  ShapeTextureType,\n  ShapeStyleType,\n  LineDefinition,\n  FillDefinition,\n  PointsState,\n  PointActionType,\n  PointAction,\n  Coords,\n  PointsContextType,\n  ShapeType,\n  ImpactContextType,\n  ImpactContextItem,\n  ImpactAction,\n  ImpactActionType,\n  PixiProps,\n  PropsContextType\n} from '../types';\nimport { initialSpeedState, ParentContext, AnimationContext } from '../contexts';\nimport * as PIXI from 'pixi.js';\nimport { PointerContextAction, PointerContextActionType, PointerContextType } from '../types/PointerContextType';\nimport { ResourceDataType, TextureDataType } from '../types/TextureContextType';\nimport { useRelativePosition } from './genericHooks';\n\nconst MAX_HISTORY_SIZE = 120;\n\nexport const useSpeedContext = (): SpeedContextType => {\n  const reducer = useCallback((state: SpeedState, action: SpeedAction): SpeedState => {\n    switch (action.type) {\n      case SpeedContextAction.Increase:\n        return { speed: state.speed > 0 ? state.speed * 2 : 1 };\n      case SpeedContextAction.Decrease:\n        return { speed: state.speed / 2 };\n      case SpeedContextAction.Pause:\n        return { speed: 0 };\n      case SpeedContextAction.Play:\n        return { speed: 1 };\n      case SpeedContextAction.Set:\n        return { speed: action.value && action.value > 0 ? action.value : state.speed };\n      default:\n        return state;\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, initialSpeedState);\n\n  const increase = useCallback(() => dispatch({ type: SpeedContextAction.Increase }), [dispatch]);\n  const decrease = useCallback(() => dispatch({ type: SpeedContextAction.Decrease }), [dispatch]);\n  const play = useCallback(() => dispatch({ type: SpeedContextAction.Play }), [dispatch]);\n  const pause = useCallback(() => dispatch({ type: SpeedContextAction.Pause }), [dispatch]);\n  const setSpeed = useCallback((value: number) => dispatch({ type: SpeedContextAction.Set, value }), [dispatch]);\n\n  return { ...state, increase, decrease, play, pause, setSpeed };\n};\n\nexport const useAnimationContext = (speed: number): AnimationContextType => {\n  const initialState = useContext(AnimationContext);\n  const reducer = useCallback(\n    (state: AnimationContextType) => {\n      const { frameId, history } = state;\n\n      if (speed > 0) {\n        const latestFps = Math.round(PIXI.Ticker.shared.FPS);\n        const fpsHistory = [latestFps, ...history.slice(0, MAX_HISTORY_SIZE - 1)];\n\n        return {\n          frameId: frameId + 1,\n          elapsed: PIXI.Ticker.shared.deltaMS * speed,\n          fps: latestFps,\n          history: fpsHistory,\n          averageFps: Math.round(fpsHistory.reduce((a, b) => a + b, 0) / fpsHistory.length),\n          minFps: Math.min(...fpsHistory),\n          maxFps: Math.max(...fpsHistory)\n        };\n      } else {\n        return state;\n      }\n    },\n    [speed]\n  );\n  const [context, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    PIXI.Ticker.shared.add(dispatch);\n\n    return () => {\n      PIXI.Ticker.shared.remove(dispatch);\n    };\n  }, [dispatch]);\n\n  return context;\n};\n\nexport const useRenderingContext = (canvasReference: string, frameId: number, background?: number): RenderingContextType => {\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | undefined>(undefined);\n  const [stage] = useState<PIXI.Container>(new PIXI.Container());\n  const [renderer, setRenderer] = useState<PIXI.Renderer | undefined>();\n\n  const reducer = useCallback(\n    (state: RenderingContextState, action: RenderAction): RenderingContextState => {\n      let renderId, width, height, update;\n      switch (action.type) {\n        case RenderingContextAction.Update:\n          return { ...state, update: true };\n        case RenderingContextAction.Render:\n        default:\n          if (canvas && renderer) {\n            update = state.update;\n            width = state.width;\n            height = state.height;\n            renderId = state.renderId;\n            if (width !== canvas.width || height !== canvas.height) {\n              width = canvas.width;\n              height = canvas.height;\n\n              renderer.resize(width, height);\n\n              update = true;\n            }\n\n            if (stage && update) {\n              renderer.render(stage);\n\n              update = false;\n              renderId++;\n            }\n            return { update, width, height, renderId };\n          }\n          return state;\n      }\n    },\n    [renderer, canvas, stage]\n  );\n\n  const [state, dispatch] = useReducer(reducer, { height: 0, width: 0, renderId: 0, update: true });\n\n  const update = useCallback(() => dispatch({ type: RenderingContextAction.Update }), []);\n\n  const render = useCallback(() => dispatch({ type: RenderingContextAction.Render }), []);\n\n  const getTexture = useCallback(\n    <T extends PIXI.DisplayObject>(container: T, width: number, height: number): PIXI.RenderTexture | undefined => {\n      if (renderer) {\n        return renderer.generateTexture(container, PIXI.SCALE_MODES.LINEAR, 1, new PIXI.Rectangle(0, 0, width, height));\n      }\n      return undefined;\n    },\n    [renderer]\n  );\n\n  useEffect(() => {\n    const reference = document.getElementById(canvasReference) as HTMLCanvasElement;\n\n    if (!reference && renderer) {\n      renderer.destroy();\n      setRenderer(undefined);\n    } else if (reference && !renderer) {\n      const newRenderer = new PIXI.Renderer({\n        view: reference,\n        transparent: true,\n        width: reference.width,\n        height: reference.height,\n        antialias: true\n      });\n      setCanvas(reference);\n      setRenderer(newRenderer);\n    }\n  }, [canvasReference, renderer, frameId]);\n\n  useEffect(() => {\n    render();\n  }, [frameId, render]);\n\n  useEffect(() => {\n    if (renderer) {\n      renderer.transparent = !!background;\n      if (background) {\n        renderer.backgroundColor = background;\n      }\n    }\n  }, [renderer, background]);\n\n  return {\n    update,\n    stage,\n    width: state.width,\n    height: state.height,\n    renderId: state.renderId,\n    getTexture\n  };\n};\n\nexport const useParentContext = <T extends PIXI.Container>(parent: T): ParentContextType<T> => {\n  const parentContext = useContext(ParentContext);\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [width, setWidth] = useState(parentContext.width);\n  const [height, setHeight] = useState(parentContext.height);\n  const [left, top] = useRelativePosition((parent as unknown) as PIXI.Sprite | undefined);\n  const [transform, setTransform] = useState<number[] | undefined>();\n\n  useEffect(() => {\n    if (parent) {\n      if (parent.width) {\n        setWidth(parent.width);\n      } else {\n        setWidth(parentContext.width);\n      }\n      if (parent.height) {\n        setHeight(parent.height);\n      } else {\n        setHeight(parentContext.height);\n      }\n    }\n  }, [parent, parent.width, parent.height, parentContext.width, parentContext.height]);\n\n  useEffect(() => {\n    setX(parent.worldTransform.tx);\n    setY(parent.worldTransform.ty);\n    setTransform([\n      parent.worldTransform.a,\n      parent.worldTransform.b,\n      parent.worldTransform.c,\n      parent.worldTransform.d,\n      parent.worldTransform.tx,\n      parent.worldTransform.ty\n    ]);\n  }, [\n    parent.worldTransform.a,\n    parent.worldTransform.b,\n    parent.worldTransform.c,\n    parent.worldTransform.d,\n    parent.worldTransform.tx,\n    parent.worldTransform.ty\n  ]);\n\n  return {\n    parent,\n    x,\n    y,\n    width,\n    height,\n    transform,\n    left: left * width,\n    top: top * height\n  };\n};\n\nconst cleanName = (name: string) => name.replace(/(?:(\\.\\w+?$)|(_image$))/, '');\n\nconst textureLoaded = new Map<string, string>();\n\nlet loadedResources: TextureContextType = { textures: {}, resources: {} };\n\nexport const useTextureContext = (resources: LoadResourceType) => {\n  const reducer = useCallback((state: TextureContextType, action: TextureContextType): TextureContextType => {\n    loadedResources = {\n      textures: { ...loadedResources.textures, ...state.textures, ...action.textures },\n      resources: { ...loadedResources.resources, ...state.resources, ...action.resources }\n    };\n    return loadedResources;\n  }, []);\n  const [context, dispatch] = useReducer(reducer, loadedResources);\n\n  const callback = useCallback(\n    (loader: PIXI.Loader, resource: PIXI.LoaderResource) => {\n      const textureResource: TextureDataType = {};\n      const loaderResource: ResourceDataType = {};\n      const cleanedName = cleanName(resource.name);\n\n      if (resource.texture && !loadedResources[cleanedName]) {\n        textureResource[cleanedName] = resource.texture;\n      } else if (resource.textures) {\n        const frames: string[] = [];\n        Object.keys(resource.textures).forEach((name) => {\n          const texture = resource.textures ? resource.textures[name] : undefined;\n          if (texture) {\n            const resourceName = cleanName(name);\n            textureResource[resourceName] = texture;\n            frames.push(resourceName);\n          }\n        });\n        textureResource[cleanedName] = frames;\n      }\n      loaderResource[cleanedName] = resource;\n\n      dispatch({ textures: textureResource, resources: loaderResource });\n\n      return loader;\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    PIXI.Loader.shared.onLoad.add(callback);\n    return () => {\n      PIXI.Loader.shared.onLoad.detach(callback);\n    };\n  }, [callback]);\n\n  useEffect(() => {\n    let count = 0;\n    Object.keys(resources).forEach((key) => {\n      const existingResource = textureLoaded.get(key);\n      if (!existingResource) {\n        PIXI.Loader.shared.add(key, resources[key]);\n        textureLoaded.set(key, resources[key]);\n        count++;\n      } else if (existingResource !== resources[key]) {\n        console.warn(\n          `Attempt of overriding existing resource ${key} from ${existingResource}\n          to ${resources[key]}. Please use a unique name for your resource.`\n        );\n      }\n    });\n    if (count) {\n      PIXI.Loader.shared.load();\n    }\n  }, [resources]);\n\n  return context;\n};\n\nconst isTouchEvent = (event: Event): event is TouchEvent => {\n  return !!(event as TouchEvent)?.touches;\n};\nconst isMouseEvent = (event: Event): event is MouseEvent => {\n  return !isTouchEvent(event);\n};\n\nexport const usePointerContext = (retina: boolean, width: number, height: number) => {\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n  const reducer = useCallback((state: PointerContextType, action: PointerContextAction): PointerContextType => {\n    switch (action.type) {\n      case PointerContextActionType.StartOver:\n        if (!state.over) {\n          return { ...state, over: true };\n        } else {\n          return state;\n        }\n      case PointerContextActionType.EndOver:\n        if (state.over) {\n          return { ...state, over: false };\n        } else {\n          return state;\n        }\n      case PointerContextActionType.StartInteraction:\n        if (!state.selected) {\n          return { ...state, selected: true };\n        } else {\n          return state;\n        }\n      case PointerContextActionType.EndInteraction:\n        if (state.selected) {\n          return { ...state, selected: false };\n        } else {\n          return state;\n        }\n      case PointerContextActionType.UpdatePosition:\n        if (state.over && action.x && action.y && (action.x !== state.x || action.y !== state.y)) {\n          return { ...state, x: action.x, y: action.y, over: true };\n        } else {\n          return state;\n        }\n    }\n  }, []);\n  const [pointerContext, update] = useReducer(reducer, { x: 0, y: 0, over: false, selected: false });\n  const triggerUpdatePosition = useCallback(\n    (x: number, y: number) => {\n      const multiplier = retina ? 2 : 1;\n      update({ type: PointerContextActionType.UpdatePosition, x: x * multiplier, y: y * multiplier });\n    },\n    [retina]\n  );\n  const updateMousePosition = useCallback(\n    (event: MouseEvent) => {\n      const { offsetX: x, offsetY: y } = event;\n\n      triggerUpdatePosition(x, y);\n\n      return { x, y };\n    },\n    [triggerUpdatePosition]\n  );\n  const updateTouchPosition = useCallback(\n    (event: TouchEvent) => {\n      const touch = event.touches.length > 0 ? event.touches[0] : event.changedTouches[0];\n      if (touch) {\n        const { clientX, clientY } = touch;\n        const x = clientX - offset.x;\n        const y = clientY - offset.y;\n\n        if (x >= 0 && x < width && y >= 0 && y < height) {\n          update({ type: PointerContextActionType.StartOver });\n          triggerUpdatePosition(x, y);\n        } else {\n          update({ type: PointerContextActionType.EndOver });\n        }\n\n        return { x, y };\n      }\n      return null;\n    },\n    [offset, width, height, triggerUpdatePosition]\n  );\n  const updatePosition = useCallback(\n    (event: SyntheticEvent) => {\n      if (isTouchEvent(event.nativeEvent)) {\n        return updateTouchPosition(event.nativeEvent);\n      } else if (isMouseEvent(event.nativeEvent)) {\n        return updateMousePosition(event.nativeEvent);\n      }\n      return null;\n    },\n    [updateMousePosition, updateTouchPosition]\n  );\n  const pointerStart = useCallback(\n    (event: SyntheticEvent) => {\n      const { x, y } = (event.nativeEvent.target as HTMLCanvasElement).getBoundingClientRect();\n      setOffset({ x, y });\n      updatePosition(event);\n\n      update({ type: PointerContextActionType.StartInteraction });\n    },\n    [updatePosition]\n  );\n  const pointerEnd = useCallback(\n    (event: SyntheticEvent) => {\n      updatePosition(event);\n\n      update({ type: PointerContextActionType.EndInteraction });\n    },\n    [updatePosition]\n  );\n\n  const pointerOver = useCallback(() => update({ type: PointerContextActionType.StartOver }), []);\n  const pointerCancel = useCallback(() => update({ type: PointerContextActionType.EndOver }), []);\n\n  return { pointerContext, updatePosition, pointerStart, pointerOver, pointerEnd, pointerCancel };\n};\n\nexport const useShapeTextureContext = (): ShapeTextureType => {\n  const [matrix, setMatrix] = useState<PIXI.Matrix | undefined>();\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>();\n\n  return {\n    texture,\n    matrix: texture ? matrix : undefined,\n    setMatrix,\n    setTexture\n  };\n};\n\nexport const useShapeStyleContext = (): ShapeStyleType => {\n  const [line, setLineStyle] = useState<LineDefinition | undefined>();\n  const [fill, setFillStyle] = useState<FillDefinition | undefined>();\n  const [holes, setHoles] = useState<ShapeType[] | undefined>();\n\n  return { line, fill, holes, setLineStyle, setFillStyle, setHoles };\n};\n\nexport const usePointsContext = (): PointsContextType => {\n  const reducer = useCallback((state: PointsState, action: PointActionType): PointsState => {\n    switch (action.type) {\n      case PointAction.Remove:\n        state.pointMap.delete(action.id);\n        return {\n          pointMap: state.pointMap,\n          points: state.points.filter((pointId) => pointId !== action.id)\n        };\n      case PointAction.Add:\n        if (action.point) {\n          state.pointMap.set(action.id, action.point);\n          if (state.points.indexOf(action.id) < 0) {\n            return {\n              points: [...state.points, action.id],\n              pointMap: state.pointMap\n            };\n          } else {\n            return {\n              points: [...state.points],\n              pointMap: state.pointMap\n            };\n          }\n        } else {\n          return state;\n        }\n    }\n  }, []);\n  const [state, dispatch] = useReducer(reducer, {\n    points: [],\n    pointMap: new Map()\n  });\n\n  const points = useMemo(() => {\n    const values: PIXI.Point[] = [];\n    state.points.forEach((pointId) => {\n      const point = state.pointMap.get(pointId);\n      if (point) {\n        values.push(new PIXI.Point(point.x, point.y));\n      }\n    });\n\n    return values;\n  }, [state]);\n  const addPoint = useCallback((id: string, point: Coords) => dispatch({ type: PointAction.Add, id, point }), []);\n  const removePoint = useCallback((id: string) => dispatch({ type: PointAction.Remove, id }), []);\n\n  return { points, addPoint, removePoint };\n};\n\nconst impactReducer = <T extends PIXI.Container>(state: ImpactContextItem<T>[], action: ImpactActionType<T>): ImpactContextItem<T>[] => {\n  switch (action.type) {\n    case ImpactAction.Update:\n      return [...state.filter((impact) => impact.item !== action.item.item), action.item];\n    case ImpactAction.Remove:\n      return [...state.filter((impact) => impact.item !== action.item.item)];\n  }\n};\n\nexport const useImpactContext = <T extends PIXI.Container>(): ImpactContextType<T> => {\n  const [items, dispatch] = useReducer(impactReducer, []);\n\n  const updateItem = useCallback((item: ImpactContextItem<T>) => dispatch({ type: ImpactAction.Update, item }), []);\n  const removeItem = useCallback((item: ImpactContextItem<T>) => dispatch({ type: ImpactAction.Remove, item }), []);\n\n  return { items: items as ImpactContextItem<T>[], updateItem, removeItem };\n};\n\nexport const usePropsContext = <T extends PixiProps>(props: T): PropsContextType<T> => {\n  const [properties, updateProperties] = useReducer<Reducer<T, T>>(\n    (previousState: T, newState: T) => ({ ...previousState, ...newState }),\n    {} as T\n  );\n\n  return { properties: { ...props, ...properties } as T, updateProperties };\n};\n","import React, { useCallback, useContext, useEffect, useMemo, useReducer } from 'react';\nimport { GraphicsContext, ShapeStyleContext } from '../../contexts';\nimport { DrawShapeDefinition, ShapeType } from '../../types';\n\nenum HoleAction {\n  Add,\n  Remove\n}\n\ntype HoleActionType = {\n  type: HoleAction;\n  id: string;\n  shape?: ShapeType;\n};\n\ntype Hole = {\n  id: string;\n  definition: ShapeType;\n};\n\nconst holesReducer = (state: Hole[], action: HoleActionType) => {\n  switch (action.type) {\n    case HoleAction.Remove:\n      return state.filter((hole) => hole.id !== action.id);\n    case HoleAction.Add:\n      if (action.shape) {\n        return [\n          ...state,\n          {\n            id: action.id,\n            definition: action.shape\n          }\n        ];\n      } else {\n        return state;\n      }\n  }\n};\n\nconst Holes: React.FC = ({ children }) => {\n  const [holeState, updateHoles] = useReducer(holesReducer, []);\n  const { setHoles } = useContext(ShapeStyleContext);\n  const holes = useMemo(() => holeState.map((hole) => hole.definition), [holeState]);\n\n  const addHole = useCallback(\n    ({ id, type, params, points }: DrawShapeDefinition) => updateHoles({ type: HoleAction.Add, id, shape: { type, params, points } }),\n    []\n  );\n  const removeHole = useCallback((id: string) => updateHoles({ type: HoleAction.Remove, id }), []);\n\n  useEffect(() => {\n    setHoles(holes);\n  }, [holes, setHoles]);\n\n  return <GraphicsContext.Provider value={{ drawShape: addHole, removeShape: removeHole }}>{children}</GraphicsContext.Provider>;\n};\n\nexport default Holes;\n","import * as PIXI from 'pixi.js';\nimport React, { CSSProperties, useCallback, useContext, useEffect, useState } from 'react';\nimport { PixiCanvasProps } from '../props';\nimport AutoSizer, { Size } from 'react-virtualized-auto-sizer';\nimport {\n  useId,\n  useAnimationContext,\n  useRenderingContext,\n  useSpeedContext,\n  useTextureContext,\n  usePointerContext,\n  useImpactContext\n} from '../hooks';\nimport {\n  SpeedContext,\n  AnimationContext,\n  RenderingContext,\n  ParentContext,\n  TextureContext,\n  PointerContext,\n  ImpactContext\n} from '../contexts';\nimport { Overflow, ParentContextType } from '../types';\n\nconst defaultStyle: CSSProperties = {\n  position: 'relative',\n  left: 0,\n  right: 0,\n  margin: 0,\n  padding: 0,\n  width: '100%',\n  height: '100%'\n};\n\nconst isDesktop = !PIXI.utils.isMobile.any;\n\nconst PixiCanvas: React.FC<PixiCanvasProps> = ({\n  id,\n  className,\n  width,\n  height,\n  retina = false,\n  textures = {},\n  speed = 1,\n  background,\n  overflow = Overflow.All,\n  filterArea,\n  onUpdate,\n  onAfterRender,\n  onResize,\n  onAllTexturesLoaded,\n  onLoadProgress,\n  onInteractionUpdate,\n  onMouseDown,\n  onMouseMove,\n  onMouseOut,\n  onMouseOver,\n  onMouseUp,\n  onPointerCancel,\n  onPointerDown,\n  onPointerMove,\n  onPointerOut,\n  onPointerOver,\n  onPointerUp,\n  onTouchCancel,\n  onTouchEnd,\n  onTouchMove,\n  onTouchStart,\n  children\n}) => {\n  const canvasId = useId(id);\n\n  const impactContext = useImpactContext();\n  const speedContext = useSpeedContext();\n  const textureContext = useTextureContext(textures);\n  const animationContext = useAnimationContext(speedContext.speed);\n  const renderingContext = useRenderingContext(canvasId, animationContext.frameId, background);\n  const genericParentContext = useContext(ParentContext);\n  const [containerStyle, setContainerStyle] = useState<CSSProperties>(defaultStyle);\n  const [childrenContainerStyle, setChildrenContainerStyle] = useState<CSSProperties>(defaultStyle);\n\n  const { setSpeed } = speedContext;\n\n  const { pointerContext, pointerStart, pointerEnd, pointerCancel, pointerOver, updatePosition } = usePointerContext(\n    retina,\n    renderingContext.width,\n    renderingContext.height\n  );\n\n  const [parentContext, setParentContext] = useState<ParentContextType<PIXI.Container>>({\n    ...genericParentContext,\n    parent: renderingContext.stage,\n    width: renderingContext.width,\n    height: renderingContext.height\n  });\n\n  useEffect(() => {\n    setParentContext({\n      ...genericParentContext,\n      parent: renderingContext.stage,\n      width: renderingContext.width,\n      height: renderingContext.height\n    });\n  }, [renderingContext.stage, renderingContext.width, renderingContext.height, genericParentContext]);\n\n  useEffect(() => {\n    const newStyle = { ...defaultStyle };\n    const newChildrenStyle = { ...defaultStyle };\n\n    switch (overflow) {\n      case Overflow.Horizontal:\n        newChildrenStyle.overflowY = 'hidden';\n        break;\n      case Overflow.Vertical:\n        newChildrenStyle.overflowX = 'hidden';\n        break;\n      case Overflow.None:\n        newChildrenStyle.overflow = 'hidden';\n    }\n\n    newChildrenStyle.position = 'absolute';\n    newStyle.width = width || '100%';\n    newStyle.height = height || '100%';\n\n    setContainerStyle(newStyle);\n    setChildrenContainerStyle(newChildrenStyle);\n  }, [width, height, overflow]);\n\n  useEffect(() => {\n    if (filterArea) {\n      renderingContext.stage.filterArea = new PIXI.Rectangle(filterArea.x, filterArea.y, filterArea.width, filterArea.height);\n    } else {\n      renderingContext.stage.filterArea = (null as unknown) as PIXI.Rectangle;\n    }\n  }, [renderingContext.stage, filterArea]);\n\n  useEffect(() => {\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  }, [animationContext.frameId, onUpdate]);\n\n  useEffect(() => {\n    if (typeof onAfterRender === 'function') {\n      onAfterRender();\n    }\n  }, [renderingContext.renderId, onAfterRender]);\n\n  useEffect(() => {\n    if (typeof onResize === 'function') {\n      onResize({\n        width: renderingContext.width,\n        height: renderingContext.height\n      });\n    }\n  }, [renderingContext.width, renderingContext.height, onResize]);\n\n  useEffect(() => {\n    setSpeed(speed);\n  }, [speed, setSpeed]);\n\n  useEffect(() => {\n    if (onInteractionUpdate) {\n      onInteractionUpdate(pointerContext);\n    }\n  }, [pointerContext, onInteractionUpdate]);\n\n  const allTextureLoaderHandler = useCallback((...args) => onAllTexturesLoaded && onAllTexturesLoaded(args[1]), [onAllTexturesLoaded]);\n\n  useEffect(() => {\n    PIXI.Loader.shared.onComplete.add(allTextureLoaderHandler);\n  }, [allTextureLoaderHandler]);\n\n  const loadProgressHandler = useCallback((loader: PIXI.Loader) => onLoadProgress && onLoadProgress(loader.progress), [onLoadProgress]);\n\n  useEffect(() => {\n    PIXI.Loader.shared.onProgress.add(loadProgressHandler);\n  }, [loadProgressHandler]);\n\n  const onMouseMoveHandler = useCallback((...args) => onMouseMove && onMouseMove(...args), [onMouseMove]);\n  const onMouseDownHandler = useCallback((...args) => onMouseDown && onMouseDown(...args), [onMouseDown]);\n  const onMouseOutHandler = useCallback((...args) => onMouseOut && onMouseOut(...args), [onMouseOut]);\n  const onMouseOverHandler = useCallback((...args) => onMouseOver && onMouseOver(...args), [onMouseOver]);\n  const onMouseUpHandler = useCallback((...args) => onMouseUp && onMouseUp(...args), [onMouseUp]);\n  const onPointerCancelHandler = useCallback(\n    (...args) => {\n      onPointerCancel && onPointerCancel(...args);\n      isDesktop && pointerCancel();\n    },\n    [onPointerCancel, pointerCancel]\n  );\n  const onPointerDownHandler = useCallback(\n    (...args) => {\n      onPointerDown && onPointerDown(...args);\n      isDesktop && pointerStart(args[0]);\n    },\n    [onPointerDown, pointerStart]\n  );\n  const onPointerMoveHandler = useCallback(\n    (...args) => {\n      onPointerMove && onPointerMove(...args);\n      isDesktop && updatePosition(args[0]);\n    },\n    [onPointerMove, updatePosition]\n  );\n  const onPointerOutHandler = useCallback(\n    (...args) => {\n      onPointerOut && onPointerOut(...args);\n      isDesktop && pointerCancel();\n    },\n    [onPointerOut, pointerCancel]\n  );\n  const onPointerOverHandler = useCallback(\n    (...args) => {\n      onPointerOver && onPointerOver(...args);\n      isDesktop && pointerOver();\n    },\n    [onPointerOver, pointerOver]\n  );\n  const onPointerUpHandler = useCallback(\n    (...args) => {\n      onPointerUp && onPointerUp(...args);\n      isDesktop && pointerEnd(args[0]);\n    },\n    [onPointerUp, pointerEnd]\n  );\n  const onTouchCancelHandler = useCallback(\n    (...args) => {\n      onTouchCancel && onTouchCancel(...args);\n      !isDesktop && pointerCancel();\n    },\n    [onTouchCancel, pointerCancel]\n  );\n  const onTouchEndHandler = useCallback(\n    (...args) => {\n      onTouchEnd && onTouchEnd(...args);\n      !isDesktop && pointerEnd(args[0]);\n    },\n    [onTouchEnd, pointerEnd]\n  );\n  const onTouchMoveHandler = useCallback(\n    (...args) => {\n      onTouchMove && onTouchMove(...args);\n      !isDesktop && updatePosition(args[0]);\n    },\n    [updatePosition, onTouchMove]\n  );\n  const onTouchStartHandler = useCallback(\n    (...args) => {\n      onTouchStart && onTouchStart(...args);\n      !isDesktop && pointerStart(args[0]);\n    },\n    [onTouchStart, pointerStart]\n  );\n\n  return (\n    <TextureContext.Provider value={textureContext}>\n      <SpeedContext.Provider value={speedContext}>\n        <RenderingContext.Provider value={renderingContext}>\n          <AnimationContext.Provider value={animationContext}>\n            <PointerContext.Provider value={pointerContext}>\n              {renderingContext.stage && (\n                <ImpactContext.Provider value={impactContext}>\n                  <ParentContext.Provider value={parentContext}>\n                    <div\n                      className={'pixi-root'}\n                      style={containerStyle}\n                      onTouchMove={onTouchMoveHandler}\n                      onTouchStart={onTouchStartHandler}\n                      onTouchEnd={onTouchEndHandler}\n                      onTouchCancel={onTouchCancelHandler}\n                      onPointerCancel={onPointerCancelHandler}\n                      onPointerDown={onPointerDownHandler}\n                      onPointerMove={onPointerMoveHandler}\n                      onPointerOut={onPointerOutHandler}\n                      onPointerOver={onPointerOverHandler}\n                      onPointerUp={onPointerUpHandler}\n                      onMouseMove={onMouseMoveHandler}\n                      onMouseDown={onMouseDownHandler}\n                      onMouseOut={onMouseOutHandler}\n                      onMouseOver={onMouseOverHandler}\n                      onMouseUp={onMouseUpHandler}\n                    >\n                      <AutoSizer>\n                        {({ width, height }: Size) => {\n                          const multiplier = retina ? 2 : 1;\n                          const canvasWidth = width * multiplier;\n                          const canvasHeight = height * multiplier;\n\n                          return (\n                            <canvas\n                              id={canvasId}\n                              className={className}\n                              width={canvasWidth}\n                              height={canvasHeight}\n                              style={{ ...defaultStyle, width, height }}\n                            />\n                          );\n                        }}\n                      </AutoSizer>\n                      <div className={'pixi-children-root'} style={childrenContainerStyle}>\n                        {children}\n                      </div>\n                    </div>\n                  </ParentContext.Provider>\n                </ImpactContext.Provider>\n              )}\n            </PointerContext.Provider>\n          </AnimationContext.Provider>\n        </RenderingContext.Provider>\n      </SpeedContext.Provider>\n    </TextureContext.Provider>\n  );\n};\n\nexport default PixiCanvas;\n","import * as PIXI from 'pixi.js';\nimport React, { PropsWithChildren, useContext, useEffect } from 'react';\nimport { AnimationContext, ParentContext, RenderingContext } from '../contexts';\nimport { useDisplayObjectEvents, useId, useParentContext, useGenericProps, useElement, useImpactDetection } from '../hooks';\nimport { PixiDisplayObjectProps } from '../props';\nimport { CursorType } from '../types';\n\nconst PixiDisplayObject: React.FC<PixiDisplayObjectProps<PIXI.Container>> = <T extends PIXI.Container>(\n  props: PropsWithChildren<PixiDisplayObjectProps<T>>\n) => {\n  const { item, children, onUpdate, onAfterRender } = props;\n  const { impactArea, impactClassName, impactFilter, onImpact, detectImpacts = false } = props;\n  const { frameId } = useContext(AnimationContext);\n  const { renderId, update } = useContext(RenderingContext);\n  const element = useElement(item);\n  const parentContext = useParentContext(element);\n  const {\n    alpha = 1,\n    angle = 0,\n    buttonMode = false,\n    cursor = CursorType.None,\n    interactive = false,\n    name,\n    rotation = 0,\n    visible = true,\n    x = 0,\n    y = 0,\n    zIndex = element.parent?.children.length || 0,\n    pivotX = 0,\n    pivotY = 0,\n    scaleX = 1,\n    scaleY = 1,\n    skewX = 0,\n    skewY = 0,\n    width,\n    height,\n    sortableChildren = PIXI.settings.SORTABLE_CHILDREN,\n    hitArea,\n    filterArea\n  } = props;\n  const {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  } = props;\n\n  const id = useId(name);\n\n  useDisplayObjectEvents(element, {\n    onClick,\n    onMouseDown,\n    onMouseMove,\n    onMouseOut,\n    onMouseOver,\n    onMouseUp,\n    onMouseUpOutside,\n    onPointerCancel,\n    onPointerDown,\n    onPointerMove,\n    onPointerOut,\n    onPointerOver,\n    onPointerTap,\n    onPointerUp,\n    onPointerUpOutside,\n    onRemovedFrom,\n    onRightClick,\n    onRightDown,\n    onRightUp,\n    onRightUpOutside,\n    onTap,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEndOutside,\n    onTouchMove,\n    onTouchStart,\n    onAdded,\n    onRemoved,\n    onChildAdded\n  });\n\n  useGenericProps(element, {\n    alpha,\n    angle,\n    buttonMode,\n    cursor,\n    height,\n    interactive,\n    name: id,\n    pivotX,\n    pivotY,\n    rotation,\n    scaleX,\n    scaleY,\n    skewX,\n    skewY,\n    sortableChildren,\n    visible,\n    width,\n    x,\n    y,\n    zIndex,\n    hitArea,\n    filterArea\n  });\n\n  useImpactDetection(item, impactArea, impactClassName, impactFilter, detectImpacts, onImpact);\n\n  useEffect(() => {\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  }, [frameId, onUpdate]);\n\n  useEffect(() => {\n    if (typeof onAfterRender === 'function') {\n      onAfterRender();\n    }\n  }, [renderId, onAfterRender]);\n\n  useEffect(() => {\n    return () => {\n      update();\n    };\n  }, [update]);\n\n  return <ParentContext.Provider value={parentContext}>{children}</ParentContext.Provider>;\n};\n\nexport default PixiDisplayObject;\n","import React, { CSSProperties, useContext, useEffect, useState } from 'react';\nimport { ParentContext, PropsContext } from '../contexts';\nimport { usePropsContext } from '../hooks';\nimport { PixiHtmlContainerProps } from '../props';\nimport { Overflow } from '../types';\n\nconst PixiHtmlContainer: React.FC<PixiHtmlContainerProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PixiHtmlContainerProps>(props);\n  const { properties } = propsContext;\n  const { left, top, transform, width, height, parent } = useContext(ParentContext);\n  const { id, overflow = Overflow.All } = properties;\n  const [style, setStyle] = useState<CSSProperties>({});\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (transform) {\n      const newStyle: CSSProperties = {\n        display: 'inline-block',\n        position: 'absolute',\n        transform: `matrix(${transform.join(',')})`,\n        width,\n        height,\n        top,\n        left\n      };\n\n      switch (overflow) {\n        case Overflow.Horizontal:\n          newStyle.overflowY = 'hidden';\n          break;\n        case Overflow.Vertical:\n          newStyle.overflowX = 'hidden';\n          break;\n        case Overflow.None:\n          newStyle.overflow = 'hidden';\n      }\n\n      setStyle(newStyle);\n    }\n  }, [transform, width, height, left, top, overflow]);\n\n  useEffect(() => {\n    setActive(!!transform && !!parent.parent && width > 1 && height > 1);\n  }, [transform, width, height, parent.parent]);\n\n  return active ? (\n    <div id={id} className={parent.name} style={style}>\n      <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>\n    </div>\n  ) : null;\n};\n\nexport default PixiHtmlContainer;\n","import React, { useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { PropsContext } from '../contexts';\nimport { usePropsContext } from '../hooks';\nimport { PixiContainerProps } from '../props';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiContainer: React.FC<PixiContainerProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PixiContainerProps>(props);\n  const { properties } = propsContext;\n  const [container] = useState(new PIXI.Container());\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiDisplayObject item={container} {...properties}>\n        {children}\n      </PixiDisplayObject>\n    </PropsContext.Provider>\n  );\n};\n\nexport default PixiContainer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useId, useTextureUpdate } from '../hooks';\nimport { PixiTextureProps } from '../props';\n\nconst PixiTexture: React.FC<PixiTextureProps> = ({ name, src, onLoad }) => {\n  const [texture, setTexture] = useState<PIXI.Texture | undefined>();\n  const textureId = useId(name);\n\n  const loadCallback = useCallback((loadedTexture: PIXI.Texture) => {\n    setTexture(loadedTexture);\n    if (onLoad) {\n      onLoad();\n    }\n  }, [onLoad])\n\n  useEffect(() => {\n    if (src) {\n      PIXI.Texture.fromURL(src).then(loadCallback);\n    }\n  }, [src, loadCallback]);\n\n  useEffect(() => {\n    texture?.textureCacheIds.splice(0);\n    texture?.textureCacheIds.push(textureId);\n  }, [texture, textureId]);\n\n  useTextureUpdate(texture);\n\n  return null;\n};\n\nexport default PixiTexture;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { defaultParentContext, ParentContext, PropsContext, RenderingContext } from '../contexts';\nimport { useId, usePropsContext, useTextureUpdate } from '../hooks';\nimport { PixiRenderTextureProps } from '../props';\nimport { Overflow } from '../types';\nimport PixiHtmlContainer from './PixiHtmlContainer';\n\nconst PixiRenderTexture: React.FC<PixiRenderTextureProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PixiRenderTextureProps>(props);\n  const { properties } = propsContext;\n  const { name, width, height } = properties;\n  const parentRenderContext = useContext(RenderingContext);\n  const textureId = useId(name);\n  const [stage] = useState(new PIXI.Container());\n  const [parentContext, setParentContext] = useState(defaultParentContext);\n  const [texture, setTexture] = useState<PIXI.RenderTexture | undefined>();\n  const [state, setState] = useState(true);\n  const { getTexture, update: parentUpdate, renderId } = parentRenderContext;\n\n  const update = useCallback(() => setState(true), []);\n\n  useEffect(() => {\n    setParentContext({\n      ...defaultParentContext,\n      parent: stage,\n      width,\n      height\n    });\n    setState(true);\n  }, [width, height, stage, textureId]);\n\n  useEffect(() => {\n    if (state) {\n      const newTexture = getTexture(stage, width, height);\n      newTexture?.textureCacheIds.push(textureId);\n      setTexture(newTexture);\n      setState(false);\n      parentUpdate();\n    }\n  }, [state, stage, parentUpdate, getTexture, width, height, textureId]);\n\n  useTextureUpdate(texture);\n\n  return (\n    <PixiHtmlContainer overflow={Overflow.None}>\n      <RenderingContext.Provider\n        value={{\n          stage,\n          width,\n          height,\n          renderId,\n          update,\n          getTexture\n        }}\n      >\n        <ParentContext.Provider value={parentContext}>\n          <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>\n        </ParentContext.Provider>\n      </RenderingContext.Provider>\n    </PixiHtmlContainer>\n  );\n};\n\nexport default PixiRenderTexture;\n","import React, { useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { PropsContext } from '../contexts';\nimport { useSpriteProps, useTexture, useAlignedPosition, useGraphicsProps, usePropsContext } from '../hooks';\nimport { PixiSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiSprite: React.FC<PixiSpriteProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PixiSpriteProps>(props);\n  const { properties } = propsContext;\n  const [sprite] = useState(new PIXI.Sprite());\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = properties;\n\n  useTexture(sprite, props.texture);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useAlignedPosition(sprite, properties);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiDisplayObject item={sprite} {...properties} x={undefined} y={undefined}>\n        {children}\n      </PixiDisplayObject>\n    </PropsContext.Provider>\n  );\n};\n\nexport default PixiSprite;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useReducer, useState } from 'react';\nimport { GraphicsContext, PropsContext, RenderingContext } from '../contexts';\nimport { useGraphicsProps, usePropsContext } from '../hooks';\nimport { PixiGraphicsProps } from '../props';\nimport {\n  BlendModes,\n  DrawShapeDefinition,\n  GraphicsState,\n  LineCap,\n  LineJoin,\n  ShapeAction,\n  ShapeActionType,\n  Shapes,\n  ShapeType\n} from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst drawShape = (definition: ShapeType, graphics: PIXI.Graphics, point?: PIXI.Point) => {\n  let lastPoint = point;\n\n  switch (definition.type) {\n    case Shapes.Path:\n      if (definition.points && definition.points.length > 1) {\n        if (!lastPoint || lastPoint.x !== definition.points[0].x || lastPoint.y !== definition.points[0].y) {\n          graphics.moveTo(definition.points[0].x, definition.points[0].y);\n        }\n        for (let i = 1; i < definition.points.length; i++) {\n          graphics.lineTo(definition.points[i].x, definition.points[i].y);\n        }\n        lastPoint = definition.points[definition.points.length - 1];\n      }\n      break;\n    case Shapes.Circle:\n      graphics.drawCircle(definition.params[0], definition.params[1], definition.params[2]);\n      break;\n    case Shapes.Arc:\n      graphics.arc(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4],\n        !!definition.params[5]\n      );\n      break;\n    case Shapes.BezierCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.bezierCurveTo(\n        definition.params[4],\n        definition.params[5],\n        definition.params[6],\n        definition.params[7],\n        definition.params[2],\n        definition.params[3]\n      );\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.ArcCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.arcTo(definition.params[4], definition.params[5], definition.params[2], definition.params[3], definition.params[6]);\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.QuadraticCurve:\n      if (!lastPoint || lastPoint.x !== definition.params[0] || lastPoint.y !== definition.params[1]) {\n        graphics.moveTo(definition.params[0], definition.params[1]);\n      }\n      graphics.quadraticCurveTo(definition.params[4], definition.params[5], definition.params[2], definition.params[3]);\n      lastPoint = new PIXI.Point(definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Ellipse:\n      graphics.drawEllipse(definition.params[0], definition.params[1], definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Rect:\n      graphics.drawRect(definition.params[0], definition.params[1], definition.params[2], definition.params[3]);\n      break;\n    case Shapes.Polygon:\n      if (definition.points) {\n        graphics.drawPolygon(definition.points);\n      }\n      break;\n    case Shapes.RoundedRect:\n      graphics.drawRoundedRect(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4]\n      );\n      break;\n    case Shapes.Star:\n      graphics.drawStar(\n        definition.params[0],\n        definition.params[1],\n        definition.params[2],\n        definition.params[3],\n        definition.params[4],\n        definition.params[5]\n      );\n      break;\n  }\n\n  return lastPoint;\n};\n\nconst updateGraphics = (graphics: PIXI.Graphics, state: GraphicsState) => {\n  let lastPoint: PIXI.Point | undefined;\n  graphics.clear();\n\n  state.shapes.forEach((shapeId) => {\n    const definition = state.shapeMap.get(shapeId);\n    let cap, join;\n\n    if (definition) {\n      if (definition.line) {\n        if (definition.line.texture) {\n          switch (definition.line.cap) {\n            case LineCap.Butt:\n              cap = PIXI.LINE_CAP.BUTT;\n              break;\n            case LineCap.Round:\n              cap = PIXI.LINE_CAP.ROUND;\n              break;\n            case LineCap.Square:\n              cap = PIXI.LINE_CAP.SQUARE;\n              break;\n          }\n\n          switch (definition.line.join) {\n            case LineJoin.Bevel:\n              join = PIXI.LINE_JOIN.BEVEL;\n              break;\n            case LineJoin.Miter:\n              join = PIXI.LINE_JOIN.MITER;\n              break;\n            case LineJoin.Round:\n              join = PIXI.LINE_JOIN.ROUND;\n              break;\n          }\n          graphics.lineTextureStyle({ ...definition.line, cap, join });\n        } else {\n          graphics.lineStyle(\n            definition.line.width,\n            definition.line.color,\n            definition.line.alpha,\n            definition.line.alignment,\n            definition.line.native\n          );\n        }\n      } else if (!lastPoint) {\n        graphics.lineStyle(0);\n      }\n      if (definition.fill) {\n        if (definition.fill.texture) {\n          graphics.beginTextureFill({\n            texture: definition.fill.texture,\n            matrix: definition.fill.matrix,\n            color: definition.fill.color,\n            alpha: definition.fill.alpha\n          });\n        } else {\n          graphics.beginFill(definition.fill.color, definition.fill.alpha);\n        }\n      }\n\n      lastPoint = drawShape(definition, graphics, lastPoint);\n\n      if (definition.holes && definition.holes.length > 0) {\n        let holeLastPoint: PIXI.Point | undefined;\n\n        graphics.beginHole();\n        definition.holes.forEach((hole) => {\n          holeLastPoint = drawShape(hole, graphics, holeLastPoint);\n        });\n        graphics.endHole();\n      }\n\n      if (definition.fill) {\n        graphics.endFill();\n      }\n    }\n  });\n};\n\nconst PixiGraphics: React.FC<PixiGraphicsProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PixiGraphicsProps>(props);\n  const { properties } = propsContext;\n  const [graphics] = useState(new PIXI.Graphics());\n  const { blendMode = BlendModes.Normal, tint = 0xffffff } = properties;\n  const { update } = useContext(RenderingContext);\n\n  const reducer = useCallback((state: GraphicsState, action: ShapeActionType): GraphicsState => {\n    switch (action.type) {\n      case ShapeAction.RemoveShape:\n        state.shapeMap.delete(action.id);\n        return {\n          shapes: state.shapes.filter((shape) => shape !== action.id),\n          shapeMap: state.shapeMap\n        };\n      case ShapeAction.UpdateShape:\n        if (action.definition) {\n          state.shapeMap.set(action.id, action.definition);\n          if (state.shapes.indexOf(action.id) < 0) {\n            return {\n              shapes: [...state.shapes, action.id],\n              shapeMap: state.shapeMap\n            };\n          } else {\n            return { ...state };\n          }\n        } else {\n          return state;\n        }\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, { shapes: [], shapeMap: new Map() });\n\n  const drawShape = useCallback(\n    (definition: DrawShapeDefinition) => dispatch({ type: ShapeAction.UpdateShape, id: definition.id, definition }),\n    []\n  );\n\n  const removeShape = useCallback((id: string) => dispatch({ type: ShapeAction.RemoveShape, id }), []);\n\n  useGraphicsProps(graphics, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    updateGraphics(graphics, state);\n    update();\n  }, [graphics, state, update]);\n\n  return (\n    <GraphicsContext.Provider value={{ drawShape, removeShape }}>\n      <PropsContext.Provider value={propsContext}>\n        <PixiDisplayObject item={graphics} {...properties}>\n          {children}\n        </PixiDisplayObject>\n      </PropsContext.Provider>\n    </GraphicsContext.Provider>\n  );\n};\n\nexport default PixiGraphics;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, PropsContext } from '../contexts';\nimport { useGraphicsProps, useSpriteProps, useTexture, useTilingSpriteProps, useAlignedPosition, usePropsContext } from '../hooks';\nimport { PixiTilingSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiTilingSprite: React.FC<PixiTilingSpriteProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PixiTilingSpriteProps>(props);\n  const { properties } = propsContext;\n  const { width, height } = useContext(ParentContext);\n  const [tileWidth, setTileWidth] = useState(properties.width || width);\n  const [tileHeight, setTileHeight] = useState(properties.height || height);\n  const [sprite] = useState(new PIXI.TilingSprite(PIXI.Texture.EMPTY, tileWidth, tileHeight));\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = properties;\n  const { clampMargin = 0.5, tileX = 0, tileY = 0, tileScaleX = 1, tileScaleY = 1, uvRespectAnchor = false } = properties;\n\n  useTexture(sprite, properties.texture);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    setTileWidth(properties.width || width);\n  }, [width, properties.width]);\n\n  useEffect(() => {\n    setTileHeight(properties.height || height);\n  }, [height, properties.height]);\n\n  useTilingSpriteProps(sprite, {\n    clampMargin,\n    tileScaleX,\n    tileScaleY,\n    tileX,\n    tileY,\n    uvRespectAnchor\n  });\n\n  useAlignedPosition(sprite, properties);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiDisplayObject item={sprite} {...properties} width={tileWidth} height={tileHeight} x={undefined} y={undefined}>\n        {children}\n      </PixiDisplayObject>\n    </PropsContext.Provider>\n  );\n};\n\nexport default PixiTilingSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { RenderingContext, PropsContext } from '../contexts';\nimport { useFrames, useSpriteProps, useTexture, useFrameAnimation, useAlignedPosition, useGraphicsProps, usePropsContext } from '../hooks';\nimport { PixiAnimatedSpriteProps } from '../props';\nimport { BlendModes } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiAnimatedSprite: React.FC<PixiAnimatedSpriteProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PixiAnimatedSpriteProps>(props);\n  const { properties } = propsContext;\n  const [sprite] = useState(new PIXI.AnimatedSprite([PIXI.Texture.EMPTY], false));\n  const { update } = useContext(RenderingContext);\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = properties;\n  const { playing = false, resetOnStop = true, currentFrame = 0, fps = 60, onAnimationComplete } = properties;\n  const [frameId, setFrameId] = useState(currentFrame);\n  const [initialFrame, setInitialFrame] = useState(0);\n\n  useTexture(sprite, properties.texture);\n\n  const frameCount = useFrames(sprite, properties.frames);\n  const frame = useFrameAnimation(initialFrame, frameCount, fps, playing);\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    if (currentFrame < frameCount) {\n      setInitialFrame(currentFrame);\n    } else if (currentFrame > 0) {\n      setInitialFrame(currentFrame - 1);\n    }\n  }, [currentFrame, frameCount]);\n\n  useEffect(() => {\n    if (!playing && resetOnStop) {\n      setFrameId(initialFrame);\n    }\n  }, [playing, resetOnStop, initialFrame]);\n\n  useEffect(() => {\n    if (!isNaN(frameId)) {\n      sprite.gotoAndStop(frameId);\n      update();\n    }\n  }, [frameId, sprite, update]);\n\n  useEffect(() => {\n    if (playing && !isNaN(frame)) {\n      if (frame === frameCount - 1 && onAnimationComplete && frameCount > 0) {\n        onAnimationComplete();\n      }\n      setFrameId(frame);\n    }\n  }, [frame, frameCount, playing, onAnimationComplete]);\n\n  useAlignedPosition(sprite, properties);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiDisplayObject item={sprite} {...properties} x={undefined} y={undefined}>\n        {children}\n      </PixiDisplayObject>\n    </PropsContext.Provider>\n  );\n};\n\nexport default PixiAnimatedSprite;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, RenderingContext } from '../contexts';\nimport { useGraphicsProps, useSpriteProps, useTextureUpdate, useAlignedPosition } from '../hooks';\nimport { isAnimatedSprite, isSprite, PixiTextProps } from '../props';\nimport { BlendModes, defaultTextStyle } from '../types';\nimport PixiDisplayObject from './PixiDisplayObject';\n\nconst PixiText: React.FC<PixiTextProps> = (props) => {\n  const { anchorX = 0, anchorY = 0, blendMode = BlendModes.Normal, roundPixels = false, tint = 0xffffff } = props;\n  const { style = defaultTextStyle, children = '' } = props;\n  const { update } = useContext(RenderingContext);\n  const { parent } = useContext(ParentContext);\n  const [sprite] = useState(new PIXI.Text(String(children), style));\n  const [state, setState] = useState(false);\n  const [texture, setTexture] = useState(sprite.texture);\n  const [isTextureMode] = useState(isSprite(parent) || isAnimatedSprite(parent));\n\n  useSpriteProps(sprite, {\n    anchorX,\n    anchorY,\n    roundPixels\n  });\n\n  useGraphicsProps(sprite, {\n    blendMode,\n    tint\n  });\n\n  useEffect(() => {\n    sprite.text = children ? String(children) : '';\n    sprite.updateText(true);\n    update();\n    setState(true);\n  }, [children, sprite, update]);\n\n  useEffect(() => {\n    sprite.style = style;\n    sprite.updateText(true);\n    update();\n    setState(true);\n  }, [style, sprite, update]);\n\n  useEffect(() => {\n    if (state) {\n      setTexture(sprite.texture);\n    }\n  }, [state, sprite]);\n\n  useTextureUpdate(texture);\n\n  useAlignedPosition(sprite, props);\n\n  return isTextureMode ? null : (\n    <PixiDisplayObject item={sprite} {...props} x={undefined} y={undefined}>\n      {null /* Avoiding passing down the tree the child text */}\n    </PixiDisplayObject>\n  );\n};\n\nexport default PixiText;\n","import React, { useContext, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { ParentContext, PropsContext, RenderingContext } from '../contexts';\nimport { useTexture, useRelativePosition, usePropsContext } from '../hooks';\nimport { PixiMaskProps } from '../props';\n\nconst PixiMask: React.FC<PixiMaskProps> = ({ children, ...props }) => {\n  const [sprite] = useState(new PIXI.Sprite());\n  const propsContext = usePropsContext<PixiMaskProps>(props);\n  const parentContext = useContext(ParentContext);\n  const { update } = useContext(RenderingContext);\n  const { properties } = propsContext;\n  const { texture, enabled = true } = properties;\n  const { parent } = parentContext;\n  const [left, top] = useRelativePosition((parent as unknown) as PIXI.Sprite | undefined);\n\n  useTexture(sprite, texture);\n\n  useEffect(() => {\n    if (enabled) {\n      parent.mask = sprite;\n      parent.addChild(sprite);\n      update();\n    }\n\n    return () => {\n      parent.removeChild(sprite);\n      parent.mask = null;\n      update();\n    };\n  }, [sprite, parent, enabled, update]);\n\n  useEffect(() => {\n    sprite.anchor.set(-left, -top);\n  }, [sprite, left, top]);\n\n  return (\n    <ParentContext.Provider value={{ ...parentContext, parent: sprite }}>\n      <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>\n    </ParentContext.Provider>\n  );\n};\n\nexport default PixiMask;\n","import React, { useContext, useEffect } from 'react';\nimport { PropsContext, ShapeTextureContext } from '../../contexts';\nimport { useLoadedTexture, usePropsContext, useTransformMatrix } from '../../hooks';\nimport { PixiTextureProps, UpdatableTextureType } from '../../props';\nimport { TransformType } from '../../types';\nimport PixiTexture from '../PixiTexture';\n\nconst ShapeTexture: React.FC<PixiTextureProps & TransformType & UpdatableTextureType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PixiTextureProps & TransformType & UpdatableTextureType>(props);\n  const { properties } = propsContext;\n  const { name, src, onLoad, texture, x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY } = properties;\n  const { setTexture, setMatrix } = useContext(ShapeTextureContext);\n\n  const loadedTexture = useLoadedTexture(texture);\n  const matrix = useTransformMatrix(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY);\n\n  useEffect(() => {\n    setTexture(loadedTexture);\n\n    return () => {\n      setTexture(undefined);\n    };\n  }, [loadedTexture, setTexture]);\n\n  useEffect(() => {\n    setMatrix(matrix);\n\n    return () => {\n      setMatrix(undefined);\n    };\n  }, [matrix, setMatrix]);\n\n  return (\n    <PixiTexture name={name} src={src} onLoad={onLoad}>\n      <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>\n    </PixiTexture>\n  );\n};\n\nexport default ShapeTexture;\n","import React, { useContext, useEffect } from 'react';\nimport { PropsContext, ShapeStyleContext, ShapeTextureContext } from '../../contexts';\nimport { usePropsContext, useShapeTextureContext } from '../../hooks';\nimport { LineCap, LineJoin, LineStyleType } from '../../types';\n\nconst LineStyle: React.FC<LineStyleType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<LineStyleType>(props);\n  const { properties } = propsContext;\n  const {\n    alpha = 1,\n    color = 0x000000,\n    alignment = 0.5,\n    width = 1,\n    cap = LineCap.Butt,\n    join = LineJoin.Miter,\n    miterLimit = 10,\n    native = false\n  } = properties;\n  const shapeTextureContext = useShapeTextureContext();\n  const { texture, matrix } = shapeTextureContext;\n  const { setLineStyle } = useContext(ShapeStyleContext);\n\n  useEffect(() => {\n    setLineStyle({ alpha, color, texture, matrix, alignment, width, cap, join, miterLimit, native });\n\n    return () => {\n      setLineStyle(undefined);\n    };\n  }, [alpha, color, texture, matrix, alignment, width, cap, join, miterLimit, native, setLineStyle]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <ShapeTextureContext.Provider value={shapeTextureContext}>{children}</ShapeTextureContext.Provider>\n    </PropsContext.Provider>\n  );\n};\n\nexport default LineStyle;\n","import React, { useContext, useEffect } from 'react';\nimport { PropsContext, ShapeStyleContext, ShapeTextureContext } from '../../contexts';\nimport { usePropsContext, useShapeTextureContext } from '../../hooks';\nimport { FillStyleType } from '../../types';\n\nconst FillStyle: React.FC<FillStyleType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<FillStyleType>(props);\n  const { properties } = propsContext;\n  const { alpha = 1, color = 0xffffff } = properties;\n  const shapeTextureContext = useShapeTextureContext();\n  const { texture, matrix } = shapeTextureContext;\n  const { setFillStyle } = useContext(ShapeStyleContext);\n\n  useEffect(() => {\n    setFillStyle({\n      alpha,\n      color,\n      texture,\n      matrix\n    });\n\n    return () => {\n      setFillStyle(undefined);\n    };\n  }, [alpha, color, texture, matrix, setFillStyle]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <ShapeTextureContext.Provider value={shapeTextureContext}>{children}</ShapeTextureContext.Provider>\n    </PropsContext.Provider>\n  );\n};\n\nexport default FillStyle;\n","import React, { useContext, useEffect } from 'react';\nimport { ShapeStyleContext, GraphicsContext } from '../../contexts';\nimport { useId, useShapeStyleContext } from '../../hooks';\nimport { ShapeType } from '../../types';\n\nconst Shape: React.FC<ShapeType> = ({ name, type, params, points, children }) => {\n  const styleContext = useShapeStyleContext();\n  const { drawShape, removeShape } = useContext(GraphicsContext);\n  const { fill, line, holes } = styleContext;\n  const id = useId(name);\n\n  useEffect(() => {\n    drawShape({ id, type, params, points, fill, line, holes });\n  }, [id, type, params, fill, line, points, holes, drawShape]);\n\n  useEffect(() => {\n    return () => {\n      removeShape(id);\n    };\n  }, [id, removeShape]);\n\n  return <ShapeStyleContext.Provider value={styleContext}>{children}</ShapeStyleContext.Provider>;\n};\n\nexport default Shape;\n","import React, { useEffect, useState } from 'react';\nimport { PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { RectangleType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Rectangle: React.FC<RectangleType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<RectangleType>(props);\n  const { properties } = propsContext;\n  const { name, x, y, width, height, borderRadius = 0 } = properties;\n  const [params, setParams] = useState([x, y, width, height]);\n  const [shapeType, setShapeType] = useState(Shapes.Rect);\n\n  useEffect(() => {\n    if (borderRadius > 0) {\n      setShapeType(Shapes.RoundedRect);\n      setParams([x, y, width, height, borderRadius]);\n    } else {\n      setShapeType(Shapes.Rect);\n      setParams([x, y, width, height]);\n    }\n  }, [borderRadius, x, y, width, height]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <Shape name={name} type={shapeType} params={params}>\n        {children}\n      </Shape>\n    </PropsContext.Provider>\n  );\n};\n\nexport default Rectangle;\n","import React, { useEffect, useState } from 'react';\nimport { PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { CircleType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Circle: React.FC<CircleType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<CircleType>(props);\n  const { properties } = propsContext;\n  const { name, x, y, radius } = properties;\n  const [params, setParams] = useState([x, y, radius]);\n\n  useEffect(() => {\n    setParams([x, y, radius]);\n  }, [x, y, radius]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <Shape name={name} type={Shapes.Circle} params={params}>\n        {children}\n      </Shape>\n    </PropsContext.Provider>\n  );\n};\n\nexport default Circle;\n","import React, { useEffect, useState } from 'react';\nimport { PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EllipseType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Ellipse: React.FC<EllipseType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EllipseType>(props);\n  const { properties } = propsContext;\n  const { name, x, y, width, height } = properties;\n  const [params, setParams] = useState([x, y, width, height]);\n\n  useEffect(() => {\n    setParams([x, y, width, height]);\n  }, [x, y, width, height]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <Shape name={name} type={Shapes.Ellipse} params={params}>\n        {children}\n      </Shape>\n    </PropsContext.Provider>\n  );\n};\n\nexport default Ellipse;\n","import React, { useEffect, useState } from 'react';\nimport { PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { StarType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Star: React.FC<StarType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<StarType>(props);\n  const { properties } = propsContext;\n  const { name, x, y, radius, innerRadius, points = 5, rotation = 0 } = properties;\n  const [params, setParams] = useState([x, y, points, radius, innerRadius || radius / 2, rotation]);\n\n  useEffect(() => {\n    setParams([x, y, points, radius, innerRadius || radius / 2, rotation]);\n  }, [x, y, points, radius, innerRadius, rotation]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <Shape name={name} type={Shapes.Star} params={params}>\n        {children}\n      </Shape>\n    </PropsContext.Provider>\n  );\n};\n\nexport default Star;\n","import React from 'react';\nimport { usePointsContext, usePropsContext } from '../../hooks';\nimport { PointsContext, PropsContext } from '../../contexts';\nimport { ShapeGenericType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst noParams: number[] = [];\n\nconst Polygon: React.FC<ShapeGenericType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<ShapeGenericType>(props);\n  const { properties } = propsContext;\n  const { name } = properties;\n  const pointsContext = usePointsContext();\n  const { points } = pointsContext;\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PointsContext.Provider value={pointsContext}>\n        <Shape name={name} type={Shapes.Polygon} params={noParams} points={points}>\n          {children}\n        </Shape>\n      </PointsContext.Provider>\n    </PropsContext.Provider>\n  );\n};\n\nexport default Polygon;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { PointsContext, PropsContext } from '../../contexts';\nimport { useId, usePropsContext } from '../../hooks';\nimport { Coords, PointProps } from '../../types';\n\nconst Point: React.FC<PointProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<PointProps>(props);\n  const { properties } = propsContext;\n  const { id, x, y } = properties;\n  const pointId = useId(id);\n  const { addPoint, removePoint } = useContext(PointsContext);\n  const [point, setPoint] = useState<Coords>({ x, y });\n\n  useEffect(() => {\n    setPoint({ x, y });\n  }, [x, y]);\n\n  useEffect(() => {\n    addPoint(pointId, point);\n  }, [point, pointId, addPoint]);\n\n  useEffect(() => {\n    return () => {\n      removePoint(pointId);\n    };\n  }, [pointId, removePoint]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default Point;\n","import React, { useEffect, useState } from 'react';\nimport { PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { ArcType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst Arc: React.FC<ArcType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<ArcType>(props);\n  const { properties } = propsContext;\n  const { name, x, y, radius, startAngle, endAngle, anticlockwise = false } = properties;\n  const [params, setParams] = useState([x, y, radius, startAngle, endAngle, anticlockwise ? 1 : 0]);\n\n  useEffect(() => {\n    setParams([x, y, radius, startAngle, endAngle, anticlockwise ? 1 : 0]);\n  }, [x, y, radius, startAngle, endAngle, anticlockwise]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <Shape name={name} type={Shapes.Arc} params={params}>\n        {children}\n      </Shape>\n    </PropsContext.Provider>\n  );\n};\n\nexport default Arc;\n","import React, { useEffect, useState } from 'react';\nimport { PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { BezierCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst BezierCurve: React.FC<BezierCurveType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<BezierCurveType>(props);\n  const { properties } = propsContext;\n  const { name, xFrom = 0, yFrom = 0, xTo, yTo, controlX, controlY, controlX2, controlY2 } = properties;\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY, controlX2, controlY2]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <Shape name={name} type={Shapes.BezierCurve} params={params}>\n        {children}\n      </Shape>\n    </PropsContext.Provider>\n  );\n};\n\nexport default BezierCurve;\n","import React, { useEffect, useState } from 'react';\nimport { PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { QuadraticCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst QuadraticCurve: React.FC<QuadraticCurveType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<QuadraticCurveType>(props);\n  const { properties } = propsContext;\n  const { name, xFrom = 0, yFrom = 0, xTo, yTo, controlX, controlY } = properties;\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <Shape name={name} type={Shapes.QuadraticCurve} params={params}>\n        {children}\n      </Shape>\n    </PropsContext.Provider>\n  );\n};\n\nexport default QuadraticCurve;\n","import React, { useEffect, useState } from 'react';\nimport { PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { ArcCurveType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst ArcCurve: React.FC<ArcCurveType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<ArcCurveType>(props);\n  const { properties } = propsContext;\n  const { name, radius, xFrom = 0, yFrom = 0, xTo, yTo, controlX, controlY } = properties;\n  const [params, setParams] = useState([xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n\n  useEffect(() => {\n    setParams([xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n  }, [xFrom, yFrom, xTo, yTo, controlX, controlY, radius]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <Shape name={name} type={Shapes.ArcCurve} params={params}>\n        {children}\n      </Shape>\n    </PropsContext.Provider>\n  );\n};\n\nexport default ArcCurve;\n","import React from 'react';\nimport { usePointsContext, usePropsContext } from '../../hooks';\nimport { PointsContext, PropsContext } from '../../contexts';\nimport { ShapeGenericType, Shapes } from '../../types';\nimport Shape from './Shape';\n\nconst noParams: number[] = [];\n\nconst Path: React.FC<ShapeGenericType> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<ShapeGenericType>(props);\n  const { properties } = propsContext;\n  const { name } = properties;\n  const pointsContext = usePointsContext();\n  const { points } = pointsContext;\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PointsContext.Provider value={pointsContext}>\n        <Shape name={name} type={Shapes.Path} params={noParams} points={points}>\n          {children}\n        </Shape>\n      </PointsContext.Provider>\n    </PropsContext.Provider>\n  );\n};\n\nexport default Path;\n","import React, { PropsWithChildren, ReactNode, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { useFilterProps } from '../hooks';\nimport { PixiFilterProps } from '../props';\nimport { BlendModes } from '../types';\n\nconst PixiFilter: React.FC<PixiFilterProps<PIXI.Filter>> = <T extends PIXI.Filter>(props: PropsWithChildren<PixiFilterProps<T>>) => {\n  const {\n    item,\n    blendMode = BlendModes.Normal,\n    autoFit = true,\n    enabled = true,\n    padding = 0,\n    resolution = PIXI.settings.FILTER_RESOLUTION,\n    children\n  } = props;\n\n  const [effects, setEffects] = useState<ReactNode[]>([]);\n\n  useFilterProps(item, {\n    autoFit,\n    blendMode,\n    enabled,\n    padding,\n    resolution\n  });\n\n  useEffect(() => {\n    if (children) {\n      if (Array.isArray(children)) {\n        setEffects(children);\n      } else {\n        setEffects([children]);\n      }\n    } else {\n      setEffects([]);\n    }\n  }, [children]);\n\n  return React.createElement(React.Fragment, null, ...effects);\n};\n\nexport default PixiFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { PropsContext } from '../contexts';\nimport { useFilter, useFilterProps, usePropsContext } from '../hooks';\nimport { AlphaFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst AlphaFilter: React.FC<AlphaFilterProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AlphaFilterProps>(props);\n  const { properties } = propsContext;\n  const filter = useFilter(new PIXI.filters.AlphaFilter());\n  const { alpha = 1 } = properties;\n\n  useFilterProps(filter, {\n    alpha\n  });\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiFilter item={filter} {...properties}>\n        {children}\n      </PixiFilter>\n    </PropsContext.Provider>\n  );\n};\n\nexport default AlphaFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { PropsContext } from '../contexts';\nimport { useFilter, useFilterProps, usePropsContext } from '../hooks';\nimport { BlurFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst BlurFilter: React.FC<BlurFilterProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<BlurFilterProps>(props);\n  const { properties } = propsContext;\n  const filter = useFilter(new PIXI.filters.BlurFilter());\n  const { blur = 2, blurX = 2, blurY = 2, quality = 1, repeatEdgePixels = false } = properties;\n\n  useFilterProps(filter, {\n    blur,\n    blurX,\n    blurY,\n    quality,\n    repeatEdgePixels\n  });\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiFilter item={filter} {...properties}>\n        {children}\n      </PixiFilter>\n    </PropsContext.Provider>\n  );\n};\n\nexport default BlurFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { PropsContext } from '../contexts';\nimport { useFilter, usePropsContext } from '../hooks';\nimport { AbstractFilterProps } from '../props';\nimport PixiFilter from './PixiFilter';\n\nconst FXAAFilter: React.FC<AbstractFilterProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AbstractFilterProps>(props);\n  const { properties } = propsContext;\n  const filter = useFilter(new PIXI.filters.FXAAFilter());\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiFilter item={filter} {...properties}>\n        {children}\n      </PixiFilter>\n    </PropsContext.Provider>\n  );\n};\n\nexport default FXAAFilter;\n","import * as PIXI from 'pixi.js';\nimport React from 'react';\nimport { PropsContext } from '../contexts';\nimport { useFilter, useFilterProps, usePropsContext } from '../hooks';\nimport PixiFilter from './PixiFilter';\nimport { NoiseFilterProps } from '../props';\n\nconst FXAA_SEED = Math.random();\n\nconst FXAAFilter: React.FC<NoiseFilterProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<NoiseFilterProps>(props);\n  const { properties } = propsContext;\n  const filter = useFilter(new PIXI.filters.NoiseFilter());\n  const { noise = 0.5, seed = FXAA_SEED } = properties;\n\n  useFilterProps(filter, {\n    noise,\n    seed\n  });\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiFilter item={filter} {...properties} enabled={undefined}>\n        {children}\n      </PixiFilter>\n    </PropsContext.Provider>\n  );\n};\n\nexport default FXAAFilter;\n","import * as PIXI from 'pixi.js';\nimport React, { useCallback, useContext, useEffect, useReducer } from 'react';\nimport { useFilter, useFilterProps, usePropsContext } from '../hooks';\nimport { AlphaFilterProps } from '../props';\nimport { EffectContext, PropsContext, RenderingContext } from '../contexts';\nimport PixiFilter from './PixiFilter';\nimport { EffectAction, EffectActionType, EffectState, EffectType, EffectValue } from '../types';\n\nconst updateColorMatrix = (filter: PIXI.filters.ColorMatrixFilter, state: EffectState) => {\n  filter.reset();\n  state.effects.forEach((id) => {\n    const effectData = state.effectMap.get(id);\n\n    if (effectData) {\n      const { params = [], multiply = true, enabled = true } = effectData;\n\n      if (!enabled) return;\n\n      switch (effectData.effect) {\n        case EffectType.BlackAndWhite:\n          filter.blackAndWhite(multiply);\n          break;\n        case EffectType.Brightness:\n          filter.brightness(params[0], multiply);\n          break;\n        case EffectType.Browni:\n          filter.browni(multiply);\n          break;\n        case EffectType.ColorTone:\n          filter.colorTone(params[0], params[1], params[2], params[3], multiply);\n          break;\n        case EffectType.Contrast:\n          filter.contrast(params[0], multiply);\n          break;\n        case EffectType.Desaturate:\n          filter.desaturate();\n          break;\n        case EffectType.GreyScale:\n          filter.greyscale(params[0], multiply);\n          break;\n        case EffectType.Hue:\n          filter.hue(params[0], multiply);\n          break;\n        case EffectType.Kodachrome:\n          filter.kodachrome(multiply);\n          break;\n        case EffectType.Lsd:\n          filter.lsd(multiply);\n          break;\n        case EffectType.Negative:\n          filter.negative(multiply);\n          break;\n        case EffectType.Night:\n          filter.night(params[0], multiply);\n          break;\n        case EffectType.Polaroid:\n          filter.polaroid(multiply);\n          break;\n        case EffectType.Predator:\n          filter.predator(params[0], multiply);\n          break;\n        case EffectType.Saturate:\n          filter.saturate(params[0], multiply);\n          break;\n        case EffectType.Sepia:\n          filter.sepia(multiply);\n          break;\n        case EffectType.Technicolor:\n          filter.technicolor(multiply);\n          break;\n        case EffectType.ToBGR:\n          filter.toBGR(multiply);\n          break;\n        case EffectType.Vintage:\n          filter.vintage(multiply);\n          break;\n      }\n    }\n  });\n};\n\nconst ColorMatrixFilter: React.FC<AlphaFilterProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AlphaFilterProps>(props);\n  const { properties } = propsContext;\n  const filter = useFilter(new PIXI.filters.ColorMatrixFilter());\n  const { update } = useContext(RenderingContext);\n  const { alpha = 1 } = properties;\n\n  const reducer = useCallback((state: EffectState, action: EffectAction): EffectState => {\n    const { id } = action.value;\n    let index, effects;\n\n    switch (action.type) {\n      case EffectActionType.UpdateEffect:\n        effects = [...state.effects];\n        if (action.value.effect !== undefined) {\n          index = state.effects.indexOf(id);\n          state.effectMap.set(id, action.value);\n\n          if (index < 0) {\n            effects.push(id);\n          }\n          return {\n            ...state,\n            effects\n          };\n        } else {\n          return state;\n        }\n      case EffectActionType.RemoveEffect:\n        index = state.effects.indexOf(id);\n        if (index >= 0) {\n          effects = [...state.effects];\n          effects.splice(index, 1);\n          state.effectMap.delete(id);\n          return {\n            ...state,\n            effects\n          };\n        } else {\n          return state;\n        }\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, {\n    effects: [],\n    effectMap: new Map()\n  });\n\n  const updateEffect = useCallback((value: EffectValue) => {\n    dispatch({ type: EffectActionType.UpdateEffect, value });\n  }, []);\n  const removeEffect = useCallback((id: string) => {\n    dispatch({\n      type: EffectActionType.RemoveEffect,\n      value: {\n        id\n      }\n    });\n  }, []);\n\n  useFilterProps(filter, {\n    alpha\n  });\n\n  useEffect(() => {\n    updateColorMatrix(filter, state);\n    update();\n  }, [filter, state, update]);\n\n  return (\n    <PropsContext.Provider value={propsContext}>\n      <PixiFilter item={filter} {...properties}>\n        <EffectContext.Provider value={{ updateEffect, removeEffect }}>{children}</EffectContext.Provider>\n      </PixiFilter>\n    </PropsContext.Provider>\n  );\n};\n\nexport default ColorMatrixFilter;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BlackAndWhiteEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.BlackAndWhite\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default BlackAndWhiteEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { AmountValueEffect, BrightnessEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BrightnessEffect: React.FC<BrightnessEffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AmountValueEffect>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true, amount = 0.5 } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Brightness,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default BrightnessEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst BrowniEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Browni\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default BrowniEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { ColorToneProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ColorToneEffect: React.FC<ColorToneProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<ColorToneProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true, desaturation, toned, lightColor, darkColor } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.ColorTone,\n      params: [desaturation, toned, lightColor, darkColor]\n    });\n  }, [id, multiply, enabled, updateEffect, desaturation, toned, lightColor, darkColor]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default ColorToneEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { AmountValueEffect, ContrastEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ContrastEffect: React.FC<ContrastEffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AmountValueEffect>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true, amount = 0.5 } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Contrast,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default ContrastEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst DesaturateEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply: false,\n      enabled,\n      effect: EffectType.Desaturate\n    });\n  }, [id, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default DesaturateEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { AmountValueEffect, GreyScaleEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst GreyScaleEffect: React.FC<GreyScaleEffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AmountValueEffect>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true, amount = 0.5 } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.GreyScale,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default GreyScaleEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { HueEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst HueEffect: React.FC<HueEffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<HueEffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true, rotation = 0 } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Hue,\n      params: [rotation]\n    });\n  }, [id, multiply, enabled, updateEffect, rotation]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default HueEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst KodachromeEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Kodachrome\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default KodachromeEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst LsdEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Lsd\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default LsdEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst NegativeEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Negative\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default NegativeEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { AmountValueEffect, NightEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst NightEffect: React.FC<NightEffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AmountValueEffect>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true, amount = 0.5 } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Night,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default NightEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst PolaroidEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Polaroid\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default PolaroidEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { AmountValueEffect, PredatorEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst PredatorEffect: React.FC<PredatorEffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AmountValueEffect>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true, amount = 0.5 } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Predator,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default PredatorEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { AmountValueEffect, SaturateEffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst SaturateEffect: React.FC<SaturateEffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<AmountValueEffect>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true, amount = 0.5 } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Saturate,\n      params: [amount]\n    });\n  }, [id, multiply, enabled, updateEffect, amount]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default SaturateEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst SepiaEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Sepia\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default SepiaEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst TechnicolorEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Technicolor\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default TechnicolorEffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst ToBGREffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.ToBGR\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default ToBGREffect;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { EffectContext, PropsContext } from '../../contexts';\nimport { usePropsContext } from '../../hooks';\nimport { EffectProps } from '../../props';\nimport { EffectType } from '../../types';\n\nconst VintageEffect: React.FC<EffectProps> = ({ children, ...props }) => {\n  const propsContext = usePropsContext<EffectProps>(props);\n  const { properties } = propsContext;\n  const { multiply = true, enabled = true } = properties;\n  const [id] = useState(v4());\n  const { updateEffect, removeEffect } = useContext(EffectContext);\n\n  useEffect(() => {\n    updateEffect({\n      id,\n      multiply,\n      enabled,\n      effect: EffectType.Vintage\n    });\n  }, [id, multiply, enabled, updateEffect]);\n\n  useEffect(() => {\n    return () => {\n      removeEffect(id);\n    };\n  }, [id, removeEffect]);\n\n  return <PropsContext.Provider value={propsContext}>{children}</PropsContext.Provider>;\n};\n\nexport default VintageEffect;\n"],"sourceRoot":""}