{"version":3,"sources":["views/pages/NoiseFilter.tsx","views/PageIndex.tsx","views/pages/Filters.tsx"],"names":["noiseProps","filterProps","filter","prop","textures","galaxy","ship","NoiseFilterExample","useState","trackSize","setTrackSize","resize","useCallback","size","width","reducer","position","useReducer","update","onUpdate","onResize","texture","x","alignY","noise","NoiseFilterDoc","style","height","src","props","buildIndex","page","a","items","getPageChildren","pages","i","length","getComponentUrl","url","push","href","key","text","external","PageIndex","showTitle","links","setLinks","useEffect","then","Filters","Pages"],"mappings":"kOAQMA,EAA2B,CAC/B,CAAC,SAAS,EAAO,SAAU,MAAO,+BADH,mBAE5BC,cAAYC,QAAO,SAACC,GAAD,MAAsB,YAAZA,EAAK,QAGjCC,EAAW,CACfC,OAAQ,6BACRC,KAAM,iCAGFC,EAA+B,WAAO,IAAD,EACPC,mBAAS,GADF,mBAClCC,EADkC,KACvBC,EADuB,KAEnCC,EAASC,uBAAY,SAACC,GAAD,OAAUH,EAAaG,EAAKC,MAAQ,OAAM,IAC/DC,EAAUH,uBAAY,SAACI,GAAD,OAAeA,EAAW,GAAKP,IAAW,CAACA,IAH9B,EAIdQ,qBAAWF,EAAS,GAJN,mBAIlCC,EAJkC,KAIxBE,EAJwB,KAMzC,OACE,kBAAC,IAAD,CAAYd,SAAUA,EAAUe,SAAUD,EAAQE,SAAUT,GAC1D,kBAAC,IAAD,CAAkBU,QAAS,WAC3B,kBAAC,IAAD,CAAYA,QAAS,OAAQC,EAAGN,EAAW,IAAKO,OAAQ,IACtD,kBAAC,IAAD,CAAaC,MAAO,OA4BbC,UAtBkB,WAC/B,OACE,oCACE,kBAAC,IAAD,oBACA,kBAAC,IAAD,4CAEE,6BAFF,qKAMA,kBAAC,IAAD,CAAOC,MAAO,CAAEC,OAAQ,MACtB,kBAACpB,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYqB,IAAK,8CAEnB,kBAAC,IAAD,mBACA,kBAAC,IAAD,CAAYC,MAAO7B,O,sGC/CnB8B,EAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACXC,EAAwB,GADb,SAEGC,YAAgBH,GAFnB,OAEXI,EAFW,OAIRC,EAAI,EAJI,YAIDA,EAAID,EAAME,QAJT,iCAKGC,YAAgBH,EAAMC,IALzB,OAKTG,EALS,OAOfN,EAAMO,KAAK,kBAAC,IAAD,CAAoBC,KAAI,WAAMF,GAAOG,IAAKP,EAAMC,GAAIO,KAAMR,EAAMC,GAAIQ,UAAQ,KAPxE,QAIiBR,IAJjB,gDAUVH,GAVU,4CAAH,sDA4BDY,IAf6B,SAAC,GAAgC,IAA9Bd,EAA6B,EAA7BA,KAA6B,IAAvBe,iBAAuB,WAChDtC,mBAAyB,IADuB,mBACnEuC,EADmE,KAC5DC,EAD4D,KAO1E,OAJAC,qBAAU,WACRnB,EAAWC,GAAMmB,KAAKF,KACrB,CAACjB,IAGF,oCACGe,GAAa,kBAAC,IAAD,mBAAqBf,IAClCgB,K,gCC3BP,wFAKa9C,EAA+B,CAC1C,CAAC,aAAa,EAAO,YAAa,oBAAqB,kDACvD,CAAC,WAAW,EAAO,UAAW,OAAQ,kFACtC,CAAC,WAAW,EAAO,UAAW,OAAQ,uDACtC,CACE,WACA,EACA,SACA,IACA,wKAEF,CAAC,cAAc,EAAO,SAAU,IAAK,iCAOxBkD,UAJW,WACxB,OAAO,kBAAC,IAAD,CAAWpB,KAAMqB,IAAMD","file":"static/js/34.4a4ea55d.chunk.js","sourcesContent":["import { Block } from 'framework7-react';\nimport { PixiCanvas, PixiSprite, PixiTilingSprite, NoiseFilter } from 'pixi-reactive';\nimport React, { useCallback, useReducer, useState } from 'react';\nimport { filterProps } from './Filters';\nimport CodeViewer from '../CodeViewer';\nimport PropsTable, { PropsDefinition } from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst noiseProps: PropsDefinition = [\n  ['noise', false, 'number', '0.5', 'Value of the noise applied'],\n  ...filterProps.filter((prop) => prop[0] !== 'enabled')\n];\n\nconst textures = {\n  galaxy: './static/assets/galaxy.png',\n  ship: './static/assets/spaceship.png'\n};\n\nconst NoiseFilterExample: React.FC = () => {\n  const [trackSize, setTrackSize] = useState(0);\n  const resize = useCallback((size) => setTrackSize(size.width + 300), []);\n  const reducer = useCallback((position) => (position + 1) % trackSize, [trackSize]);\n  const [position, update] = useReducer(reducer, 0);\n\n  return (\n    <PixiCanvas textures={textures} onUpdate={update} onResize={resize}>\n      <PixiTilingSprite texture={'galaxy'} />\n      <PixiSprite texture={'ship'} x={position - 150} alignY={0.5}>\n        <NoiseFilter noise={1} />\n      </PixiSprite>\n    </PixiCanvas>\n  );\n};\n\nconst NoiseFilterDoc: React.FC = () => {\n  return (\n    <>\n      <StyledTitle>NoiseFilter</StyledTitle>\n      <StyledIntroduction>\n        Apply a noise filter to the element.\n        <br />\n        It looks like there's some kind of issue enabling/disabling this filter. I'm investigating it, but for now the filter cannot be\n        disabled or removed once applied.\n      </StyledIntroduction>\n      <Block style={{ height: 300 }}>\n        <NoiseFilterExample />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/NoiseFilterExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={noiseProps} />\n    </>\n  );\n};\n\nexport default NoiseFilterDoc;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { getComponentUrl, getPageChildren, PageIndexProps, Pages } from '../pages';\nimport { StyledTitle, IndexComponentLink } from './StyledComponents';\n\nconst buildIndex = async (page: Pages) => {\n  const items: ReactElement[] = [];\n  const pages = await getPageChildren(page);\n\n  for (let i = 0; i < pages.length; i++) {\n    const url = await getComponentUrl(pages[i]);\n\n    items.push(<IndexComponentLink href={`#${url}`} key={pages[i]} text={pages[i]} external />);\n  }\n\n  return items;\n};\n\nconst PageIndex: React.FC<PageIndexProps> = ({ page, showTitle = true }) => {\n  const [links, setLinks] = useState<ReactElement[]>([]);\n\n  useEffect(() => {\n    buildIndex(page).then(setLinks);\n  }, [page]);\n\n  return (\n    <>\n      {showTitle && <StyledTitle>{`All ${page}`}</StyledTitle>}\n      {links}\n    </>\n  );\n};\n\nexport default PageIndex;\n","import React from 'react';\nimport { Pages } from '../../pages';\nimport PageIndex from '../PageIndex';\nimport { PropsDefinition } from '../PropsTable';\n\nexport const filterProps: PropsDefinition = [\n  ['blendMode', false, 'BlendMode', 'BlendModes.Normal', 'Mode used to blend the filter with the element'],\n  ['autoFit', false, 'boolean', 'true', 'If enabled, it will fit the filter area into boundaries for better performance'],\n  ['enabled', false, 'boolean', 'true', 'Whether the filter is applied to the element or not'],\n  [\n    'padding',\n    false,\n    'number',\n    '0',\n    'Some filters require extra space to breath such as a blur. Increasing this will add extra width and height to the bounds of the object that the filter is applied to'\n  ],\n  ['resolution', false, 'number', '1', 'The resolution of the filter']\n];\n\nconst Filters: React.FC = () => {\n  return <PageIndex page={Pages.Filters} />;\n};\n\nexport default Filters;\n"],"sourceRoot":""}