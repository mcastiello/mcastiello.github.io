{"version":3,"sources":["views/PageIndex.tsx","views/pages/Effects.tsx","views/pages/ColorToneEffect.tsx"],"names":["buildIndex","page","a","items","getPageChildren","pages","i","length","getComponentUrl","url","push","href","key","text","external","PageIndex","showTitle","useState","links","setLinks","useEffect","then","effectProps","amountEffectProps","Effects","Pages","props","textures","galaxy","ship","ColorToneEffectExample","enabled","trackSize","setTrackSize","resize","useCallback","size","width","reducer","position","useReducer","update","onUpdate","onResize","texture","x","alignY","desaturation","toned","lightColor","darkColor","ColorToneEffectDoc","setEnabled","toggle","style","textAlign","marginRight","defaultChecked","onChange","height","src"],"mappings":"yMAIMA,EAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACXC,EAAwB,GADb,SAEGC,YAAgBH,GAFnB,OAEXI,EAFW,OAIRC,EAAI,EAJI,YAIDA,EAAID,EAAME,QAJT,iCAKGC,YAAgBH,EAAMC,IALzB,OAKTG,EALS,OAOfN,EAAMO,KAAK,kBAAC,IAAD,CAAoBC,KAAI,WAAMF,GAAOG,IAAKP,EAAMC,GAAIO,KAAMR,EAAMC,GAAIQ,UAAQ,KAPxE,QAIiBR,IAJjB,gDAUVH,GAVU,4CAAH,sDA4BDY,IAf6B,SAAC,GAAgC,IAA9Bd,EAA6B,EAA7BA,KAA6B,IAAvBe,iBAAuB,WAChDC,mBAAyB,IADuB,mBACnEC,EADmE,KAC5DC,EAD4D,KAO1E,OAJAC,qBAAU,WACRpB,EAAWC,GAAMoB,KAAKF,KACrB,CAAClB,IAGF,oCACGe,GAAa,kBAAC,IAAD,mBAAqBf,IAClCiB,K,gCC3BP,0IAKaI,EAA+B,CAC1C,CAAC,YAAY,EAAO,UAAW,OAAQ,wEACvC,CAAC,WAAW,EAAO,UAAW,OAAQ,uDAG3BC,EAAkC,CAC7C,CAAC,UAAU,EAAO,SAAU,MAAO,2BADU,OAExCD,GAOQE,UAJW,WACxB,OAAO,kBAAC,IAAD,CAAWvB,KAAMwB,IAAMD,Y,8HCR1BE,EAAsB,CAC1B,CAAC,gBAAgB,EAAM,SAAU,OAAQ,uBACzC,CAAC,SAAS,EAAM,SAAU,OAAQ,gBAClC,CAAC,cAAc,EAAM,SAAU,OAAQ,+BACvC,CAAC,aAAa,EAAM,SAAU,OAAQ,+BAJZ,mBAKvBJ,gBAGCK,EAAW,CACfC,OAAQ,6BACRC,KAAM,iCAGFC,EAAyD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAC5Cd,mBAAS,GADmC,mBACvEe,EADuE,KAC5DC,EAD4D,KAExEC,EAASC,uBAAY,SAACC,GAAD,OAAUH,EAAaG,EAAKC,MAAQ,OAAM,IAC/DC,EAAUH,uBAAY,SAACI,GAAD,OAAeA,EAAW,GAAKP,IAAW,CAACA,IAHO,EAInDQ,qBAAWF,EAAS,GAJ+B,mBAIvEC,EAJuE,KAI7DE,EAJ6D,KAM9E,OACE,kBAAC,IAAD,CAAYd,SAAUA,EAAUe,SAAUD,EAAQE,SAAUT,GAC1D,kBAAC,IAAD,CAAkBU,QAAS,WAC3B,kBAAC,IAAD,CAAYA,QAAS,OAAQC,EAAGN,EAAW,IAAKO,OAAQ,KACxD,kBAAC,IAAD,CAAmBf,QAASA,GAC1B,kBAAC,IAAD,CAAiBgB,aAAc,GAAKC,MAAO,GAAKC,WAAY,QAAUC,UAAW,WAiC1EC,UA3BsB,WAAO,IAAD,EACXlC,oBAAS,GADE,mBAClCc,EADkC,KACzBqB,EADyB,KAEnCC,EAASlB,uBAAY,kBAAMiB,GAAYrB,KAAU,CAACA,IAExD,OACE,oCACE,kBAAC,IAAD,wBACA,kBAAC,IAAD,6JAIA,kBAAC,IAAD,CAAOuB,MAAO,CAAEC,UAAW,UACzB,0BAAMD,MAAO,CAAEE,YAAa,KAAO,iBACnC,kBAAC,IAAD,CAAQC,gBAAc,EAACC,SAAUL,KAEnC,kBAAC,IAAD,CAAOC,MAAO,CAAEK,OAAQ,MACtB,kBAAC7B,EAAD,CAAwBC,QAASA,KAEnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY6B,IAAK,kDAEnB,kBAAC,IAAD,mBACA,kBAAC,IAAD,CAAYlC,MAAOA","file":"static/js/17.63bdfc08.chunk.js","sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\nimport { getComponentUrl, getPageChildren, PageIndexProps, Pages } from '../pages';\nimport { StyledTitle, IndexComponentLink } from './StyledComponents';\n\nconst buildIndex = async (page: Pages) => {\n  const items: ReactElement[] = [];\n  const pages = await getPageChildren(page);\n\n  for (let i = 0; i < pages.length; i++) {\n    const url = await getComponentUrl(pages[i]);\n\n    items.push(<IndexComponentLink href={`#${url}`} key={pages[i]} text={pages[i]} external />);\n  }\n\n  return items;\n};\n\nconst PageIndex: React.FC<PageIndexProps> = ({ page, showTitle = true }) => {\n  const [links, setLinks] = useState<ReactElement[]>([]);\n\n  useEffect(() => {\n    buildIndex(page).then(setLinks);\n  }, [page]);\n\n  return (\n    <>\n      {showTitle && <StyledTitle>{`All ${page}`}</StyledTitle>}\n      {links}\n    </>\n  );\n};\n\nexport default PageIndex;\n","import React from 'react';\nimport { Pages } from '../../pages';\nimport PageIndex from '../PageIndex';\nimport { PropsDefinition } from '../PropsTable';\n\nexport const effectProps: PropsDefinition = [\n  ['multiply', false, 'boolean', 'true', 'Whether the effect should be multiplied onto the color matrix or not'],\n  ['enabled', false, 'boolean', 'true', 'Whether the effect is applied to the filter or not']\n];\n\nexport const amountEffectProps: PropsDefinition = [\n  ['amount', false, 'number', '0.5', 'Strength of the effect'],\n    ...effectProps\n];\n\nconst Effects: React.FC = () => {\n  return <PageIndex page={Pages.Effects} />;\n};\n\nexport default Effects;\n","import { Block, Toggle } from 'framework7-react';\nimport { PixiCanvas, PixiSprite, PixiTilingSprite, ColorMatrixFilter, ColorToneEffect } from 'pixi-reactive';\nimport React, { useCallback, useReducer, useState } from 'react';\nimport { effectProps } from './Effects';\nimport CodeViewer from '../CodeViewer';\nimport PropsTable, { PropsDefinition } from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst props: PropsDefinition = [\n  ['desaturation', true, 'number', 'null', 'Desaturation amount'],\n  ['toned', true, 'number', 'null', 'Toned amount'],\n  ['lightColor', true, 'number', 'null', 'Tone value for light colors'],\n  ['darkColor', true, 'number', 'null', 'Tone value for dark colors'],\n  ...effectProps\n];\n\nconst textures = {\n  galaxy: './static/assets/galaxy.png',\n  ship: './static/assets/spaceship.png'\n};\n\nconst ColorToneEffectExample: React.FC<{ enabled: boolean }> = ({ enabled }) => {\n  const [trackSize, setTrackSize] = useState(0);\n  const resize = useCallback((size) => setTrackSize(size.width + 300), []);\n  const reducer = useCallback((position) => (position + 1) % trackSize, [trackSize]);\n  const [position, update] = useReducer(reducer, 0);\n\n  return (\n    <PixiCanvas textures={textures} onUpdate={update} onResize={resize}>\n      <PixiTilingSprite texture={'galaxy'} />\n      <PixiSprite texture={'ship'} x={position - 150} alignY={0.5} />\n      <ColorMatrixFilter enabled={enabled}>\n        <ColorToneEffect desaturation={0.5} toned={0.5} lightColor={0x44e580} darkColor={0x00ff34} />\n      </ColorMatrixFilter>\n    </PixiCanvas>\n  );\n};\n\nconst ColorToneEffectDoc: React.FC = () => {\n  const [enabled, setEnabled] = useState(true);\n  const toggle = useCallback(() => setEnabled(!enabled), [enabled]);\n\n  return (\n    <>\n      <StyledTitle>ColorToneEffect</StyledTitle>\n      <StyledIntroduction>\n        This effect is a bit of a mystery, the official description says: We don't know exactly what it does, kind of gradient map, but\n        funny to play with!.\n      </StyledIntroduction>\n      <Block style={{ textAlign: 'right' }}>\n        <span style={{ marginRight: 10 }}>{'Toggle Filter'}</span>\n        <Toggle defaultChecked onChange={toggle} />\n      </Block>\n      <Block style={{ height: 300 }}>\n        <ColorToneEffectExample enabled={enabled} />\n      </Block>\n      <Block>\n        <CodeViewer src={'./static/examples/ColorToneEffectExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={props} />\n    </>\n  );\n};\n\nexport default ColorToneEffectDoc;\n"],"sourceRoot":""}