{"version":3,"sources":["views/pages/PixiMask.tsx","views/ComponentLink.tsx"],"names":["maskProps","PixiMaskExample","enabled","useReducer","x","position","update","onUpdate","tileY","width","height","alignY","alignX","src","PixiMaskDoc","useState","setEnabled","toggle","useCallback","page","Pages","PixiTexture","style","textAlign","marginRight","defaultChecked","onChange","props","ComponentLink","className","dispatch","useContext","DispatchContext","url","setUrl","useEffect","getComponentUrl","then","href","key","text","onClick"],"mappings":"gOASMA,EAA6B,CACjC,CAAC,WAAW,EAAO,UAAW,OAAQ,qDACtC,CAAC,WAAW,EAAO,SAAU,OAAQ,mCAGjCC,EAAkD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAC5CC,sBAAW,SAACC,GAAD,OAAOA,EAAI,IAAG,GADmB,mBAChEC,EADgE,KACtDC,EADsD,KAGvE,OACE,kBAAC,IAAD,CAAYC,SAAUD,GACpB,kBAAC,IAAD,CAAkBE,MAAOH,EAAUI,MAAO,IAAKC,OAAQ,IAAKC,OAAQ,GAAKC,OAAQ,IAC/E,kBAAC,IAAD,CAAaC,IAAK,8BAClB,kBAAC,IAAD,CAAUX,QAASA,GACjB,kBAAC,IAAD,CAAaW,IAAK,yCAmCbC,UA5Be,WAAO,IAAD,EACJC,oBAAS,GADL,mBAC3Bb,EAD2B,KAClBc,EADkB,KAE5BC,EAASC,uBAAY,kBAAMF,GAAYd,KAAU,CAACA,IAExD,OACE,oCACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,2GACsG,IACpG,kBAAC,IAAD,CAAeiB,KAAMC,IAAMC,cAF7B,sHAKA,kBAAC,IAAD,CAAOC,MAAO,CAAEC,UAAW,UACzB,0BAAMD,MAAO,CAAEE,YAAa,KAAO,eACnC,kBAAC,IAAD,CAAQC,gBAAc,EAACC,SAAUT,KAEnC,kBAAC,IAAD,CAAOK,MAAO,CAAEZ,OAAQ,MACtB,kBAACT,EAAD,CAAiBC,QAASA,KAE5B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYW,IAAK,0CAEnB,kBAAC,IAAD,mBACA,kBAAC,IAAD,CAAYc,MAAO3B,O,6ECrCV4B,IAXsD,SAAC,GAAyB,IAAvBT,EAAsB,EAAtBA,KAAMU,EAAgB,EAAhBA,UACpEC,EAAaC,qBAAWC,KAAxBF,SADoF,EAEtEf,qBAFsE,mBAErFkB,EAFqF,KAEhFC,EAFgF,KAQ5F,OAJAC,qBAAU,WACRC,YAAgBjB,GAAMkB,MAAK,SAAAJ,GAAG,OAAIC,EAAO,IAAD,OAAKD,SAC5C,CAACd,IAEG,kBAAC,IAAD,CAAqBU,UAAWA,EAAWS,KAAML,EAAKM,IAAKpB,EAAMqB,KAAMrB,EAAMsB,QAAS,kBAAMX,EAASX","file":"static/js/37.edfbeec4.chunk.js","sourcesContent":["import { Block, Toggle } from 'framework7-react';\nimport { PixiCanvas, PixiMask, PixiTexture, PixiTilingSprite } from 'pixi-reactive';\nimport React, { useCallback, useReducer, useState } from 'react';\nimport { Pages } from '../../pages';\nimport CodeViewer from '../CodeViewer';\nimport ComponentLink from '../ComponentLink';\nimport PropsTable, { PropsDefinition } from '../PropsTable';\nimport { StyledIntroduction, StyledSectionTitle, StyledTitle } from '../StyledComponents';\n\nconst maskProps: PropsDefinition = [\n  ['enabled', false, 'boolean', 'true', 'Whether the mask is applied to the element or not'],\n  ['texture', false, 'string', 'null', 'Name of the texture to be used']\n];\n\nconst PixiMaskExample: React.FC<{ enabled: boolean }> = ({ enabled }) => {\n  const [position, update] = useReducer((x) => x - 1, 0);\n\n  return (\n    <PixiCanvas onUpdate={update}>\n      <PixiTilingSprite tileY={position} width={216} height={150} alignY={0.5} alignX={0.5}>\n        <PixiTexture src={'/static/assets/galaxy.png'} />\n        <PixiMask enabled={enabled}>\n          <PixiTexture src={'/static/assets/pixi-reactive.png'} />\n        </PixiMask>\n      </PixiTilingSprite>\n    </PixiCanvas>\n  );\n};\n\nconst PixiMaskDoc: React.FC = () => {\n  const [enabled, setEnabled] = useState(true);\n  const toggle = useCallback(() => setEnabled(!enabled), [enabled]);\n\n  return (\n    <>\n      <StyledTitle>PixiMask</StyledTitle>\n      <StyledIntroduction>\n        Apply a texture mask to the parent container, you can pass the texture id as a props or add a child{' '}\n        <ComponentLink page={Pages.PixiTexture} />. The mask has a flag that allow you to disable or enable it without the need of removing\n        it from the virtual dom.\n      </StyledIntroduction>\n      <Block style={{ textAlign: 'right' }}>\n        <span style={{ marginRight: 10 }}>{'Toggle Mask'}</span>\n        <Toggle defaultChecked onChange={toggle} />\n      </Block>\n      <Block style={{ height: 150 }}>\n        <PixiMaskExample enabled={enabled} />\n      </Block>\n      <Block>\n        <CodeViewer src={'/static/examples/PixiMaskExample.tsx'} />\n      </Block>\n      <StyledSectionTitle>Properties</StyledSectionTitle>\n      <PropsTable props={maskProps} />\n    </>\n  );\n};\n\nexport default PixiMaskDoc;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { DispatchContext, getComponentUrl, Pages } from '../pages';\nimport { StyledComponentLink } from './StyledComponents';\n\nconst ComponentLink: React.FC<{ page: Pages; className?: string }> = ({ page, className }) => {\n  const { dispatch } = useContext(DispatchContext);\n  const [url, setUrl] = useState<string|undefined>();\n\n  useEffect(() => {\n    getComponentUrl(page).then(url => setUrl(`#${url}`))\n  }, [page]);\n\n  return <StyledComponentLink className={className} href={url} key={page} text={page} onClick={() => dispatch(page)} />;\n};\n\nexport default ComponentLink;\n"],"sourceRoot":""}